//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Midway.ServiceClient.Model {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://synerdocs.ru", ConfigurationName="Model.IExchangeService")]
    public interface IExchangeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillCargoReceivedTi" +
            "tle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillCargoReceivedTi" +
            "tleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillCargoReceivedTi" +
            "tleServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentShortInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateGoodsTransportWaybillCargoReceivedTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleGeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillCargoReceivedTi" +
            "tle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillCargoReceivedTi" +
            "tleResponse")]
        System.IAsyncResult BeginGenerateGoodsTransportWaybillCargoReceivedTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateGoodsTransportWaybillCargoReceivedTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillCargoDeliveredT" +
            "itle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillCargoDeliveredT" +
            "itleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillCargoDeliveredT" +
            "itleServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentShortInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateGoodsTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleGeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillCargoDeliveredT" +
            "itle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillCargoDeliveredT" +
            "itleResponse")]
        System.IAsyncResult BeginGenerateGoodsTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateGoodsTransportWaybillCargoDeliveredTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetAvailableDepartments", ReplyAction="http://synerdocs.ru/IExchangeService/GetAvailableDepartmentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetAvailableDepartmentsServiceErrorFaultCont" +
            "ractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.AvailableDepartmentsResponse GetAvailableDepartments(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.AvailableDepartmentsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetAvailableDepartments", ReplyAction="http://synerdocs.ru/IExchangeService/GetAvailableDepartmentsResponse")]
        System.IAsyncResult BeginGetAvailableDepartments(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.AvailableDepartmentsRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.AvailableDepartmentsResponse EndGetAvailableDepartments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDocumentGoodsMarkingState", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentGoodsMarkingStateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDocumentGoodsMarkingStateServiceErrorFaul" +
            "tContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.DocumentGoodsMarkingStateResponse GetDocumentGoodsMarkingState(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentGoodsMarkingStateRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDocumentGoodsMarkingState", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentGoodsMarkingStateResponse")]
        System.IAsyncResult BeginGetDocumentGoodsMarkingState(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentGoodsMarkingStateRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGoodsMarkingStateResponse EndGetDocumentGoodsMarkingState(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetOrganizationPromoCodeList", ReplyAction="http://synerdocs.ru/IExchangeService/GetOrganizationPromoCodeListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetOrganizationPromoCodeListServiceErrorFaul" +
            "tContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.OrganizationPromoCode[] GetOrganizationPromoCodeList(string authToken, string boxId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetOrganizationPromoCodeList", ReplyAction="http://synerdocs.ru/IExchangeService/GetOrganizationPromoCodeListResponse")]
        System.IAsyncResult BeginGetOrganizationPromoCodeList(string authToken, string boxId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.OrganizationPromoCode[] EndGetOrganizationPromoCodeList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetPromoCodeByName", ReplyAction="http://synerdocs.ru/IExchangeService/GetPromoCodeByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetPromoCodeByNameServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationPromoCode))]
        Midway.ObjectModel.PromoCode GetPromoCodeByName(string authToken, string promoCodeName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetPromoCodeByName", ReplyAction="http://synerdocs.ru/IExchangeService/GetPromoCodeByNameResponse")]
        System.IAsyncResult BeginGetPromoCodeByName(string authToken, string promoCodeName, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.PromoCode EndGetPromoCodeByName(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/DeleteOrganizationPromoCode", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteOrganizationPromoCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/DeleteOrganizationPromoCodeServiceErrorFault" +
            "ContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void DeleteOrganizationPromoCode(string authToken, string boxId, string organizationPromoCodeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/DeleteOrganizationPromoCode", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteOrganizationPromoCodeResponse")]
        System.IAsyncResult BeginDeleteOrganizationPromoCode(string authToken, string boxId, string organizationPromoCodeId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteOrganizationPromoCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CheckCertificateList", ReplyAction="http://synerdocs.ru/IExchangeService/CheckCertificateListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CheckCertificateListServiceErrorFaultContrac" +
            "tFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.CertificateCheckInfo[] CheckCertificateList(string[] thumbprints);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CheckCertificateList", ReplyAction="http://synerdocs.ru/IExchangeService/CheckCertificateListResponse")]
        System.IAsyncResult BeginCheckCertificateList(string[] thumbprints, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.CertificateCheckInfo[] EndCheckCertificateList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateStatementOfInvoiceReglament", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateStatementOfInvoiceReglamentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateStatementOfInvoiceReglamentServiceEr" +
            "rorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent GenerateStatementOfInvoiceReglament(string authToken, string boxId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateStatementOfInvoiceReglament", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateStatementOfInvoiceReglamentResponse")]
        System.IAsyncResult BeginGenerateStatementOfInvoiceReglament(string authToken, string boxId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndGenerateStatementOfInvoiceReglament(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/SendStatementOfInvoiceReglament", ReplyAction="http://synerdocs.ru/IExchangeService/SendStatementOfInvoiceReglamentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/SendStatementOfInvoiceReglamentServiceErrorF" +
            "aultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ServiceDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ServiceDocumentWithSimpleSignature))]
        Midway.ObjectModel.SentMessage SendStatementOfInvoiceReglament(string authToken, Midway.ObjectModel.MessageOfStatement message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/SendStatementOfInvoiceReglament", ReplyAction="http://synerdocs.ru/IExchangeService/SendStatementOfInvoiceReglamentResponse")]
        System.IAsyncResult BeginSendStatementOfInvoiceReglament(string authToken, Midway.ObjectModel.MessageOfStatement message, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SentMessage EndSendStatementOfInvoiceReglament(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CheckNeedToStatementOfInvoiceReglament", ReplyAction="http://synerdocs.ru/IExchangeService/CheckNeedToStatementOfInvoiceReglamentRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CheckNeedToStatementOfInvoiceReglamentServic" +
            "eErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        bool CheckNeedToStatementOfInvoiceReglament(string authToken, string boxId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CheckNeedToStatementOfInvoiceReglament", ReplyAction="http://synerdocs.ru/IExchangeService/CheckNeedToStatementOfInvoiceReglamentRespon" +
            "se")]
        System.IAsyncResult BeginCheckNeedToStatementOfInvoiceReglament(string authToken, string boxId, System.AsyncCallback callback, object asyncState);
        
        bool EndCheckNeedToStatementOfInvoiceReglament(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferSeller", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferSellerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferSellerServiceErrorFaultC" +
            "ontractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneralTransferSeller ParseGeneralTransferSeller(string authToken, byte[] content);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferSeller", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferSellerResponse")]
        System.IAsyncResult BeginParseGeneralTransferSeller(string authToken, byte[] content, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneralTransferSeller EndParseGeneralTransferSeller(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferBuyerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferBuyerServiceErrorFaultCo" +
            "ntractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneralTransferBuyer ParseGeneralTransferBuyer(string authToken, byte[] content);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferBuyerResponse")]
        System.IAsyncResult BeginParseGeneralTransferBuyer(string authToken, byte[] content, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneralTransferBuyer EndParseGeneralTransferBuyer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseWorksTransferSeller", ReplyAction="http://synerdocs.ru/IExchangeService/ParseWorksTransferSellerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseWorksTransferSellerServiceErrorFaultCon" +
            "tractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.WorksTransferSeller ParseWorksTransferSeller(string authToken, byte[] content);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseWorksTransferSeller", ReplyAction="http://synerdocs.ru/IExchangeService/ParseWorksTransferSellerResponse")]
        System.IAsyncResult BeginParseWorksTransferSeller(string authToken, byte[] content, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.WorksTransferSeller EndParseWorksTransferSeller(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseWorksTransferBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/ParseWorksTransferBuyerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseWorksTransferBuyerServiceErrorFaultCont" +
            "ractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.WorksTransferBuyer ParseWorksTransferBuyer(string authToken, byte[] content);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseWorksTransferBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/ParseWorksTransferBuyerResponse")]
        System.IAsyncResult BeginParseWorksTransferBuyer(string authToken, byte[] content, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.WorksTransferBuyer EndParseWorksTransferBuyer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransferSeller", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGoodsTransferSellerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransferSellerServiceErrorFaultCon" +
            "tractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GoodsTransferSeller ParseGoodsTransferSeller(string authToken, byte[] content);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransferSeller", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGoodsTransferSellerResponse")]
        System.IAsyncResult BeginParseGoodsTransferSeller(string authToken, byte[] content, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GoodsTransferSeller EndParseGoodsTransferSeller(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransferBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGoodsTransferBuyerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransferBuyerServiceErrorFaultCont" +
            "ractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GoodsTransferBuyer ParseGoodsTransferBuyer(string authToken, byte[] content);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransferBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGoodsTransferBuyerResponse")]
        System.IAsyncResult BeginParseGoodsTransferBuyer(string authToken, byte[] content, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GoodsTransferBuyer EndParseGoodsTransferBuyer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionSeller", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionSellerResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionSellerServiceE" +
            "rrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneralTransferCorrectionSeller ParseGeneralTransferCorrectionSeller(string authToken, byte[] content);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionSeller", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionSellerResponse" +
            "")]
        System.IAsyncResult BeginParseGeneralTransferCorrectionSeller(string authToken, byte[] content, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneralTransferCorrectionSeller EndParseGeneralTransferCorrectionSeller(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionBuyerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionBuyerServiceEr" +
            "rorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneralTransferCorrectionBuyer ParseGeneralTransferCorrectionBuyer(string authToken, byte[] content);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionBuyerResponse")]
        System.IAsyncResult BeginParseGeneralTransferCorrectionBuyer(string authToken, byte[] content, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneralTransferCorrectionBuyer EndParseGeneralTransferCorrectionBuyer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionBuyerV3", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionBuyerV3Respons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionBuyerV3Service" +
            "ErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingResponse ParseGeneralTransferCorrectionBuyerV3(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionBuyerV3", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionBuyerV3Respons" +
            "e")]
        System.IAsyncResult BeginParseGeneralTransferCorrectionBuyerV3(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingResponse EndParseGeneralTransferCorrectionBuyerV3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferSellerV2", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferSellerV2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferSellerV2ServiceErrorFaul" +
            "tContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentShortInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneralTransferSellerV2ParsingResponse ParseGeneralTransferSellerV2(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferSellerV2ParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferSellerV2", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferSellerV2Response")]
        System.IAsyncResult BeginParseGeneralTransferSellerV2(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferSellerV2ParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneralTransferSellerV2ParsingResponse EndParseGeneralTransferSellerV2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferBuyerV2", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferBuyerV2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferBuyerV2ServiceErrorFault" +
            "ContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneralTransferBuyerV2ParsingResponse ParseGeneralTransferBuyerV2(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferBuyerV2ParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferBuyerV2", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferBuyerV2Response")]
        System.IAsyncResult BeginParseGeneralTransferBuyerV2(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferBuyerV2ParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneralTransferBuyerV2ParsingResponse EndParseGeneralTransferBuyerV2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillConsignorTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillConsignorTitleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillConsignorTitleServiceEr" +
            "rorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ForeignCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentShortInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.TransportWaybillConsignorTitleParsingResponse ParseTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsignorTitleParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillConsignorTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillConsignorTitleResponse")]
        System.IAsyncResult BeginParseTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsignorTitleParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.TransportWaybillConsignorTitleParsingResponse EndParseTransportWaybillConsignorTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCargoReceivedTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCargoReceivedTitleRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCargoReceivedTitleServi" +
            "ceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        Midway.ObjectModel.TransportWaybillCargoReceivedTitleParsingResponse ParseTransportWaybillCargoReceivedTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoReceivedParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCargoReceivedTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCargoReceivedTitleRespo" +
            "nse")]
        System.IAsyncResult BeginParseTransportWaybillCargoReceivedTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoReceivedParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.TransportWaybillCargoReceivedTitleParsingResponse EndParseTransportWaybillCargoReceivedTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCargoDeliveredTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCargoDeliveredTitleResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCargoDeliveredTitleServ" +
            "iceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        Midway.ObjectModel.TransportWaybillCargoDeliveredTitleParsingResponse ParseTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoDeliveredParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCargoDeliveredTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCargoDeliveredTitleResp" +
            "onse")]
        System.IAsyncResult BeginParseTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoDeliveredParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.TransportWaybillCargoDeliveredTitleParsingResponse EndParseTransportWaybillCargoDeliveredTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillConsigneeTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillConsigneeTitleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillConsigneeTitleServiceEr" +
            "rorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        Midway.ObjectModel.TransportWaybillConsigneeTitleParsingResponse ParseTransportWaybillConsigneeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsigneeTitleParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillConsigneeTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillConsigneeTitleResponse")]
        System.IAsyncResult BeginParseTransportWaybillConsigneeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsigneeTitleParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.TransportWaybillConsigneeTitleParsingResponse EndParseTransportWaybillConsigneeTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCarrierTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCarrierTitleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCarrierTitleServiceErro" +
            "rFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        Midway.ObjectModel.TransportWaybillCarrierTitleParsingResponse ParseTransportWaybillCarrierTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCarrierTitleParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCarrierTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillCarrierTitleResponse")]
        System.IAsyncResult BeginParseTransportWaybillCarrierTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCarrierTitleParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.TransportWaybillCarrierTitleParsingResponse EndParseTransportWaybillCarrierTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillDeliveryPlaceChangeTitl" +
            "e", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillDeliveryPlaceChangeTitl" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillDeliveryPlaceChangeTitl" +
            "eServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ForeignCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityPlaceChangeInitiator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurPlaceChangeInitiator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualPlaceChangeInitiator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingResponse ParseTransportWaybillDeliveryPlaceChangeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillDeliveryPlaceChangeTitl" +
            "e", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillDeliveryPlaceChangeTitl" +
            "eResponse")]
        System.IAsyncResult BeginParseTransportWaybillDeliveryPlaceChangeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingResponse EndParseTransportWaybillDeliveryPlaceChangeTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillDriverOrVehicleChangeTi" +
            "tle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillDriverOrVehicleChangeTi" +
            "tleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillDriverOrVehicleChangeTi" +
            "tleServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingResponse ParseTransportWaybillDriverOrVehicleChangeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillDriverOrVehicleChangeTi" +
            "tle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillDriverOrVehicleChangeTi" +
            "tleResponse")]
        System.IAsyncResult BeginParseTransportWaybillDriverOrVehicleChangeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingResponse EndParseTransportWaybillDriverOrVehicleChangeTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillExpeditorTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillExpeditorTitleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillExpeditorTitleServiceEr" +
            "rorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ForeignCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        Midway.ObjectModel.TransportWaybillExpeditorTitleParsingResponse ParseTransportWaybillExpeditorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillExpeditorTitleParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseTransportWaybillExpeditorTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseTransportWaybillExpeditorTitleResponse")]
        System.IAsyncResult BeginParseTransportWaybillExpeditorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillExpeditorTitleParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.TransportWaybillExpeditorTitleParsingResponse EndParseTransportWaybillExpeditorTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionSellerTitleV3", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionSellerTitleV3R" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionSellerTitleV3S" +
            "erviceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ForeignCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingResponse ParseGeneralTransferCorrectionSellerTitleV3(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionSellerTitleV3", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGeneralTransferCorrectionSellerTitleV3R" +
            "esponse")]
        System.IAsyncResult BeginParseGeneralTransferCorrectionSellerTitleV3(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingResponse EndParseGeneralTransferCorrectionSellerTitleV3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateWorksTransferSeller", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateWorksTransferSellerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateWorksTransferSellerServiceErrorFault" +
            "ContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneratedContent GenerateWorksTransferSeller(string authToken, Midway.ObjectModel.WorksTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateWorksTransferSeller", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateWorksTransferSellerResponse")]
        System.IAsyncResult BeginGenerateWorksTransferSeller(string authToken, Midway.ObjectModel.WorksTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneratedContent EndGenerateWorksTransferSeller(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransferSeller", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGoodsTransferSellerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransferSellerServiceErrorFault" +
            "ContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneratedContent GenerateGoodsTransferSeller(string authToken, Midway.ObjectModel.GoodsTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransferSeller", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGoodsTransferSellerResponse")]
        System.IAsyncResult BeginGenerateGoodsTransferSeller(string authToken, Midway.ObjectModel.GoodsTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneratedContent EndGenerateGoodsTransferSeller(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferSeller", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferSellerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferSellerServiceErrorFau" +
            "ltContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneratedContent GenerateGeneralTransferSeller(string authToken, Midway.ObjectModel.GeneralTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferSeller", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferSellerResponse")]
        System.IAsyncResult BeginGenerateGeneralTransferSeller(string authToken, Midway.ObjectModel.GeneralTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneratedContent EndGenerateGeneralTransferSeller(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferSellerV2", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferSellerV2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferSellerV2ServiceErrorF" +
            "aultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentShortInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateGeneralTransferSellerV2(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferSellerV2GeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferSellerV2", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferSellerV2Response")]
        System.IAsyncResult BeginGenerateGeneralTransferSellerV2(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferSellerV2GeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateGeneralTransferSellerV2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionSeller", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionSellerRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionSellerServi" +
            "ceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneratedContent GenerateGeneralTransferCorrectionSeller(string authToken, Midway.ObjectModel.GeneralTransferCorrectionSeller model, Midway.ObjectModel.DocumentGenerationOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionSeller", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionSellerRespo" +
            "nse")]
        System.IAsyncResult BeginGenerateGeneralTransferCorrectionSeller(string authToken, Midway.ObjectModel.GeneralTransferCorrectionSeller model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneratedContent EndGenerateGeneralTransferCorrectionSeller(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionSellerTitle" +
            "V3", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionSellerTitle" +
            "V3Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionSellerTitle" +
            "V3ServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ForeignCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateGeneralTransferCorrectionSellerTitleV3(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3GeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionSellerTitle" +
            "V3", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionSellerTitle" +
            "V3Response")]
        System.IAsyncResult BeginGenerateGeneralTransferCorrectionSellerTitleV3(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3GeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateGeneralTransferCorrectionSellerTitleV3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateWorksTransferBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateWorksTransferBuyerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateWorksTransferBuyerServiceErrorFaultC" +
            "ontractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.GeneratedContent GenerateWorksTransferBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.WorksTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateWorksTransferBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateWorksTransferBuyerResponse")]
        System.IAsyncResult BeginGenerateWorksTransferBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.WorksTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneratedContent EndGenerateWorksTransferBuyer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransferBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGoodsTransferBuyerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransferBuyerServiceErrorFaultC" +
            "ontractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneratedContent GenerateGoodsTransferBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.GoodsTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransferBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGoodsTransferBuyerResponse")]
        System.IAsyncResult BeginGenerateGoodsTransferBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.GoodsTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneratedContent EndGenerateGoodsTransferBuyer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferBuyerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferBuyerServiceErrorFaul" +
            "tContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneratedContent GenerateGeneralTransferBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.GeneralTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferBuyerResponse")]
        System.IAsyncResult BeginGenerateGeneralTransferBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.GeneralTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneratedContent EndGenerateGeneralTransferBuyer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferBuyerV2", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferBuyerV2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferBuyerV2ServiceErrorFa" +
            "ultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateGeneralTransferBuyerV2(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferBuyerV2GeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferBuyerV2", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferBuyerV2Response")]
        System.IAsyncResult BeginGenerateGeneralTransferBuyerV2(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferBuyerV2GeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateGeneralTransferBuyerV2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionBuyerRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionBuyerServic" +
            "eErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GeneratedContent GenerateGeneralTransferCorrectionBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.GeneralTransferCorrectionBuyer model, Midway.ObjectModel.DocumentGenerationOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionBuyerRespon" +
            "se")]
        System.IAsyncResult BeginGenerateGeneralTransferCorrectionBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.GeneralTransferCorrectionBuyer model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GeneratedContent EndGenerateGeneralTransferCorrectionBuyer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionBuyerV3", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionBuyerV3Resp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionBuyerV3Serv" +
            "iceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateGeneralTransferCorrectionBuyerV3(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3GeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionBuyerV3", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGeneralTransferCorrectionBuyerV3Resp" +
            "onse")]
        System.IAsyncResult BeginGenerateGeneralTransferCorrectionBuyerV3(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3GeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateGeneralTransferCorrectionBuyerV3(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillConsignorTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillConsignorTitleRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillConsignorTitleServic" +
            "eErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ForeignCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentShortInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsignorTitleGeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillConsignorTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillConsignorTitleRespon" +
            "se")]
        System.IAsyncResult BeginGenerateTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsignorTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillConsignorTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCargoReceivedTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCargoReceivedTitleRe" +
            "sponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCargoReceivedTitleSe" +
            "rviceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillCargoReceivedTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoReceivedTitleGeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCargoReceivedTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCargoReceivedTitleRe" +
            "sponse")]
        System.IAsyncResult BeginGenerateTransportWaybillCargoReceivedTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoReceivedTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillCargoReceivedTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCargoDeliveredTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCargoDeliveredTitleR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCargoDeliveredTitleS" +
            "erviceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoDeliveredTitleGeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCargoDeliveredTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCargoDeliveredTitleR" +
            "esponse")]
        System.IAsyncResult BeginGenerateTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoDeliveredTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillCargoDeliveredTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillConsigneeTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillConsigneeTitleRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillConsigneeTitleServic" +
            "eErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillConsigneeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsigneeTitleGeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillConsigneeTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillConsigneeTitleRespon" +
            "se")]
        System.IAsyncResult BeginGenerateTransportWaybillConsigneeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsigneeTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillConsigneeTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCarrierTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCarrierTitleResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCarrierTitleServiceE" +
            "rrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillCarrierTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCarrierTitleGeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCarrierTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillCarrierTitleResponse" +
            "")]
        System.IAsyncResult BeginGenerateTransportWaybillCarrierTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCarrierTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillCarrierTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillDeliveryPlaceChangeT" +
            "itle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillDeliveryPlaceChangeT" +
            "itleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillDeliveryPlaceChangeT" +
            "itleServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ForeignCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityPlaceChangeInitiator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurPlaceChangeInitiator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualPlaceChangeInitiator))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillDeliveryPlaceChangeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleGeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillDeliveryPlaceChangeT" +
            "itle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillDeliveryPlaceChangeT" +
            "itleResponse")]
        System.IAsyncResult BeginGenerateTransportWaybillDeliveryPlaceChangeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillDeliveryPlaceChangeTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillDriverOrVehicleChang" +
            "eTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillDriverOrVehicleChang" +
            "eTitleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillDriverOrVehicleChang" +
            "eTitleServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillDriverOrVehicleChangeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleGeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillDriverOrVehicleChang" +
            "eTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillDriverOrVehicleChang" +
            "eTitleResponse")]
        System.IAsyncResult BeginGenerateTransportWaybillDriverOrVehicleChangeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillDriverOrVehicleChangeTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillExpeditorTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillExpeditorTitleRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillExpeditorTitleServic" +
            "eErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ForeignCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntitySigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurSigner))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualSigner))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillExpeditorTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillExpeditorTitleGeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillExpeditorTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTransportWaybillExpeditorTitleRespon" +
            "se")]
        System.IAsyncResult BeginGenerateTransportWaybillExpeditorTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillExpeditorTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillExpeditorTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/DownloadPdfDocument", ReplyAction="http://synerdocs.ru/IExchangeService/DownloadPdfDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/DownloadPdfDocumentServiceErrorFaultContract" +
            "Fault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent DownloadPdfDocument(string authToken, string boxId, string documentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/DownloadPdfDocument", ReplyAction="http://synerdocs.ru/IExchangeService/DownloadPdfDocumentResponse")]
        System.IAsyncResult BeginDownloadPdfDocument(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndDownloadPdfDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/RegisterSubscriber", ReplyAction="http://synerdocs.ru/IExchangeService/RegisterSubscriberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/RegisterSubscriberServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        Midway.ObjectModel.RegistrationResponse RegisterSubscriber(Midway.ObjectModel.RegistrationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/RegisterSubscriber", ReplyAction="http://synerdocs.ru/IExchangeService/RegisterSubscriberResponse")]
        System.IAsyncResult BeginRegisterSubscriber(Midway.ObjectModel.RegistrationRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.RegistrationResponse EndRegisterSubscriber(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CreateNonActiveSubscriber", ReplyAction="http://synerdocs.ru/IExchangeService/CreateNonActiveSubscriberResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CreateNonActiveSubscriberServiceErrorFaultCo" +
            "ntractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.NonActiveSubscriberCreationResponse CreateNonActiveSubscriber(string authToken, Midway.ObjectModel.NonActiveSubscriberCreationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CreateNonActiveSubscriber", ReplyAction="http://synerdocs.ru/IExchangeService/CreateNonActiveSubscriberResponse")]
        System.IAsyncResult BeginCreateNonActiveSubscriber(string authToken, Midway.ObjectModel.NonActiveSubscriberCreationRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NonActiveSubscriberCreationResponse EndCreateNonActiveSubscriber(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetCertificateSubjectInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetCertificateSubjectInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetCertificateSubjectInfoServiceErrorFaultCo" +
            "ntractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.QualifiedX509Name GetCertificateSubjectInfo(byte[] certificate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetCertificateSubjectInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetCertificateSubjectInfoResponse")]
        System.IAsyncResult BeginGetCertificateSubjectInfo(byte[] certificate, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.QualifiedX509Name EndGetCertificateSubjectInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDocumentExecutedFunction", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentExecutedFunctionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDocumentExecutedFunctionServiceErrorFault" +
            "ContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.EnumValue GetDocumentExecutedFunction(string authToken, string boxId, string documentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDocumentExecutedFunction", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentExecutedFunctionResponse")]
        System.IAsyncResult BeginGetDocumentExecutedFunction(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.EnumValue EndGetDocumentExecutedFunction(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CreateCertificateIssueRequest", ReplyAction="http://synerdocs.ru/IExchangeService/CreateCertificateIssueRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CreateCertificateIssueRequestServiceErrorFau" +
            "ltContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.CertificateIssueRequestCreationResponse CreateCertificateIssueRequest(string authToken, string boxId, Midway.ObjectModel.CertificateIssueRequestCreationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CreateCertificateIssueRequest", ReplyAction="http://synerdocs.ru/IExchangeService/CreateCertificateIssueRequestResponse")]
        System.IAsyncResult BeginCreateCertificateIssueRequest(string authToken, string boxId, Midway.ObjectModel.CertificateIssueRequestCreationRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.CertificateIssueRequestCreationResponse EndCreateCertificateIssueRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CreateCertificateIssueRequestFromFile", ReplyAction="http://synerdocs.ru/IExchangeService/CreateCertificateIssueRequestFromFileRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CreateCertificateIssueRequestFromFileService" +
            "ErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.CertificateIssueRequestCreationResponse CreateCertificateIssueRequestFromFile(string authToken, string boxId, Midway.ObjectModel.CertificateIssueRequestFromFileCreationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CreateCertificateIssueRequestFromFile", ReplyAction="http://synerdocs.ru/IExchangeService/CreateCertificateIssueRequestFromFileRespons" +
            "e")]
        System.IAsyncResult BeginCreateCertificateIssueRequestFromFile(string authToken, string boxId, Midway.ObjectModel.CertificateIssueRequestFromFileCreationRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.CertificateIssueRequestCreationResponse EndCreateCertificateIssueRequestFromFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetCertificateIssueShortInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetCertificateIssueShortInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetCertificateIssueShortInfoServiceErrorFaul" +
            "tContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.CertificateIssueInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.CertificateIssueShortInfo GetCertificateIssueShortInfo(string authToken, string boxId, string certificateIssueRequestId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetCertificateIssueShortInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetCertificateIssueShortInfoResponse")]
        System.IAsyncResult BeginGetCertificateIssueShortInfo(string authToken, string boxId, string certificateIssueRequestId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.CertificateIssueShortInfo EndGetCertificateIssueShortInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetCertificateIssueInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetCertificateIssueInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetCertificateIssueInfoServiceErrorFaultCont" +
            "ractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.CertificateIssueInfo GetCertificateIssueInfo(string authToken, string boxId, string certificateIssueRequestId, Midway.ObjectModel.CertificateIssueInfoGettingSettings settings);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetCertificateIssueInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetCertificateIssueInfoResponse")]
        System.IAsyncResult BeginGetCertificateIssueInfo(string authToken, string boxId, string certificateIssueRequestId, Midway.ObjectModel.CertificateIssueInfoGettingSettings settings, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.CertificateIssueInfo EndGetCertificateIssueInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ReissueCertificateQrCode", ReplyAction="http://synerdocs.ru/IExchangeService/ReissueCertificateQrCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ReissueCertificateQrCodeServiceErrorFaultCon" +
            "tractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.IssuedCertificateQrCode ReissueCertificateQrCode(string authToken, string boxId, Midway.ObjectModel.ReissueCertificateQrCodeRequest reissueCertificateQrCodeRequest);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ReissueCertificateQrCode", ReplyAction="http://synerdocs.ru/IExchangeService/ReissueCertificateQrCodeResponse")]
        System.IAsyncResult BeginReissueCertificateQrCode(string authToken, string boxId, Midway.ObjectModel.ReissueCertificateQrCodeRequest reissueCertificateQrCodeRequest, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.IssuedCertificateQrCode EndReissueCertificateQrCode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CheckSimpleSignatureAvailability", ReplyAction="http://synerdocs.ru/IExchangeService/CheckSimpleSignatureAvailabilityResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CheckSimpleSignatureAvailabilityServiceError" +
            "FaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.SimpleSignatureAvailabilityCheckingDocumentId))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.SimpleSignatureAvailabilityCheckingDocumentType))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.SimpleSignatureAvailabilityCheckingDocumentContent))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.SimpleSignatureAvailabilityCheckingResponse CheckSimpleSignatureAvailability(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureAvailabilityCheckingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CheckSimpleSignatureAvailability", ReplyAction="http://synerdocs.ru/IExchangeService/CheckSimpleSignatureAvailabilityResponse")]
        System.IAsyncResult BeginCheckSimpleSignatureAvailability(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureAvailabilityCheckingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SimpleSignatureAvailabilityCheckingResponse EndCheckSimpleSignatureAvailability(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/AcceptSimpleSignatureRegulation", ReplyAction="http://synerdocs.ru/IExchangeService/AcceptSimpleSignatureRegulationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/AcceptSimpleSignatureRegulationServiceErrorF" +
            "aultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.SimpleSignatureRegulationAcceptingResponse AcceptSimpleSignatureRegulation(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureRegulationAcceptingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/AcceptSimpleSignatureRegulation", ReplyAction="http://synerdocs.ru/IExchangeService/AcceptSimpleSignatureRegulationResponse")]
        System.IAsyncResult BeginAcceptSimpleSignatureRegulation(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureRegulationAcceptingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SimpleSignatureRegulationAcceptingResponse EndAcceptSimpleSignatureRegulation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/PreviewSimpleSignatureRequisites", ReplyAction="http://synerdocs.ru/IExchangeService/PreviewSimpleSignatureRequisitesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/PreviewSimpleSignatureRequisitesServiceError" +
            "FaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.SimpleSignatureRequisitesPreviewingResponse PreviewSimpleSignatureRequisites(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureRequisitesPreviewingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/PreviewSimpleSignatureRequisites", ReplyAction="http://synerdocs.ru/IExchangeService/PreviewSimpleSignatureRequisitesResponse")]
        System.IAsyncResult BeginPreviewSimpleSignatureRequisites(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureRequisitesPreviewingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SimpleSignatureRequisitesPreviewingResponse EndPreviewSimpleSignatureRequisites(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CreateSimpleSignature", ReplyAction="http://synerdocs.ru/IExchangeService/CreateSimpleSignatureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CreateSimpleSignatureServiceErrorFaultContra" +
            "ctFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.SimpleSignatureCreationDocumentId))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.SimpleSignatureCreationDocumentData))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.SimpleSignatureCreationResponse CreateSimpleSignature(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureCreationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CreateSimpleSignature", ReplyAction="http://synerdocs.ru/IExchangeService/CreateSimpleSignatureResponse")]
        System.IAsyncResult BeginCreateSimpleSignature(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureCreationRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SimpleSignatureCreationResponse EndCreateSimpleSignature(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CreateUserAndEmployee", ReplyAction="http://synerdocs.ru/IExchangeService/CreateUserAndEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CreateUserAndEmployeeServiceErrorFaultContra" +
            "ctFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.UserRegistrationData))]
        Midway.ObjectModel.UserAndEmployeeCreationResponse CreateUserAndEmployee(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.UserAndEmployeeCreationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CreateUserAndEmployee", ReplyAction="http://synerdocs.ru/IExchangeService/CreateUserAndEmployeeResponse")]
        System.IAsyncResult BeginCreateUserAndEmployee(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.UserAndEmployeeCreationRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.UserAndEmployeeCreationResponse EndCreateUserAndEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/DeleteEmployee", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/DeleteEmployeeServiceErrorFaultContractFault" +
            "", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void DeleteEmployee(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/DeleteEmployee", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteEmployeeResponse")]
        System.IAsyncResult BeginDeleteEmployee(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/DeleteEmployeeAndUser", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteEmployeeAndUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/DeleteEmployeeAndUserServiceErrorFaultContra" +
            "ctFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void DeleteEmployeeAndUser(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/DeleteEmployeeAndUser", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteEmployeeAndUserResponse")]
        System.IAsyncResult BeginDeleteEmployeeAndUser(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteEmployeeAndUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/DeleteEmployeeCertificate", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteEmployeeCertificateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/DeleteEmployeeCertificateServiceErrorFaultCo" +
            "ntractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void DeleteEmployeeCertificate(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/DeleteEmployeeCertificate", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteEmployeeCertificateResponse")]
        System.IAsyncResult BeginDeleteEmployeeCertificate(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteEmployeeCertificate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetSetting", ReplyAction="http://synerdocs.ru/IExchangeService/GetSettingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetSettingServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.SettingGettingResponse GetSetting(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SettingGettingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetSetting", ReplyAction="http://synerdocs.ru/IExchangeService/GetSettingResponse")]
        System.IAsyncResult BeginGetSetting(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SettingGettingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SettingGettingResponse EndGetSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/UpdateSetting", ReplyAction="http://synerdocs.ru/IExchangeService/UpdateSettingResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/UpdateSettingServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.SettingUpdatingResponse UpdateSetting(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SettingUpdatingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/UpdateSetting", ReplyAction="http://synerdocs.ru/IExchangeService/UpdateSettingResponse")]
        System.IAsyncResult BeginUpdateSetting(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SettingUpdatingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SettingUpdatingResponse EndUpdateSetting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetEmployee", ReplyAction="http://synerdocs.ru/IExchangeService/GetEmployeeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetEmployeeServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeProfileGettingRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.UserRegistrationData))]
        Midway.ObjectModel.Employee GetEmployee(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.ProfileGettingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetEmployee", ReplyAction="http://synerdocs.ru/IExchangeService/GetEmployeeResponse")]
        System.IAsyncResult BeginGetEmployee(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.ProfileGettingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.Employee EndGetEmployee(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/SearchEmployees", ReplyAction="http://synerdocs.ru/IExchangeService/SearchEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/SearchEmployeesServiceErrorFaultContractFaul" +
            "t", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.EmployeeSearchResponse SearchEmployees(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.EmployeeSearchSettings request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/SearchEmployees", ReplyAction="http://synerdocs.ru/IExchangeService/SearchEmployeesResponse")]
        System.IAsyncResult BeginSearchEmployees(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.EmployeeSearchSettings request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.EmployeeSearchResponse EndSearchEmployees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/UpdateEmployeeAdministratorAuthority", ReplyAction="http://synerdocs.ru/IExchangeService/UpdateEmployeeAdministratorAuthorityResponse" +
            "")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/UpdateEmployeeAdministratorAuthorityServiceE" +
            "rrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.AdministratorAuthorityUpdatingResponse UpdateEmployeeAdministratorAuthority(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.EmployeeAdministratorAuthorityUpdatingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/UpdateEmployeeAdministratorAuthority", ReplyAction="http://synerdocs.ru/IExchangeService/UpdateEmployeeAdministratorAuthorityResponse" +
            "")]
        System.IAsyncResult BeginUpdateEmployeeAdministratorAuthority(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.EmployeeAdministratorAuthorityUpdatingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.AdministratorAuthorityUpdatingResponse EndUpdateEmployeeAdministratorAuthority(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/UpdateEmployeePersonalInfo", ReplyAction="http://synerdocs.ru/IExchangeService/UpdateEmployeePersonalInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/UpdateEmployeePersonalInfoServiceErrorFaultC" +
            "ontractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeePersonalInfoUpdatingRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.UserCreationData))]
        Midway.ObjectModel.PersonalInfoUpdatingResponse UpdateEmployeePersonalInfo(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.PersonalInfoUpdatingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/UpdateEmployeePersonalInfo", ReplyAction="http://synerdocs.ru/IExchangeService/UpdateEmployeePersonalInfoResponse")]
        System.IAsyncResult BeginUpdateEmployeePersonalInfo(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.PersonalInfoUpdatingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.PersonalInfoUpdatingResponse EndUpdateEmployeePersonalInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/UpdateEmployeeCertificate", ReplyAction="http://synerdocs.ru/IExchangeService/UpdateEmployeeCertificateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/UpdateEmployeeCertificateServiceErrorFaultCo" +
            "ntractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeCertificateUpdatingRequest))]
        Midway.ObjectModel.CertificateUpdatingResponse UpdateEmployeeCertificate(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.CertificateUpdatingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/UpdateEmployeeCertificate", ReplyAction="http://synerdocs.ru/IExchangeService/UpdateEmployeeCertificateResponse")]
        System.IAsyncResult BeginUpdateEmployeeCertificate(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.CertificateUpdatingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.CertificateUpdatingResponse EndUpdateEmployeeCertificate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/UpdatePassword", ReplyAction="http://synerdocs.ru/IExchangeService/UpdatePasswordResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/UpdatePasswordServiceErrorFaultContractFault" +
            "", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.PasswordUpdatingResponse UpdatePassword(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.PasswordUpdatingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/UpdatePassword", ReplyAction="http://synerdocs.ru/IExchangeService/UpdatePasswordResponse")]
        System.IAsyncResult BeginUpdatePassword(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.PasswordUpdatingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.PasswordUpdatingResponse EndUpdatePassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/MoveDraftMessage", ReplyAction="http://synerdocs.ru/IExchangeService/MoveDraftMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/MoveDraftMessageServiceErrorFaultContractFau" +
            "lt", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void MoveDraftMessage(string authToken, string boxId, string draftMessageId, string employeeId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/MoveDraftMessage", ReplyAction="http://synerdocs.ru/IExchangeService/MoveDraftMessageResponse")]
        System.IAsyncResult BeginMoveDraftMessage(string authToken, string boxId, string draftMessageId, string employeeId, System.AsyncCallback callback, object asyncState);
        
        void EndMoveDraftMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/MoveDraftMessageV2", ReplyAction="http://synerdocs.ru/IExchangeService/MoveDraftMessageV2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/MoveDraftMessageV2ServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DraftMessageUserMovingSettings))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DraftMessageEmployeeMovingSettings))]
        void MoveDraftMessageV2(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DraftMessageMovingSettings settings);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/MoveDraftMessageV2", ReplyAction="http://synerdocs.ru/IExchangeService/MoveDraftMessageV2Response")]
        System.IAsyncResult BeginMoveDraftMessageV2(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DraftMessageMovingSettings settings, System.AsyncCallback callback, object asyncState);
        
        void EndMoveDraftMessageV2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetEnumValues", ReplyAction="http://synerdocs.ru/IExchangeService/GetEnumValuesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetEnumValuesServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.Utility.AllEnumValuesRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.Utility.FullEnumValuesRequest))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.Utility.SpecifiedEnumValuesRequest))]
        Midway.ObjectModel.Utility.EnumValuesResponse GetEnumValues(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.Utility.EnumValuesRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetEnumValues", ReplyAction="http://synerdocs.ru/IExchangeService/GetEnumValuesResponse")]
        System.IAsyncResult BeginGetEnumValues(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.Utility.EnumValuesRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.Utility.EnumValuesResponse EndGetEnumValues(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/PrintDocument", ReplyAction="http://synerdocs.ru/IExchangeService/PrintDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/PrintDocumentServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.DocumentPrintingResponse PrintDocument(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentPrintingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/PrintDocument", ReplyAction="http://synerdocs.ru/IExchangeService/PrintDocumentResponse")]
        System.IAsyncResult BeginPrintDocument(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentPrintingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentPrintingResponse EndPrintDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDocumentTypeVersions", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentTypeVersionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDocumentTypeVersionsServiceErrorFaultCont" +
            "ractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.DocumentTypeVersionsGettingResponse GetDocumentTypeVersions(Midway.ObjectModel.DocumentTypeVersionsGettingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDocumentTypeVersions", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentTypeVersionsResponse")]
        System.IAsyncResult BeginGetDocumentTypeVersions(Midway.ObjectModel.DocumentTypeVersionsGettingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentTypeVersionsGettingResponse EndGetDocumentTypeVersions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/SearchProviderIdentificationCenters", ReplyAction="http://synerdocs.ru/IExchangeService/SearchProviderIdentificationCentersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/SearchProviderIdentificationCentersServiceEr" +
            "rorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.ProviderIdentificationCentersSearchingResponse SearchProviderIdentificationCenters(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.ProviderIdentificationCentersSearchingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/SearchProviderIdentificationCenters", ReplyAction="http://synerdocs.ru/IExchangeService/SearchProviderIdentificationCentersResponse")]
        System.IAsyncResult BeginSearchProviderIdentificationCenters(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.ProviderIdentificationCentersSearchingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.ProviderIdentificationCentersSearchingResponse EndSearchProviderIdentificationCenters(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillConsignorTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillConsignorTitleResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillConsignorTitleServ" +
            "iceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ForeignCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentShortInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.GoodsTransportWaybill.LegalEntityLoadingLocationCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.GoodsTransportWaybill.IndividualEntrepreneurLoadingLocationCounterparty))]
        Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingResponse ParseGoodsTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillConsignorTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillConsignorTitleResp" +
            "onse")]
        System.IAsyncResult BeginParseGoodsTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingResponse EndParseGoodsTransportWaybillConsignorTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillConsigneeTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillConsigneeTitleResp" +
            "onse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillConsigneeTitleServ" +
            "iceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentShortInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ForeignCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingResponse ParseGoodsTransportWaybillConsigneeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillConsigneeTitle", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillConsigneeTitleResp" +
            "onse")]
        System.IAsyncResult BeginParseGoodsTransportWaybillConsigneeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingResponse EndParseGoodsTransportWaybillConsigneeTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillCargoReceivedTitle" +
            "", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillCargoReceivedTitle" +
            "Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillCargoReceivedTitle" +
            "ServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentShortInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleParsingResponse ParseGoodsTransportWaybillCargoReceivedTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillCargoReceivedTitle" +
            "", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillCargoReceivedTitle" +
            "Response")]
        System.IAsyncResult BeginParseGoodsTransportWaybillCargoReceivedTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleParsingResponse EndParseGoodsTransportWaybillCargoReceivedTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillCargoDeliveredTitl" +
            "e", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillCargoDeliveredTitl" +
            "eResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillCargoDeliveredTitl" +
            "eServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentShortInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleParsingResponse ParseGoodsTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredParsingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillCargoDeliveredTitl" +
            "e", ReplyAction="http://synerdocs.ru/IExchangeService/ParseGoodsTransportWaybillCargoDeliveredTitl" +
            "eResponse")]
        System.IAsyncResult BeginParseGoodsTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredParsingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleParsingResponse EndParseGoodsTransportWaybillCargoDeliveredTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillConsignorTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillConsignorTitleR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillConsignorTitleS" +
            "erviceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.EmployeeOperationCredentials))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ForeignCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentShortInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.GoodsTransportWaybill.LegalEntityLoadingLocationCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.GoodsTransportWaybill.IndividualEntrepreneurLoadingLocationCounterparty))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateGoodsTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleGeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillConsignorTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillConsignorTitleR" +
            "esponse")]
        System.IAsyncResult BeginGenerateGoodsTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateGoodsTransportWaybillConsignorTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillConsigneeTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillConsigneeTitleR" +
            "esponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillConsigneeTitleS" +
            "erviceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentShortInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.NamedNumberDate))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ShippingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.PaymentBillingDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.LegalEntityCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualEntrepreneurCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.IndividualCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ForeignCounterparty))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.DocumentGenerationResponse GenerateGoodsTransportWaybillConsigneeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleGeneratingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillConsigneeTitle", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateGoodsTransportWaybillConsigneeTitleR" +
            "esponse")]
        System.IAsyncResult BeginGenerateGoodsTransportWaybillConsigneeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentGenerationResponse EndGenerateGoodsTransportWaybillConsigneeTitle(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/Authenticate", ReplyAction="http://synerdocs.ru/IExchangeService/AuthenticateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/AuthenticateServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        string Authenticate(string login, string password, string applicationId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/Authenticate", ReplyAction="http://synerdocs.ru/IExchangeService/AuthenticateResponse")]
        System.IAsyncResult BeginAuthenticate(string login, string password, string applicationId, System.AsyncCallback callback, object asyncState);
        
        string EndAuthenticate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificate", ReplyAction="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificateServiceErrorFault" +
            "ContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        string AuthenticateWithCertificate(string certHash, string applicationId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificate", ReplyAction="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificateResponse")]
        System.IAsyncResult BeginAuthenticateWithCertificate(string certHash, string applicationId, System.AsyncCallback callback, object asyncState);
        
        string EndAuthenticateWithCertificate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificateAndPassword", ReplyAction="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificateAndPasswordRespon" +
            "se")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificateAndPasswordServic" +
            "eErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        string AuthenticateWithCertificateAndPassword(string thumbprint, string password, string applicationId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificateAndPassword", ReplyAction="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificateAndPasswordRespon" +
            "se")]
        System.IAsyncResult BeginAuthenticateWithCertificateAndPassword(string thumbprint, string password, string applicationId, System.AsyncCallback callback, object asyncState);
        
        string EndAuthenticateWithCertificateAndPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificate2", ReplyAction="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificate2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificate2ServiceErrorFaul" +
            "tContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        byte[] AuthenticateWithCertificate2(string certHash, string applicationId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificate2", ReplyAction="http://synerdocs.ru/IExchangeService/AuthenticateWithCertificate2Response")]
        System.IAsyncResult BeginAuthenticateWithCertificate2(string certHash, string applicationId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndAuthenticateWithCertificate2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/AuthenticateWithIdentityToken", ReplyAction="http://synerdocs.ru/IExchangeService/AuthenticateWithIdentityTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/AuthenticateWithIdentityTokenServiceErrorFau" +
            "ltContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        string AuthenticateWithIdentityToken(string identityToken, string applicationId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/AuthenticateWithIdentityToken", ReplyAction="http://synerdocs.ru/IExchangeService/AuthenticateWithIdentityTokenResponse")]
        System.IAsyncResult BeginAuthenticateWithIdentityToken(string identityToken, string applicationId, System.AsyncCallback callback, object asyncState);
        
        string EndAuthenticateWithIdentityToken(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/AuthenticateWithAccessToken", ReplyAction="http://synerdocs.ru/IExchangeService/AuthenticateWithAccessTokenResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/AuthenticateWithAccessTokenServiceErrorFault" +
            "ContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        string AuthenticateWithAccessToken(string accessToken, string applicationId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/AuthenticateWithAccessToken", ReplyAction="http://synerdocs.ru/IExchangeService/AuthenticateWithAccessTokenResponse")]
        System.IAsyncResult BeginAuthenticateWithAccessToken(string accessToken, string applicationId, System.AsyncCallback callback, object asyncState);
        
        string EndAuthenticateWithAccessToken(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetMessages", ReplyAction="http://synerdocs.ru/IExchangeService/GetMessagesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetMessagesServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.MessageInfo[] GetMessages(string authToken, string afterMessageId, string fromBox, string toBox);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetMessages", ReplyAction="http://synerdocs.ru/IExchangeService/GetMessagesResponse")]
        System.IAsyncResult BeginGetMessages(string authToken, string afterMessageId, string fromBox, string toBox, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.MessageInfo[] EndGetMessages(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetMessage", ReplyAction="http://synerdocs.ru/IExchangeService/GetMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetMessageServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.Message GetMessage(string authToken, string boxId, string messageId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetMessage", ReplyAction="http://synerdocs.ru/IExchangeService/GetMessageResponse")]
        System.IAsyncResult BeginGetMessage(string authToken, string boxId, string messageId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.Message EndGetMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetMessageWithLoadOptions", ReplyAction="http://synerdocs.ru/IExchangeService/GetMessageWithLoadOptionsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetMessageWithLoadOptionsServiceErrorFaultCo" +
            "ntractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.Message GetMessageWithLoadOptions(string authToken, string boxId, string messageId, Midway.ObjectModel.MessageRequestParams requestParams);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetMessageWithLoadOptions", ReplyAction="http://synerdocs.ru/IExchangeService/GetMessageWithLoadOptionsResponse")]
        System.IAsyncResult BeginGetMessageWithLoadOptions(string authToken, string boxId, string messageId, Midway.ObjectModel.MessageRequestParams requestParams, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.Message EndGetMessageWithLoadOptions(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/SendMessage", ReplyAction="http://synerdocs.ru/IExchangeService/SendMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/SendMessageServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.SentMessage SendMessage(string authToken, Midway.ObjectModel.Message message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/SendMessage", ReplyAction="http://synerdocs.ru/IExchangeService/SendMessageResponse")]
        System.IAsyncResult BeginSendMessage(string authToken, Midway.ObjectModel.Message message, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SentMessage EndSendMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CreateDraftMessage", ReplyAction="http://synerdocs.ru/IExchangeService/CreateDraftMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CreateDraftMessageServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        string CreateDraftMessage(string authToken, Midway.ObjectModel.DraftMessage draftMessage);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CreateDraftMessage", ReplyAction="http://synerdocs.ru/IExchangeService/CreateDraftMessageResponse")]
        System.IAsyncResult BeginCreateDraftMessage(string authToken, Midway.ObjectModel.DraftMessage draftMessage, System.AsyncCallback callback, object asyncState);
        
        string EndCreateDraftMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/UpdateDraftMessage", ReplyAction="http://synerdocs.ru/IExchangeService/UpdateDraftMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/UpdateDraftMessageServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void UpdateDraftMessage(string authToken, Midway.ObjectModel.DraftMessage draftMessage);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/UpdateDraftMessage", ReplyAction="http://synerdocs.ru/IExchangeService/UpdateDraftMessageResponse")]
        System.IAsyncResult BeginUpdateDraftMessage(string authToken, Midway.ObjectModel.DraftMessage draftMessage, System.AsyncCallback callback, object asyncState);
        
        void EndUpdateDraftMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/DeleteDraftMessage", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteDraftMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/DeleteDraftMessageServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void DeleteDraftMessage(string authToken, string messageId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/DeleteDraftMessage", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteDraftMessageResponse")]
        System.IAsyncResult BeginDeleteDraftMessage(string authToken, string messageId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDraftMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDraftMessage", ReplyAction="http://synerdocs.ru/IExchangeService/GetDraftMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDraftMessageServiceErrorFaultContractFaul" +
            "t", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.DraftMessage GetDraftMessage(string authToken, string messageId, bool getContent, bool getCard);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDraftMessage", ReplyAction="http://synerdocs.ru/IExchangeService/GetDraftMessageResponse")]
        System.IAsyncResult BeginGetDraftMessage(string authToken, string messageId, bool getContent, bool getCard, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DraftMessage EndGetDraftMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDraftMessageList", ReplyAction="http://synerdocs.ru/IExchangeService/GetDraftMessageListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDraftMessageListServiceErrorFaultContract" +
            "Fault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.DraftMessageSearchResult GetDraftMessageList(string authToken, string boxId, Midway.ObjectModel.Common.FetchingSettings settings);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDraftMessageList", ReplyAction="http://synerdocs.ru/IExchangeService/GetDraftMessageListResponse")]
        System.IAsyncResult BeginGetDraftMessageList(string authToken, string boxId, Midway.ObjectModel.Common.FetchingSettings settings, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DraftMessageSearchResult EndGetDraftMessageList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDraftMessageCount", ReplyAction="http://synerdocs.ru/IExchangeService/GetDraftMessageCountResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDraftMessageCountServiceErrorFaultContrac" +
            "tFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        int GetDraftMessageCount(string authToken, string boxId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDraftMessageCount", ReplyAction="http://synerdocs.ru/IExchangeService/GetDraftMessageCountResponse")]
        System.IAsyncResult BeginGetDraftMessageCount(string authToken, string boxId, System.AsyncCallback callback, object asyncState);
        
        int EndGetDraftMessageCount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDraftDocumentContent", ReplyAction="http://synerdocs.ru/IExchangeService/GetDraftDocumentContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDraftDocumentContentServiceErrorFaultCont" +
            "ractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        byte[] GetDraftDocumentContent(string authToken, string documentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDraftDocumentContent", ReplyAction="http://synerdocs.ru/IExchangeService/GetDraftDocumentContentResponse")]
        System.IAsyncResult BeginGetDraftDocumentContent(string authToken, string documentId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetDraftDocumentContent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDraftDocumentCard", ReplyAction="http://synerdocs.ru/IExchangeService/GetDraftDocumentCardResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDraftDocumentCardServiceErrorFaultContrac" +
            "tFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        byte[] GetDraftDocumentCard(string authToken, string documentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDraftDocumentCard", ReplyAction="http://synerdocs.ru/IExchangeService/GetDraftDocumentCardResponse")]
        System.IAsyncResult BeginGetDraftDocumentCard(string authToken, string documentId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetDraftDocumentCard(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateInvoiceReceipt", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateInvoiceReceiptResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateInvoiceReceiptServiceErrorFaultContr" +
            "actFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent GenerateInvoiceReceipt(string authToken, string boxId, string documentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateInvoiceReceipt", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateInvoiceReceiptResponse")]
        System.IAsyncResult BeginGenerateInvoiceReceipt(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndGenerateInvoiceReceipt(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateInvoiceReceiptV2", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateInvoiceReceiptV2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateInvoiceReceiptV2ServiceErrorFaultCon" +
            "tractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent GenerateInvoiceReceiptV2(string authToken, string boxId, string documentId, string certThumbprint);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateInvoiceReceiptV2", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateInvoiceReceiptV2Response")]
        System.IAsyncResult BeginGenerateInvoiceReceiptV2(string authToken, string boxId, string documentId, string certThumbprint, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndGenerateInvoiceReceiptV2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateInvoiceAmendmentRequest", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateInvoiceAmendmentRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateInvoiceAmendmentRequestServiceErrorF" +
            "aultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent GenerateInvoiceAmendmentRequest(string authToken, string boxId, string documentId, string text);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateInvoiceAmendmentRequest", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateInvoiceAmendmentRequestResponse")]
        System.IAsyncResult BeginGenerateInvoiceAmendmentRequest(string authToken, string boxId, string documentId, string text, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndGenerateInvoiceAmendmentRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateInvoiceAmendmentRequestV2", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateInvoiceAmendmentRequestV2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateInvoiceAmendmentRequestV2ServiceErro" +
            "rFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent GenerateInvoiceAmendmentRequestV2(string authToken, string boxId, string documentId, string certThumbprint, string text);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateInvoiceAmendmentRequestV2", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateInvoiceAmendmentRequestV2Response")]
        System.IAsyncResult BeginGenerateInvoiceAmendmentRequestV2(string authToken, string boxId, string documentId, string certThumbprint, string text, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndGenerateInvoiceAmendmentRequestV2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateDeliveryConfirmation", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateDeliveryConfirmationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateDeliveryConfirmationServiceErrorFaul" +
            "tContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent GenerateDeliveryConfirmation(string authToken, string boxId, string documentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateDeliveryConfirmation", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateDeliveryConfirmationResponse")]
        System.IAsyncResult BeginGenerateDeliveryConfirmation(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndGenerateDeliveryConfirmation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateDeliveryConfirmationV2", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateDeliveryConfirmationV2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateDeliveryConfirmationV2ServiceErrorFa" +
            "ultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent GenerateDeliveryConfirmationV2(string authToken, string boxId, string documentId, string certThumbprint);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateDeliveryConfirmationV2", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateDeliveryConfirmationV2Response")]
        System.IAsyncResult BeginGenerateDeliveryConfirmationV2(string authToken, string boxId, string documentId, string certThumbprint, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndGenerateDeliveryConfirmationV2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateAmendmentRequest", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateAmendmentRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateAmendmentRequestServiceErrorFaultCon" +
            "tractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent GenerateAmendmentRequest(string authToken, string boxId, string documentId, string text);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateAmendmentRequest", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateAmendmentRequestResponse")]
        System.IAsyncResult BeginGenerateAmendmentRequest(string authToken, string boxId, string documentId, string text, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndGenerateAmendmentRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateAmendmentRequestV2", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateAmendmentRequestV2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateAmendmentRequestV2ServiceErrorFaultC" +
            "ontractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent GenerateAmendmentRequestV2(string authToken, string boxId, string documentId, string certThumbprint, string text);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateAmendmentRequestV2", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateAmendmentRequestV2Response")]
        System.IAsyncResult BeginGenerateAmendmentRequestV2(string authToken, string boxId, string documentId, string certThumbprint, string text, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndGenerateAmendmentRequestV2(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateTitleBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTitleBuyerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateTitleBuyerServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent GenerateTitleBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.TitleBuyer text, Midway.ObjectModel.SignerInfo signerInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateTitleBuyer", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateTitleBuyerResponse")]
        System.IAsyncResult BeginGenerateTitleBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.TitleBuyer text, Midway.ObjectModel.SignerInfo signerInfo, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndGenerateTitleBuyer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GenerateRevocationOffer", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateRevocationOfferResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GenerateRevocationOfferServiceErrorFaultCont" +
            "ractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent GenerateRevocationOffer(string authToken, string boxId, string documentId, string comment, Midway.ObjectModel.SignerInfo signerInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GenerateRevocationOffer", ReplyAction="http://synerdocs.ru/IExchangeService/GenerateRevocationOfferResponse")]
        System.IAsyncResult BeginGenerateRevocationOffer(string authToken, string boxId, string documentId, string comment, Midway.ObjectModel.SignerInfo signerInfo, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndGenerateRevocationOffer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDocumentContent", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentContentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDocumentContentServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        byte[] GetDocumentContent(string authToken, string boxId, string documentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDocumentContent", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentContentResponse")]
        System.IAsyncResult BeginGetDocumentContent(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState);
        
        byte[] EndGetDocumentContent(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetFullDocumentInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetFullDocumentInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetFullDocumentInfoServiceErrorFaultContract" +
            "Fault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.FlowDocumentInfoRequestParams))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.FlowDocumentInfo))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ServiceDocument))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ServiceDocumentWithSimpleSignature))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.UntypedDocumentFlowStatus))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.InvoiceDocumentFlowStatus))]
        Midway.ObjectModel.FullDocumentInfo GetFullDocumentInfo(string authToken, string boxId, string documentId, Midway.ObjectModel.FullDocumentInfoRequestParams requestParams);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetFullDocumentInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetFullDocumentInfoResponse")]
        System.IAsyncResult BeginGetFullDocumentInfo(string authToken, string boxId, string documentId, Midway.ObjectModel.FullDocumentInfoRequestParams requestParams, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.FullDocumentInfo EndGetFullDocumentInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDocumentList", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDocumentListServiceErrorFaultContractFaul" +
            "t", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentEntryOptions))]
        Midway.ObjectModel.DocumentList GetDocumentList(string authToken, Midway.ObjectModel.DocumentListOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDocumentList", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentListResponse")]
        System.IAsyncResult BeginGetDocumentList(string authToken, Midway.ObjectModel.DocumentListOptions options, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentList EndGetDocumentList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetInnKppNameByBoxId", ReplyAction="http://synerdocs.ru/IExchangeService/GetInnKppNameByBoxIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetInnKppNameByBoxIdServiceErrorFaultContrac" +
            "tFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.InnKppName GetInnKppNameByBoxId(string token, string boxId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetInnKppNameByBoxId", ReplyAction="http://synerdocs.ru/IExchangeService/GetInnKppNameByBoxIdResponse")]
        System.IAsyncResult BeginGetInnKppNameByBoxId(string token, string boxId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.InnKppName EndGetInnKppNameByBoxId(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/SearchContacts", ReplyAction="http://synerdocs.ru/IExchangeService/SearchContactsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/SearchContactsServiceErrorFaultContractFault" +
            "", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.ContactSearchResult SearchContacts(string authToken, Midway.ObjectModel.ContactSearchOptions contactSearchOptions);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/SearchContacts", ReplyAction="http://synerdocs.ru/IExchangeService/SearchContactsResponse")]
        System.IAsyncResult BeginSearchContacts(string authToken, Midway.ObjectModel.ContactSearchOptions contactSearchOptions, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.ContactSearchResult EndSearchContacts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetContact", ReplyAction="http://synerdocs.ru/IExchangeService/GetContactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetContactServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.Contact GetContact(string authToken, int organizationId, int contragentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetContact", ReplyAction="http://synerdocs.ru/IExchangeService/GetContactResponse")]
        System.IAsyncResult BeginGetContact(string authToken, int organizationId, int contragentId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.Contact EndGetContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/AcceptAuthorization", ReplyAction="http://synerdocs.ru/IExchangeService/AcceptAuthorizationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/AcceptAuthorizationServiceErrorFaultContract" +
            "Fault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.ContactStatus AcceptAuthorization(string authToken, int organizationId, int contragentId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/AcceptAuthorization", ReplyAction="http://synerdocs.ru/IExchangeService/AcceptAuthorizationResponse")]
        System.IAsyncResult BeginAcceptAuthorization(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.ContactStatus EndAcceptAuthorization(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/RejectAuthorization", ReplyAction="http://synerdocs.ru/IExchangeService/RejectAuthorizationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/RejectAuthorizationServiceErrorFaultContract" +
            "Fault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.ContactStatus RejectAuthorization(string authToken, int organizationId, int contragentId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/RejectAuthorization", ReplyAction="http://synerdocs.ru/IExchangeService/RejectAuthorizationResponse")]
        System.IAsyncResult BeginRejectAuthorization(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.ContactStatus EndRejectAuthorization(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/SendAuthRequest", ReplyAction="http://synerdocs.ru/IExchangeService/SendAuthRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/SendAuthRequestServiceErrorFaultContractFaul" +
            "t", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void SendAuthRequest(string authToken, int organizationId, int contragentId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/SendAuthRequest", ReplyAction="http://synerdocs.ru/IExchangeService/SendAuthRequestResponse")]
        System.IAsyncResult BeginSendAuthRequest(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState);
        
        void EndSendAuthRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CancelAuthRequest", ReplyAction="http://synerdocs.ru/IExchangeService/CancelAuthRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CancelAuthRequestServiceErrorFaultContractFa" +
            "ult", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void CancelAuthRequest(string authToken, int organizationId, int contragentId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CancelAuthRequest", ReplyAction="http://synerdocs.ru/IExchangeService/CancelAuthRequestResponse")]
        System.IAsyncResult BeginCancelAuthRequest(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState);
        
        void EndCancelAuthRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/AcceptAuthRequest", ReplyAction="http://synerdocs.ru/IExchangeService/AcceptAuthRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/AcceptAuthRequestServiceErrorFaultContractFa" +
            "ult", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void AcceptAuthRequest(string authToken, int organizationId, int contragentId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/AcceptAuthRequest", ReplyAction="http://synerdocs.ru/IExchangeService/AcceptAuthRequestResponse")]
        System.IAsyncResult BeginAcceptAuthRequest(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState);
        
        void EndAcceptAuthRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/RejectAuthRequest", ReplyAction="http://synerdocs.ru/IExchangeService/RejectAuthRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/RejectAuthRequestServiceErrorFaultContractFa" +
            "ult", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void RejectAuthRequest(string authToken, int organizationId, int contragentId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/RejectAuthRequest", ReplyAction="http://synerdocs.ru/IExchangeService/RejectAuthRequestResponse")]
        System.IAsyncResult BeginRejectAuthRequest(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState);
        
        void EndRejectAuthRequest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/DeleteContact", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteContactResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/DeleteContactServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void DeleteContact(string authToken, int organizationId, int contragentId, string comment);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/DeleteContact", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteContactResponse")]
        System.IAsyncResult BeginDeleteContact(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteContact(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetOrganizationByInnKpp", ReplyAction="http://synerdocs.ru/IExchangeService/GetOrganizationByInnKppResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetOrganizationByInnKppServiceErrorFaultCont" +
            "ractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        Midway.ObjectModel.Organization GetOrganizationByInnKpp(string authToken, string inn, string kpp);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetOrganizationByInnKpp", ReplyAction="http://synerdocs.ru/IExchangeService/GetOrganizationByInnKppResponse")]
        System.IAsyncResult BeginGetOrganizationByInnKpp(string authToken, string inn, string kpp, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.Organization EndGetOrganizationByInnKpp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetOrganizationBy", ReplyAction="http://synerdocs.ru/IExchangeService/GetOrganizationByResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetOrganizationByServiceErrorFaultContractFa" +
            "ult", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.OrganizationAddress))]
        Midway.ObjectModel.Organization GetOrganizationBy(string authToken, string boxId, Midway.ObjectModel.OrganizationByCriteria criteria, Midway.ObjectModel.OrganizationByCriteriaValues values);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetOrganizationBy", ReplyAction="http://synerdocs.ru/IExchangeService/GetOrganizationByResponse")]
        System.IAsyncResult BeginGetOrganizationBy(string authToken, string boxId, Midway.ObjectModel.OrganizationByCriteria criteria, Midway.ObjectModel.OrganizationByCriteriaValues values, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.Organization EndGetOrganizationBy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetErrorText", ReplyAction="http://synerdocs.ru/IExchangeService/GetErrorTextResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetErrorTextServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        string GetErrorText(Midway.ObjectModel.Exceptions.ServiceErrorCode code);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetErrorText", ReplyAction="http://synerdocs.ru/IExchangeService/GetErrorTextResponse")]
        System.IAsyncResult BeginGetErrorText(Midway.ObjectModel.Exceptions.ServiceErrorCode code, System.AsyncCallback callback, object asyncState);
        
        string EndGetErrorText(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetBoxes", ReplyAction="http://synerdocs.ru/IExchangeService/GetBoxesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetBoxesServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.BoxInfo[] GetBoxes(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetBoxes", ReplyAction="http://synerdocs.ru/IExchangeService/GetBoxesResponse")]
        System.IAsyncResult BeginGetBoxes(string authToken, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.BoxInfo[] EndGetBoxes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetSubjectInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetSubjectInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetSubjectInfoServiceErrorFaultContractFault" +
            "", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.SubjectInfo GetSubjectInfo(string authToken, string subjectBoxId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetSubjectInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetSubjectInfoResponse")]
        System.IAsyncResult BeginGetSubjectInfo(string authToken, string subjectBoxId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SubjectInfo EndGetSubjectInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetSpecialOperatorInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetSpecialOperatorInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetSpecialOperatorInfoServiceErrorFaultContr" +
            "actFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.SubjectInfo GetSpecialOperatorInfo(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetSpecialOperatorInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetSpecialOperatorInfoResponse")]
        System.IAsyncResult BeginGetSpecialOperatorInfo(string authToken, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SubjectInfo EndGetSpecialOperatorInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/AddOrganizationStructureElement", ReplyAction="http://synerdocs.ru/IExchangeService/AddOrganizationStructureElementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/AddOrganizationStructureElementServiceErrorF" +
            "aultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        string AddOrganizationStructureElement(string authToken, Midway.ObjectModel.OrganizationStructureElement element);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/AddOrganizationStructureElement", ReplyAction="http://synerdocs.ru/IExchangeService/AddOrganizationStructureElementResponse")]
        System.IAsyncResult BeginAddOrganizationStructureElement(string authToken, Midway.ObjectModel.OrganizationStructureElement element, System.AsyncCallback callback, object asyncState);
        
        string EndAddOrganizationStructureElement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/DeleteOrganizationStructureElement", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteOrganizationStructureElementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/DeleteOrganizationStructureElementServiceErr" +
            "orFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void DeleteOrganizationStructureElement(string authToken, string organizationId, string elementId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/DeleteOrganizationStructureElement", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteOrganizationStructureElementResponse")]
        System.IAsyncResult BeginDeleteOrganizationStructureElement(string authToken, string organizationId, string elementId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteOrganizationStructureElement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/ModifyOrganizationStructureElement", ReplyAction="http://synerdocs.ru/IExchangeService/ModifyOrganizationStructureElementResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/ModifyOrganizationStructureElementServiceErr" +
            "orFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void ModifyOrganizationStructureElement(string authToken, Midway.ObjectModel.OrganizationStructureElement element);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/ModifyOrganizationStructureElement", ReplyAction="http://synerdocs.ru/IExchangeService/ModifyOrganizationStructureElementResponse")]
        System.IAsyncResult BeginModifyOrganizationStructureElement(string authToken, Midway.ObjectModel.OrganizationStructureElement element, System.AsyncCallback callback, object asyncState);
        
        void EndModifyOrganizationStructureElement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetOrganizationStructure", ReplyAction="http://synerdocs.ru/IExchangeService/GetOrganizationStructureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetOrganizationStructureServiceErrorFaultCon" +
            "tractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.OrganizationStructureElement[] GetOrganizationStructure(string authToken, string boxId, string organizationId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetOrganizationStructure", ReplyAction="http://synerdocs.ru/IExchangeService/GetOrganizationStructureResponse")]
        System.IAsyncResult BeginGetOrganizationStructure(string authToken, string boxId, string organizationId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.OrganizationStructureElement[] EndGetOrganizationStructure(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/OrganizationStructureHasSingleElement", ReplyAction="http://synerdocs.ru/IExchangeService/OrganizationStructureHasSingleElementRespons" +
            "e")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/OrganizationStructureHasSingleElementService" +
            "ErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        bool OrganizationStructureHasSingleElement(string authToken, string organizationId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/OrganizationStructureHasSingleElement", ReplyAction="http://synerdocs.ru/IExchangeService/OrganizationStructureHasSingleElementRespons" +
            "e")]
        System.IAsyncResult BeginOrganizationStructureHasSingleElement(string authToken, string organizationId, System.AsyncCallback callback, object asyncState);
        
        bool EndOrganizationStructureHasSingleElement(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetOrganizationStructureElementChildren", ReplyAction="http://synerdocs.ru/IExchangeService/GetOrganizationStructureElementChildrenRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetOrganizationStructureElementChildrenServi" +
            "ceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.OrganizationStructureElement[] GetOrganizationStructureElementChildren(string authToken, string organizationId, string orgStructureElementId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetOrganizationStructureElementChildren", ReplyAction="http://synerdocs.ru/IExchangeService/GetOrganizationStructureElementChildrenRespo" +
            "nse")]
        System.IAsyncResult BeginGetOrganizationStructureElementChildren(string authToken, string organizationId, string orgStructureElementId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.OrganizationStructureElement[] EndGetOrganizationStructureElementChildren(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetVersion", ReplyAction="http://synerdocs.ru/IExchangeService/GetVersionResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetVersionServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        string GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetVersion", ReplyAction="http://synerdocs.ru/IExchangeService/GetVersionResponse")]
        System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState);
        
        string EndGetVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CanSendInvoice", ReplyAction="http://synerdocs.ru/IExchangeService/CanSendInvoiceResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CanSendInvoiceServiceErrorFaultContractFault" +
            "", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        bool CanSendInvoice(string authToken, string certHash);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CanSendInvoice", ReplyAction="http://synerdocs.ru/IExchangeService/CanSendInvoiceResponse")]
        System.IAsyncResult BeginCanSendInvoice(string authToken, string certHash, System.AsyncCallback callback, object asyncState);
        
        bool EndCanSendInvoice(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CheckQualifiedCertificate", ReplyAction="http://synerdocs.ru/IExchangeService/CheckQualifiedCertificateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CheckQualifiedCertificateServiceErrorFaultCo" +
            "ntractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.CertificateValidationResult CheckQualifiedCertificate(byte[] certificate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CheckQualifiedCertificate", ReplyAction="http://synerdocs.ru/IExchangeService/CheckQualifiedCertificateResponse")]
        System.IAsyncResult BeginCheckQualifiedCertificate(byte[] certificate, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.CertificateValidationResult EndCheckQualifiedCertificate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetBoxCertificates", ReplyAction="http://synerdocs.ru/IExchangeService/GetBoxCertificatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetBoxCertificatesServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.BoxCertificate[] GetBoxCertificates(string authToken);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetBoxCertificates", ReplyAction="http://synerdocs.ru/IExchangeService/GetBoxCertificatesResponse")]
        System.IAsyncResult BeginGetBoxCertificates(string authToken, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.BoxCertificate[] EndGetBoxCertificates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetRequiredNotices", ReplyAction="http://synerdocs.ru/IExchangeService/GetRequiredNoticesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetRequiredNoticesServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.ServiceNotice[] GetRequiredNotices(string authToken, string boxId, string certThumbprint);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetRequiredNotices", ReplyAction="http://synerdocs.ru/IExchangeService/GetRequiredNoticesResponse")]
        System.IAsyncResult BeginGetRequiredNotices(string authToken, string boxId, string certThumbprint, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.ServiceNotice[] EndGetRequiredNotices(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetEnhancedSign", ReplyAction="http://synerdocs.ru/IExchangeService/GetEnhancedSignResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetEnhancedSignServiceErrorFaultContractFaul" +
            "t", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.EnhancedSign GetEnhancedSign(string authToken, string boxId, byte[] sign);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetEnhancedSign", ReplyAction="http://synerdocs.ru/IExchangeService/GetEnhancedSignResponse")]
        System.IAsyncResult BeginGetEnhancedSign(string authToken, string boxId, byte[] sign, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.EnhancedSign EndGetEnhancedSign(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetEnhancedSignById", ReplyAction="http://synerdocs.ru/IExchangeService/GetEnhancedSignByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetEnhancedSignByIdServiceErrorFaultContract" +
            "Fault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.EnhancedSign GetEnhancedSignById(string authToken, string boxId, string signId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetEnhancedSignById", ReplyAction="http://synerdocs.ru/IExchangeService/GetEnhancedSignByIdResponse")]
        System.IAsyncResult BeginGetEnhancedSignById(string authToken, string boxId, string signId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.EnhancedSign EndGetEnhancedSignById(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/DownloadDocumentFlowArchive", ReplyAction="http://synerdocs.ru/IExchangeService/DownloadDocumentFlowArchiveResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/DownloadDocumentFlowArchiveServiceErrorFault" +
            "ContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.NamedContent DownloadDocumentFlowArchive(string authToken, string boxId, string documentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/DownloadDocumentFlowArchive", ReplyAction="http://synerdocs.ru/IExchangeService/DownloadDocumentFlowArchiveResponse")]
        System.IAsyncResult BeginDownloadDocumentFlowArchive(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.NamedContent EndDownloadDocumentFlowArchive(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetOrganizationListByInnKpp", ReplyAction="http://synerdocs.ru/IExchangeService/GetOrganizationListByInnKppResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetOrganizationListByInnKppServiceErrorFault" +
            "ContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.Organization[] GetOrganizationListByInnKpp(string authToken, string inn, string kpp);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetOrganizationListByInnKpp", ReplyAction="http://synerdocs.ru/IExchangeService/GetOrganizationListByInnKppResponse")]
        System.IAsyncResult BeginGetOrganizationListByInnKpp(string authToken, string inn, string kpp, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.Organization[] EndGetOrganizationListByInnKpp(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CheckCertificates", ReplyAction="http://synerdocs.ru/IExchangeService/CheckCertificatesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CheckCertificatesServiceErrorFaultContractFa" +
            "ult", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        string[] CheckCertificates(string[] thumbprints);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CheckCertificates", ReplyAction="http://synerdocs.ru/IExchangeService/CheckCertificatesResponse")]
        System.IAsyncResult BeginCheckCertificates(string[] thumbprints, System.AsyncCallback callback, object asyncState);
        
        string[] EndCheckCertificates(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetUserInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetUserInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetUserInfoServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.User GetUserInfo(string authToken, string boxId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetUserInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetUserInfoResponse")]
        System.IAsyncResult BeginGetUserInfo(string authToken, string boxId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.User EndGetUserInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/Register", ReplyAction="http://synerdocs.ru/IExchangeService/RegisterResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/RegisterServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.RegisterResult Register(Midway.ObjectModel.RegisterModel registerModel, byte[] certificate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/Register", ReplyAction="http://synerdocs.ru/IExchangeService/RegisterResponse")]
        System.IAsyncResult BeginRegister(Midway.ObjectModel.RegisterModel registerModel, byte[] certificate, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.RegisterResult EndRegister(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/AcceptRegulation", ReplyAction="http://synerdocs.ru/IExchangeService/AcceptRegulationResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/AcceptRegulationServiceErrorFaultContractFau" +
            "lt", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        bool AcceptRegulation(string authToken, string boxId, [System.ServiceModel.MessageParameterAttribute(Name="acceptRegulation")] bool acceptRegulation1);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/AcceptRegulation", ReplyAction="http://synerdocs.ru/IExchangeService/AcceptRegulationResponse")]
        System.IAsyncResult BeginAcceptRegulation(string authToken, string boxId, bool acceptRegulation, System.AsyncCallback callback, object asyncState);
        
        bool EndAcceptRegulation(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/HasQualifiedCertificate", ReplyAction="http://synerdocs.ru/IExchangeService/HasQualifiedCertificateResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/HasQualifiedCertificateServiceErrorFaultCont" +
            "ractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        bool HasQualifiedCertificate(string authToken, string contragentBoxId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/HasQualifiedCertificate", ReplyAction="http://synerdocs.ru/IExchangeService/HasQualifiedCertificateResponse")]
        System.IAsyncResult BeginHasQualifiedCertificate(string authToken, string contragentBoxId, System.AsyncCallback callback, object asyncState);
        
        bool EndHasQualifiedCertificate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/SendUnsignedMessage", ReplyAction="http://synerdocs.ru/IExchangeService/SendUnsignedMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/SendUnsignedMessageServiceErrorFaultContract" +
            "Fault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.SentMessage SendUnsignedMessage(string authToken, Midway.ObjectModel.UnsignedMessage message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/SendUnsignedMessage", ReplyAction="http://synerdocs.ru/IExchangeService/SendUnsignedMessageResponse")]
        System.IAsyncResult BeginSendUnsignedMessage(string authToken, Midway.ObjectModel.UnsignedMessage message, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SentMessage EndSendUnsignedMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/SendForwardMessage", ReplyAction="http://synerdocs.ru/IExchangeService/SendForwardMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/SendForwardMessageServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.SentMessage SendForwardMessage(string authToken, Midway.ObjectModel.ForwardMessage message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/SendForwardMessage", ReplyAction="http://synerdocs.ru/IExchangeService/SendForwardMessageResponse")]
        System.IAsyncResult BeginSendForwardMessage(string authToken, Midway.ObjectModel.ForwardMessage message, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SentMessage EndSendForwardMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/SignDocument", ReplyAction="http://synerdocs.ru/IExchangeService/SignDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/SignDocumentServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        void SignDocument(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.Sign sign);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/SignDocument", ReplyAction="http://synerdocs.ru/IExchangeService/SignDocumentResponse")]
        System.IAsyncResult BeginSignDocument(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.Sign sign, System.AsyncCallback callback, object asyncState);
        
        void EndSignDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/SignDocumentWithSimpleSignature", ReplyAction="http://synerdocs.ru/IExchangeService/SignDocumentWithSimpleSignatureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/SignDocumentWithSimpleSignatureServiceErrorF" +
            "aultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        void SignDocumentWithSimpleSignature(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.SimpleSignature signature);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/SignDocumentWithSimpleSignature", ReplyAction="http://synerdocs.ru/IExchangeService/SignDocumentWithSimpleSignatureResponse")]
        System.IAsyncResult BeginSignDocumentWithSimpleSignature(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.SimpleSignature signature, System.AsyncCallback callback, object asyncState);
        
        void EndSignDocumentWithSimpleSignature(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/RejectSign", ReplyAction="http://synerdocs.ru/IExchangeService/RejectSignResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/RejectSignServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void RejectSign(string authToken, Midway.ObjectModel.FlowType flowType, [System.ServiceModel.MessageParameterAttribute(Name="rejectSign")] Midway.ObjectModel.RejectSign rejectSign1);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/RejectSign", ReplyAction="http://synerdocs.ru/IExchangeService/RejectSignResponse")]
        System.IAsyncResult BeginRejectSign(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.RejectSign rejectSign, System.AsyncCallback callback, object asyncState);
        
        void EndRejectSign(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDocumentEntries", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentEntriesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDocumentEntriesServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.DocumentEntryList GetDocumentEntries(string authToken, Midway.ObjectModel.DocumentEntryOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDocumentEntries", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentEntriesResponse")]
        System.IAsyncResult BeginGetDocumentEntries(string authToken, Midway.ObjectModel.DocumentEntryOptions options, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentEntryList EndGetDocumentEntries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetFlowDocumentInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetFlowDocumentInfoResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetFlowDocumentInfoServiceErrorFaultContract" +
            "Fault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.FlowDocumentInfo GetFlowDocumentInfo(string authToken, string boxId, string documentId, Midway.ObjectModel.FlowDocumentInfoRequestParams requestParams);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetFlowDocumentInfo", ReplyAction="http://synerdocs.ru/IExchangeService/GetFlowDocumentInfoResponse")]
        System.IAsyncResult BeginGetFlowDocumentInfo(string authToken, string boxId, string documentId, Midway.ObjectModel.FlowDocumentInfoRequestParams requestParams, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.FlowDocumentInfo EndGetFlowDocumentInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/SendInternalMessage", ReplyAction="http://synerdocs.ru/IExchangeService/SendInternalMessageResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/SendInternalMessageServiceErrorFaultContract" +
            "Fault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.SentMessage SendInternalMessage(string authToken, Midway.ObjectModel.InternalMessage message);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/SendInternalMessage", ReplyAction="http://synerdocs.ru/IExchangeService/SendInternalMessageResponse")]
        System.IAsyncResult BeginSendInternalMessage(string authToken, Midway.ObjectModel.InternalMessage message, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.SentMessage EndSendInternalMessage(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetInternalDocuments", ReplyAction="http://synerdocs.ru/IExchangeService/GetInternalDocumentsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetInternalDocumentsServiceErrorFaultContrac" +
            "tFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.DocumentEntryList GetInternalDocuments(string authToken, Midway.ObjectModel.InternalListOptions options);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetInternalDocuments", ReplyAction="http://synerdocs.ru/IExchangeService/GetInternalDocumentsResponse")]
        System.IAsyncResult BeginGetInternalDocuments(string authToken, Midway.ObjectModel.InternalListOptions options, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentEntryList EndGetInternalDocuments(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/MoveDocumentToDepartment", ReplyAction="http://synerdocs.ru/IExchangeService/MoveDocumentToDepartmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/MoveDocumentToDepartmentServiceErrorFaultCon" +
            "tractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        bool MoveDocumentToDepartment(string authToken, string boxId, string documentId, string departmentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/MoveDocumentToDepartment", ReplyAction="http://synerdocs.ru/IExchangeService/MoveDocumentToDepartmentResponse")]
        System.IAsyncResult BeginMoveDocumentToDepartment(string authToken, string boxId, string documentId, string departmentId, System.AsyncCallback callback, object asyncState);
        
        bool EndMoveDocumentToDepartment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/MoveDocumentsToDepartment", ReplyAction="http://synerdocs.ru/IExchangeService/MoveDocumentsToDepartmentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/MoveDocumentsToDepartmentServiceErrorFaultCo" +
            "ntractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        string[] MoveDocumentsToDepartment(string authToken, string boxId, string[] documentIds, string departmentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/MoveDocumentsToDepartment", ReplyAction="http://synerdocs.ru/IExchangeService/MoveDocumentsToDepartmentResponse")]
        System.IAsyncResult BeginMoveDocumentsToDepartment(string authToken, string boxId, string[] documentIds, string departmentId, System.AsyncCallback callback, object asyncState);
        
        string[] EndMoveDocumentsToDepartment(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/MoveDocument", ReplyAction="http://synerdocs.ru/IExchangeService/MoveDocumentResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/MoveDocumentServiceErrorFaultContractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.DocumentMovingResponse MoveDocument(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentMovingRequest request);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/MoveDocument", ReplyAction="http://synerdocs.ru/IExchangeService/MoveDocumentResponse")]
        System.IAsyncResult BeginMoveDocument(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentMovingRequest request, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentMovingResponse EndMoveDocument(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDepartmentEmployees", ReplyAction="http://synerdocs.ru/IExchangeService/GetDepartmentEmployeesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDepartmentEmployeesServiceErrorFaultContr" +
            "actFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.User[] GetDepartmentEmployees(string authToken, string boxId, string departmentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDepartmentEmployees", ReplyAction="http://synerdocs.ru/IExchangeService/GetDepartmentEmployeesResponse")]
        System.IAsyncResult BeginGetDepartmentEmployees(string authToken, string boxId, string departmentId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.User[] EndGetDepartmentEmployees(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/CreateDocumentTag", ReplyAction="http://synerdocs.ru/IExchangeService/CreateDocumentTagResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/CreateDocumentTagServiceErrorFaultContractFa" +
            "ult", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        string CreateDocumentTag(string authToken, Midway.ObjectModel.DocumentTag documentTag);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/CreateDocumentTag", ReplyAction="http://synerdocs.ru/IExchangeService/CreateDocumentTagResponse")]
        System.IAsyncResult BeginCreateDocumentTag(string authToken, Midway.ObjectModel.DocumentTag documentTag, System.AsyncCallback callback, object asyncState);
        
        string EndCreateDocumentTag(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/DeleteDocumentTag", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteDocumentTagResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/DeleteDocumentTagServiceErrorFaultContractFa" +
            "ult", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void DeleteDocumentTag(string authToken, string documentTagId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/DeleteDocumentTag", ReplyAction="http://synerdocs.ru/IExchangeService/DeleteDocumentTagResponse")]
        System.IAsyncResult BeginDeleteDocumentTag(string authToken, string documentTagId, System.AsyncCallback callback, object asyncState);
        
        void EndDeleteDocumentTag(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDocumentTag", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentTagResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDocumentTagServiceErrorFaultContractFault" +
            "", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.DocumentTypeEnum))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(Midway.ObjectModel.ContentFormatEnum))]
        Midway.ObjectModel.DocumentTag GetDocumentTag(string authToken, string documentTagId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDocumentTag", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentTagResponse")]
        System.IAsyncResult BeginGetDocumentTag(string authToken, string documentTagId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentTag EndGetDocumentTag(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/GetDocumentTagList", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentTagListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/GetDocumentTagListServiceErrorFaultContractF" +
            "ault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        Midway.ObjectModel.DocumentTag[] GetDocumentTagList(string authToken, string boxId, string documentId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/GetDocumentTagList", ReplyAction="http://synerdocs.ru/IExchangeService/GetDocumentTagListResponse")]
        System.IAsyncResult BeginGetDocumentTagList(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState);
        
        Midway.ObjectModel.DocumentTag[] EndGetDocumentTagList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://synerdocs.ru/IExchangeService/AddOrganizationPromoCode", ReplyAction="http://synerdocs.ru/IExchangeService/AddOrganizationPromoCodeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Midway.ObjectModel.Exceptions.ServiceErrorFaultContract), Action="http://synerdocs.ru/IExchangeService/AddOrganizationPromoCodeServiceErrorFaultCon" +
            "tractFault", Name="ServiceErrorFaultContract", Namespace="http://schemas.datacontract.org/2004/07/Midway.ObjectModel.Exceptions")]
        void AddOrganizationPromoCode(string authToken, string boxId, string promoCodeName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://synerdocs.ru/IExchangeService/AddOrganizationPromoCode", ReplyAction="http://synerdocs.ru/IExchangeService/AddOrganizationPromoCodeResponse")]
        System.IAsyncResult BeginAddOrganizationPromoCode(string authToken, string boxId, string promoCodeName, System.AsyncCallback callback, object asyncState);
        
        void EndAddOrganizationPromoCode(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IExchangeServiceChannel : Midway.ServiceClient.Model.IExchangeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGoodsTransportWaybillCargoReceivedTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGoodsTransportWaybillCargoReceivedTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGoodsTransportWaybillCargoDeliveredTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGoodsTransportWaybillCargoDeliveredTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAvailableDepartmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAvailableDepartmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.AvailableDepartmentsResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.AvailableDepartmentsResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDocumentGoodsMarkingStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDocumentGoodsMarkingStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGoodsMarkingStateResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGoodsMarkingStateResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrganizationPromoCodeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrganizationPromoCodeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.OrganizationPromoCode[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.OrganizationPromoCode[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPromoCodeByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPromoCodeByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.PromoCode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.PromoCode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckCertificateListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckCertificateListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.CertificateCheckInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.CertificateCheckInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateStatementOfInvoiceReglamentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateStatementOfInvoiceReglamentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendStatementOfInvoiceReglamentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendStatementOfInvoiceReglamentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SentMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SentMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckNeedToStatementOfInvoiceReglamentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckNeedToStatementOfInvoiceReglamentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGeneralTransferSellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGeneralTransferSellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneralTransferSeller Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneralTransferSeller)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGeneralTransferBuyerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGeneralTransferBuyerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneralTransferBuyer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneralTransferBuyer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseWorksTransferSellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseWorksTransferSellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.WorksTransferSeller Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.WorksTransferSeller)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseWorksTransferBuyerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseWorksTransferBuyerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.WorksTransferBuyer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.WorksTransferBuyer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGoodsTransferSellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGoodsTransferSellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GoodsTransferSeller Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GoodsTransferSeller)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGoodsTransferBuyerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGoodsTransferBuyerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GoodsTransferBuyer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GoodsTransferBuyer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGeneralTransferCorrectionSellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGeneralTransferCorrectionSellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneralTransferCorrectionSeller Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneralTransferCorrectionSeller)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGeneralTransferCorrectionBuyerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGeneralTransferCorrectionBuyerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneralTransferCorrectionBuyer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneralTransferCorrectionBuyer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGeneralTransferCorrectionBuyerV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGeneralTransferCorrectionBuyerV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGeneralTransferSellerV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGeneralTransferSellerV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneralTransferSellerV2ParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneralTransferSellerV2ParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGeneralTransferBuyerV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGeneralTransferBuyerV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneralTransferBuyerV2ParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneralTransferBuyerV2ParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseTransportWaybillConsignorTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseTransportWaybillConsignorTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.TransportWaybillConsignorTitleParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.TransportWaybillConsignorTitleParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseTransportWaybillCargoReceivedTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseTransportWaybillCargoReceivedTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.TransportWaybillCargoReceivedTitleParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.TransportWaybillCargoReceivedTitleParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseTransportWaybillCargoDeliveredTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseTransportWaybillCargoDeliveredTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.TransportWaybillCargoDeliveredTitleParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.TransportWaybillCargoDeliveredTitleParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseTransportWaybillConsigneeTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseTransportWaybillConsigneeTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.TransportWaybillConsigneeTitleParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.TransportWaybillConsigneeTitleParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseTransportWaybillCarrierTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseTransportWaybillCarrierTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.TransportWaybillCarrierTitleParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.TransportWaybillCarrierTitleParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseTransportWaybillDeliveryPlaceChangeTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseTransportWaybillDeliveryPlaceChangeTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseTransportWaybillDriverOrVehicleChangeTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseTransportWaybillDriverOrVehicleChangeTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseTransportWaybillExpeditorTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseTransportWaybillExpeditorTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.TransportWaybillExpeditorTitleParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.TransportWaybillExpeditorTitleParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGeneralTransferCorrectionSellerTitleV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGeneralTransferCorrectionSellerTitleV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateWorksTransferSellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateWorksTransferSellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneratedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneratedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGoodsTransferSellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGoodsTransferSellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneratedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneratedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGeneralTransferSellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGeneralTransferSellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneratedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneratedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGeneralTransferSellerV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGeneralTransferSellerV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGeneralTransferCorrectionSellerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGeneralTransferCorrectionSellerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneratedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneratedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGeneralTransferCorrectionSellerTitleV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGeneralTransferCorrectionSellerTitleV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateWorksTransferBuyerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateWorksTransferBuyerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneratedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneratedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGoodsTransferBuyerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGoodsTransferBuyerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneratedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneratedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGeneralTransferBuyerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGeneralTransferBuyerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneratedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneratedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGeneralTransferBuyerV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGeneralTransferBuyerV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGeneralTransferCorrectionBuyerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGeneralTransferCorrectionBuyerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GeneratedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GeneratedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGeneralTransferCorrectionBuyerV3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGeneralTransferCorrectionBuyerV3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateTransportWaybillConsignorTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateTransportWaybillConsignorTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateTransportWaybillCargoReceivedTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateTransportWaybillCargoReceivedTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateTransportWaybillCargoDeliveredTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateTransportWaybillCargoDeliveredTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateTransportWaybillConsigneeTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateTransportWaybillConsigneeTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateTransportWaybillCarrierTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateTransportWaybillCarrierTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateTransportWaybillDeliveryPlaceChangeTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateTransportWaybillDeliveryPlaceChangeTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateTransportWaybillDriverOrVehicleChangeTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateTransportWaybillDriverOrVehicleChangeTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateTransportWaybillExpeditorTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateTransportWaybillExpeditorTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadPdfDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadPdfDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.RegistrationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.RegistrationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateNonActiveSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateNonActiveSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NonActiveSubscriberCreationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NonActiveSubscriberCreationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCertificateSubjectInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCertificateSubjectInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.QualifiedX509Name Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.QualifiedX509Name)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDocumentExecutedFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDocumentExecutedFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.EnumValue Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.EnumValue)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateCertificateIssueRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateCertificateIssueRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.CertificateIssueRequestCreationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.CertificateIssueRequestCreationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateCertificateIssueRequestFromFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateCertificateIssueRequestFromFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.CertificateIssueRequestCreationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.CertificateIssueRequestCreationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCertificateIssueShortInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCertificateIssueShortInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.CertificateIssueShortInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.CertificateIssueShortInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCertificateIssueInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCertificateIssueInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.CertificateIssueInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.CertificateIssueInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReissueCertificateQrCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReissueCertificateQrCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.IssuedCertificateQrCode Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.IssuedCertificateQrCode)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckSimpleSignatureAvailabilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckSimpleSignatureAvailabilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SimpleSignatureAvailabilityCheckingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SimpleSignatureAvailabilityCheckingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AcceptSimpleSignatureRegulationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AcceptSimpleSignatureRegulationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SimpleSignatureRegulationAcceptingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SimpleSignatureRegulationAcceptingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PreviewSimpleSignatureRequisitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PreviewSimpleSignatureRequisitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SimpleSignatureRequisitesPreviewingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SimpleSignatureRequisitesPreviewingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateSimpleSignatureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateSimpleSignatureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SimpleSignatureCreationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SimpleSignatureCreationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateUserAndEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateUserAndEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.UserAndEmployeeCreationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.UserAndEmployeeCreationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SettingGettingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SettingGettingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateSettingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateSettingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SettingUpdatingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SettingUpdatingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEmployeeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEmployeeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.Employee Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.Employee)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.EmployeeSearchResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.EmployeeSearchResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateEmployeeAdministratorAuthorityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateEmployeeAdministratorAuthorityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.AdministratorAuthorityUpdatingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.AdministratorAuthorityUpdatingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateEmployeePersonalInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateEmployeePersonalInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.PersonalInfoUpdatingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.PersonalInfoUpdatingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateEmployeeCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateEmployeeCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.CertificateUpdatingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.CertificateUpdatingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.PasswordUpdatingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.PasswordUpdatingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEnumValuesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEnumValuesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.Utility.EnumValuesResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.Utility.EnumValuesResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrintDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public PrintDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentPrintingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentPrintingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDocumentTypeVersionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDocumentTypeVersionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentTypeVersionsGettingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentTypeVersionsGettingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchProviderIdentificationCentersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchProviderIdentificationCentersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.ProviderIdentificationCentersSearchingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.ProviderIdentificationCentersSearchingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGoodsTransportWaybillConsignorTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGoodsTransportWaybillConsignorTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGoodsTransportWaybillConsigneeTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGoodsTransportWaybillConsigneeTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGoodsTransportWaybillCargoReceivedTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGoodsTransportWaybillCargoReceivedTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ParseGoodsTransportWaybillCargoDeliveredTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ParseGoodsTransportWaybillCargoDeliveredTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleParsingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleParsingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGoodsTransportWaybillConsignorTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGoodsTransportWaybillConsignorTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateGoodsTransportWaybillConsigneeTitleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateGoodsTransportWaybillConsigneeTitleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentGenerationResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateWithCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateWithCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateWithCertificateAndPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateWithCertificateAndPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateWithCertificate2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateWithCertificate2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateWithIdentityTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateWithIdentityTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateWithAccessTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateWithAccessTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.MessageInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.MessageInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.Message Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.Message)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMessageWithLoadOptionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMessageWithLoadOptionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.Message Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.Message)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SentMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SentMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateDraftMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateDraftMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDraftMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDraftMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DraftMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DraftMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDraftMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDraftMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DraftMessageSearchResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DraftMessageSearchResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDraftMessageCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDraftMessageCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDraftDocumentContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDraftDocumentContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDraftDocumentCardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDraftDocumentCardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateInvoiceReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateInvoiceReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateInvoiceReceiptV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateInvoiceReceiptV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateInvoiceAmendmentRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateInvoiceAmendmentRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateInvoiceAmendmentRequestV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateInvoiceAmendmentRequestV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateDeliveryConfirmationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateDeliveryConfirmationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateDeliveryConfirmationV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateDeliveryConfirmationV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateAmendmentRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateAmendmentRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateAmendmentRequestV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateAmendmentRequestV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateTitleBuyerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateTitleBuyerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GenerateRevocationOfferCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GenerateRevocationOfferCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDocumentContentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDocumentContentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFullDocumentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFullDocumentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.FullDocumentInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.FullDocumentInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDocumentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDocumentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInnKppNameByBoxIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInnKppNameByBoxIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.InnKppName Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.InnKppName)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchContactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchContactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.ContactSearchResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.ContactSearchResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetContactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetContactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.Contact Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.Contact)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AcceptAuthorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AcceptAuthorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.ContactStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.ContactStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RejectAuthorizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RejectAuthorizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.ContactStatus Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.ContactStatus)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrganizationByInnKppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrganizationByInnKppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.Organization Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.Organization)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrganizationByCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrganizationByCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.Organization Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.Organization)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetErrorTextCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetErrorTextCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBoxesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBoxesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.BoxInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.BoxInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSubjectInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSubjectInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SubjectInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SubjectInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSpecialOperatorInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSpecialOperatorInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SubjectInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SubjectInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AddOrganizationStructureElementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AddOrganizationStructureElementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrganizationStructureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrganizationStructureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.OrganizationStructureElement[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.OrganizationStructureElement[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrganizationStructureHasSingleElementCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public OrganizationStructureHasSingleElementCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrganizationStructureElementChildrenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrganizationStructureElementChildrenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.OrganizationStructureElement[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.OrganizationStructureElement[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CanSendInvoiceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CanSendInvoiceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckQualifiedCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckQualifiedCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.CertificateValidationResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.CertificateValidationResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBoxCertificatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBoxCertificatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.BoxCertificate[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.BoxCertificate[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRequiredNoticesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRequiredNoticesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.ServiceNotice[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.ServiceNotice[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEnhancedSignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEnhancedSignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.EnhancedSign Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.EnhancedSign)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEnhancedSignByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEnhancedSignByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.EnhancedSign Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.EnhancedSign)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadDocumentFlowArchiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadDocumentFlowArchiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.NamedContent Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.NamedContent)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetOrganizationListByInnKppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOrganizationListByInnKppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.Organization[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.Organization[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CheckCertificatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CheckCertificatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.User Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.User)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.RegisterResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.RegisterResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AcceptRegulationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AcceptRegulationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HasQualifiedCertificateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HasQualifiedCertificateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendUnsignedMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendUnsignedMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SentMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SentMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendForwardMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendForwardMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SentMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SentMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDocumentEntriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDocumentEntriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentEntryList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentEntryList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetFlowDocumentInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetFlowDocumentInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.FlowDocumentInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.FlowDocumentInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendInternalMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendInternalMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.SentMessage Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.SentMessage)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetInternalDocumentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetInternalDocumentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentEntryList Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentEntryList)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoveDocumentToDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MoveDocumentToDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoveDocumentsToDepartmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MoveDocumentsToDepartmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MoveDocumentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MoveDocumentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentMovingResponse Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentMovingResponse)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDepartmentEmployeesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDepartmentEmployeesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.User[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.User[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateDocumentTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateDocumentTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDocumentTagCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDocumentTagCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentTag Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentTag)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDocumentTagListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDocumentTagListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public Midway.ObjectModel.DocumentTag[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((Midway.ObjectModel.DocumentTag[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ExchangeServiceClient : System.ServiceModel.ClientBase<Midway.ServiceClient.Model.IExchangeService>, Midway.ServiceClient.Model.IExchangeService {
        
        private BeginOperationDelegate onBeginGenerateGoodsTransportWaybillCargoReceivedTitleDelegate;
        
        private EndOperationDelegate onEndGenerateGoodsTransportWaybillCargoReceivedTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateGoodsTransportWaybillCargoReceivedTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGoodsTransportWaybillCargoDeliveredTitleDelegate;
        
        private EndOperationDelegate onEndGenerateGoodsTransportWaybillCargoDeliveredTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateGoodsTransportWaybillCargoDeliveredTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAvailableDepartmentsDelegate;
        
        private EndOperationDelegate onEndGetAvailableDepartmentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAvailableDepartmentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDocumentGoodsMarkingStateDelegate;
        
        private EndOperationDelegate onEndGetDocumentGoodsMarkingStateDelegate;
        
        private System.Threading.SendOrPostCallback onGetDocumentGoodsMarkingStateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrganizationPromoCodeListDelegate;
        
        private EndOperationDelegate onEndGetOrganizationPromoCodeListDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrganizationPromoCodeListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPromoCodeByNameDelegate;
        
        private EndOperationDelegate onEndGetPromoCodeByNameDelegate;
        
        private System.Threading.SendOrPostCallback onGetPromoCodeByNameCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteOrganizationPromoCodeDelegate;
        
        private EndOperationDelegate onEndDeleteOrganizationPromoCodeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteOrganizationPromoCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckCertificateListDelegate;
        
        private EndOperationDelegate onEndCheckCertificateListDelegate;
        
        private System.Threading.SendOrPostCallback onCheckCertificateListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateStatementOfInvoiceReglamentDelegate;
        
        private EndOperationDelegate onEndGenerateStatementOfInvoiceReglamentDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateStatementOfInvoiceReglamentCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendStatementOfInvoiceReglamentDelegate;
        
        private EndOperationDelegate onEndSendStatementOfInvoiceReglamentDelegate;
        
        private System.Threading.SendOrPostCallback onSendStatementOfInvoiceReglamentCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckNeedToStatementOfInvoiceReglamentDelegate;
        
        private EndOperationDelegate onEndCheckNeedToStatementOfInvoiceReglamentDelegate;
        
        private System.Threading.SendOrPostCallback onCheckNeedToStatementOfInvoiceReglamentCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGeneralTransferSellerDelegate;
        
        private EndOperationDelegate onEndParseGeneralTransferSellerDelegate;
        
        private System.Threading.SendOrPostCallback onParseGeneralTransferSellerCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGeneralTransferBuyerDelegate;
        
        private EndOperationDelegate onEndParseGeneralTransferBuyerDelegate;
        
        private System.Threading.SendOrPostCallback onParseGeneralTransferBuyerCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseWorksTransferSellerDelegate;
        
        private EndOperationDelegate onEndParseWorksTransferSellerDelegate;
        
        private System.Threading.SendOrPostCallback onParseWorksTransferSellerCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseWorksTransferBuyerDelegate;
        
        private EndOperationDelegate onEndParseWorksTransferBuyerDelegate;
        
        private System.Threading.SendOrPostCallback onParseWorksTransferBuyerCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGoodsTransferSellerDelegate;
        
        private EndOperationDelegate onEndParseGoodsTransferSellerDelegate;
        
        private System.Threading.SendOrPostCallback onParseGoodsTransferSellerCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGoodsTransferBuyerDelegate;
        
        private EndOperationDelegate onEndParseGoodsTransferBuyerDelegate;
        
        private System.Threading.SendOrPostCallback onParseGoodsTransferBuyerCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGeneralTransferCorrectionSellerDelegate;
        
        private EndOperationDelegate onEndParseGeneralTransferCorrectionSellerDelegate;
        
        private System.Threading.SendOrPostCallback onParseGeneralTransferCorrectionSellerCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGeneralTransferCorrectionBuyerDelegate;
        
        private EndOperationDelegate onEndParseGeneralTransferCorrectionBuyerDelegate;
        
        private System.Threading.SendOrPostCallback onParseGeneralTransferCorrectionBuyerCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGeneralTransferCorrectionBuyerV3Delegate;
        
        private EndOperationDelegate onEndParseGeneralTransferCorrectionBuyerV3Delegate;
        
        private System.Threading.SendOrPostCallback onParseGeneralTransferCorrectionBuyerV3CompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGeneralTransferSellerV2Delegate;
        
        private EndOperationDelegate onEndParseGeneralTransferSellerV2Delegate;
        
        private System.Threading.SendOrPostCallback onParseGeneralTransferSellerV2CompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGeneralTransferBuyerV2Delegate;
        
        private EndOperationDelegate onEndParseGeneralTransferBuyerV2Delegate;
        
        private System.Threading.SendOrPostCallback onParseGeneralTransferBuyerV2CompletedDelegate;
        
        private BeginOperationDelegate onBeginParseTransportWaybillConsignorTitleDelegate;
        
        private EndOperationDelegate onEndParseTransportWaybillConsignorTitleDelegate;
        
        private System.Threading.SendOrPostCallback onParseTransportWaybillConsignorTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseTransportWaybillCargoReceivedTitleDelegate;
        
        private EndOperationDelegate onEndParseTransportWaybillCargoReceivedTitleDelegate;
        
        private System.Threading.SendOrPostCallback onParseTransportWaybillCargoReceivedTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseTransportWaybillCargoDeliveredTitleDelegate;
        
        private EndOperationDelegate onEndParseTransportWaybillCargoDeliveredTitleDelegate;
        
        private System.Threading.SendOrPostCallback onParseTransportWaybillCargoDeliveredTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseTransportWaybillConsigneeTitleDelegate;
        
        private EndOperationDelegate onEndParseTransportWaybillConsigneeTitleDelegate;
        
        private System.Threading.SendOrPostCallback onParseTransportWaybillConsigneeTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseTransportWaybillCarrierTitleDelegate;
        
        private EndOperationDelegate onEndParseTransportWaybillCarrierTitleDelegate;
        
        private System.Threading.SendOrPostCallback onParseTransportWaybillCarrierTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseTransportWaybillDeliveryPlaceChangeTitleDelegate;
        
        private EndOperationDelegate onEndParseTransportWaybillDeliveryPlaceChangeTitleDelegate;
        
        private System.Threading.SendOrPostCallback onParseTransportWaybillDeliveryPlaceChangeTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseTransportWaybillDriverOrVehicleChangeTitleDelegate;
        
        private EndOperationDelegate onEndParseTransportWaybillDriverOrVehicleChangeTitleDelegate;
        
        private System.Threading.SendOrPostCallback onParseTransportWaybillDriverOrVehicleChangeTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseTransportWaybillExpeditorTitleDelegate;
        
        private EndOperationDelegate onEndParseTransportWaybillExpeditorTitleDelegate;
        
        private System.Threading.SendOrPostCallback onParseTransportWaybillExpeditorTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGeneralTransferCorrectionSellerTitleV3Delegate;
        
        private EndOperationDelegate onEndParseGeneralTransferCorrectionSellerTitleV3Delegate;
        
        private System.Threading.SendOrPostCallback onParseGeneralTransferCorrectionSellerTitleV3CompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateWorksTransferSellerDelegate;
        
        private EndOperationDelegate onEndGenerateWorksTransferSellerDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateWorksTransferSellerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGoodsTransferSellerDelegate;
        
        private EndOperationDelegate onEndGenerateGoodsTransferSellerDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateGoodsTransferSellerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGeneralTransferSellerDelegate;
        
        private EndOperationDelegate onEndGenerateGeneralTransferSellerDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateGeneralTransferSellerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGeneralTransferSellerV2Delegate;
        
        private EndOperationDelegate onEndGenerateGeneralTransferSellerV2Delegate;
        
        private System.Threading.SendOrPostCallback onGenerateGeneralTransferSellerV2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGeneralTransferCorrectionSellerDelegate;
        
        private EndOperationDelegate onEndGenerateGeneralTransferCorrectionSellerDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateGeneralTransferCorrectionSellerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGeneralTransferCorrectionSellerTitleV3Delegate;
        
        private EndOperationDelegate onEndGenerateGeneralTransferCorrectionSellerTitleV3Delegate;
        
        private System.Threading.SendOrPostCallback onGenerateGeneralTransferCorrectionSellerTitleV3CompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateWorksTransferBuyerDelegate;
        
        private EndOperationDelegate onEndGenerateWorksTransferBuyerDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateWorksTransferBuyerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGoodsTransferBuyerDelegate;
        
        private EndOperationDelegate onEndGenerateGoodsTransferBuyerDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateGoodsTransferBuyerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGeneralTransferBuyerDelegate;
        
        private EndOperationDelegate onEndGenerateGeneralTransferBuyerDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateGeneralTransferBuyerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGeneralTransferBuyerV2Delegate;
        
        private EndOperationDelegate onEndGenerateGeneralTransferBuyerV2Delegate;
        
        private System.Threading.SendOrPostCallback onGenerateGeneralTransferBuyerV2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGeneralTransferCorrectionBuyerDelegate;
        
        private EndOperationDelegate onEndGenerateGeneralTransferCorrectionBuyerDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateGeneralTransferCorrectionBuyerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGeneralTransferCorrectionBuyerV3Delegate;
        
        private EndOperationDelegate onEndGenerateGeneralTransferCorrectionBuyerV3Delegate;
        
        private System.Threading.SendOrPostCallback onGenerateGeneralTransferCorrectionBuyerV3CompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateTransportWaybillConsignorTitleDelegate;
        
        private EndOperationDelegate onEndGenerateTransportWaybillConsignorTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateTransportWaybillConsignorTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateTransportWaybillCargoReceivedTitleDelegate;
        
        private EndOperationDelegate onEndGenerateTransportWaybillCargoReceivedTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateTransportWaybillCargoReceivedTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateTransportWaybillCargoDeliveredTitleDelegate;
        
        private EndOperationDelegate onEndGenerateTransportWaybillCargoDeliveredTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateTransportWaybillCargoDeliveredTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateTransportWaybillConsigneeTitleDelegate;
        
        private EndOperationDelegate onEndGenerateTransportWaybillConsigneeTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateTransportWaybillConsigneeTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateTransportWaybillCarrierTitleDelegate;
        
        private EndOperationDelegate onEndGenerateTransportWaybillCarrierTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateTransportWaybillCarrierTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateTransportWaybillDeliveryPlaceChangeTitleDelegate;
        
        private EndOperationDelegate onEndGenerateTransportWaybillDeliveryPlaceChangeTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateTransportWaybillDeliveryPlaceChangeTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateTransportWaybillDriverOrVehicleChangeTitleDelegate;
        
        private EndOperationDelegate onEndGenerateTransportWaybillDriverOrVehicleChangeTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateTransportWaybillDriverOrVehicleChangeTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateTransportWaybillExpeditorTitleDelegate;
        
        private EndOperationDelegate onEndGenerateTransportWaybillExpeditorTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateTransportWaybillExpeditorTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadPdfDocumentDelegate;
        
        private EndOperationDelegate onEndDownloadPdfDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadPdfDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterSubscriberDelegate;
        
        private EndOperationDelegate onEndRegisterSubscriberDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterSubscriberCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateNonActiveSubscriberDelegate;
        
        private EndOperationDelegate onEndCreateNonActiveSubscriberDelegate;
        
        private System.Threading.SendOrPostCallback onCreateNonActiveSubscriberCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCertificateSubjectInfoDelegate;
        
        private EndOperationDelegate onEndGetCertificateSubjectInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetCertificateSubjectInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDocumentExecutedFunctionDelegate;
        
        private EndOperationDelegate onEndGetDocumentExecutedFunctionDelegate;
        
        private System.Threading.SendOrPostCallback onGetDocumentExecutedFunctionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateCertificateIssueRequestDelegate;
        
        private EndOperationDelegate onEndCreateCertificateIssueRequestDelegate;
        
        private System.Threading.SendOrPostCallback onCreateCertificateIssueRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateCertificateIssueRequestFromFileDelegate;
        
        private EndOperationDelegate onEndCreateCertificateIssueRequestFromFileDelegate;
        
        private System.Threading.SendOrPostCallback onCreateCertificateIssueRequestFromFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCertificateIssueShortInfoDelegate;
        
        private EndOperationDelegate onEndGetCertificateIssueShortInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetCertificateIssueShortInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCertificateIssueInfoDelegate;
        
        private EndOperationDelegate onEndGetCertificateIssueInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetCertificateIssueInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginReissueCertificateQrCodeDelegate;
        
        private EndOperationDelegate onEndReissueCertificateQrCodeDelegate;
        
        private System.Threading.SendOrPostCallback onReissueCertificateQrCodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckSimpleSignatureAvailabilityDelegate;
        
        private EndOperationDelegate onEndCheckSimpleSignatureAvailabilityDelegate;
        
        private System.Threading.SendOrPostCallback onCheckSimpleSignatureAvailabilityCompletedDelegate;
        
        private BeginOperationDelegate onBeginAcceptSimpleSignatureRegulationDelegate;
        
        private EndOperationDelegate onEndAcceptSimpleSignatureRegulationDelegate;
        
        private System.Threading.SendOrPostCallback onAcceptSimpleSignatureRegulationCompletedDelegate;
        
        private BeginOperationDelegate onBeginPreviewSimpleSignatureRequisitesDelegate;
        
        private EndOperationDelegate onEndPreviewSimpleSignatureRequisitesDelegate;
        
        private System.Threading.SendOrPostCallback onPreviewSimpleSignatureRequisitesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateSimpleSignatureDelegate;
        
        private EndOperationDelegate onEndCreateSimpleSignatureDelegate;
        
        private System.Threading.SendOrPostCallback onCreateSimpleSignatureCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateUserAndEmployeeDelegate;
        
        private EndOperationDelegate onEndCreateUserAndEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onCreateUserAndEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteEmployeeDelegate;
        
        private EndOperationDelegate onEndDeleteEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteEmployeeAndUserDelegate;
        
        private EndOperationDelegate onEndDeleteEmployeeAndUserDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteEmployeeAndUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteEmployeeCertificateDelegate;
        
        private EndOperationDelegate onEndDeleteEmployeeCertificateDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteEmployeeCertificateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSettingDelegate;
        
        private EndOperationDelegate onEndGetSettingDelegate;
        
        private System.Threading.SendOrPostCallback onGetSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateSettingDelegate;
        
        private EndOperationDelegate onEndUpdateSettingDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateSettingCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEmployeeDelegate;
        
        private EndOperationDelegate onEndGetEmployeeDelegate;
        
        private System.Threading.SendOrPostCallback onGetEmployeeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchEmployeesDelegate;
        
        private EndOperationDelegate onEndSearchEmployeesDelegate;
        
        private System.Threading.SendOrPostCallback onSearchEmployeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEmployeeAdministratorAuthorityDelegate;
        
        private EndOperationDelegate onEndUpdateEmployeeAdministratorAuthorityDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEmployeeAdministratorAuthorityCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEmployeePersonalInfoDelegate;
        
        private EndOperationDelegate onEndUpdateEmployeePersonalInfoDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEmployeePersonalInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateEmployeeCertificateDelegate;
        
        private EndOperationDelegate onEndUpdateEmployeeCertificateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateEmployeeCertificateCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdatePasswordDelegate;
        
        private EndOperationDelegate onEndUpdatePasswordDelegate;
        
        private System.Threading.SendOrPostCallback onUpdatePasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveDraftMessageDelegate;
        
        private EndOperationDelegate onEndMoveDraftMessageDelegate;
        
        private System.Threading.SendOrPostCallback onMoveDraftMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveDraftMessageV2Delegate;
        
        private EndOperationDelegate onEndMoveDraftMessageV2Delegate;
        
        private System.Threading.SendOrPostCallback onMoveDraftMessageV2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEnumValuesDelegate;
        
        private EndOperationDelegate onEndGetEnumValuesDelegate;
        
        private System.Threading.SendOrPostCallback onGetEnumValuesCompletedDelegate;
        
        private BeginOperationDelegate onBeginPrintDocumentDelegate;
        
        private EndOperationDelegate onEndPrintDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onPrintDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDocumentTypeVersionsDelegate;
        
        private EndOperationDelegate onEndGetDocumentTypeVersionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetDocumentTypeVersionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchProviderIdentificationCentersDelegate;
        
        private EndOperationDelegate onEndSearchProviderIdentificationCentersDelegate;
        
        private System.Threading.SendOrPostCallback onSearchProviderIdentificationCentersCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGoodsTransportWaybillConsignorTitleDelegate;
        
        private EndOperationDelegate onEndParseGoodsTransportWaybillConsignorTitleDelegate;
        
        private System.Threading.SendOrPostCallback onParseGoodsTransportWaybillConsignorTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGoodsTransportWaybillConsigneeTitleDelegate;
        
        private EndOperationDelegate onEndParseGoodsTransportWaybillConsigneeTitleDelegate;
        
        private System.Threading.SendOrPostCallback onParseGoodsTransportWaybillConsigneeTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGoodsTransportWaybillCargoReceivedTitleDelegate;
        
        private EndOperationDelegate onEndParseGoodsTransportWaybillCargoReceivedTitleDelegate;
        
        private System.Threading.SendOrPostCallback onParseGoodsTransportWaybillCargoReceivedTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginParseGoodsTransportWaybillCargoDeliveredTitleDelegate;
        
        private EndOperationDelegate onEndParseGoodsTransportWaybillCargoDeliveredTitleDelegate;
        
        private System.Threading.SendOrPostCallback onParseGoodsTransportWaybillCargoDeliveredTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGoodsTransportWaybillConsignorTitleDelegate;
        
        private EndOperationDelegate onEndGenerateGoodsTransportWaybillConsignorTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateGoodsTransportWaybillConsignorTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateGoodsTransportWaybillConsigneeTitleDelegate;
        
        private EndOperationDelegate onEndGenerateGoodsTransportWaybillConsigneeTitleDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateGoodsTransportWaybillConsigneeTitleCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthenticateDelegate;
        
        private EndOperationDelegate onEndAuthenticateDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthenticateWithCertificateDelegate;
        
        private EndOperationDelegate onEndAuthenticateWithCertificateDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateWithCertificateCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthenticateWithCertificateAndPasswordDelegate;
        
        private EndOperationDelegate onEndAuthenticateWithCertificateAndPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateWithCertificateAndPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthenticateWithCertificate2Delegate;
        
        private EndOperationDelegate onEndAuthenticateWithCertificate2Delegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateWithCertificate2CompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthenticateWithIdentityTokenDelegate;
        
        private EndOperationDelegate onEndAuthenticateWithIdentityTokenDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateWithIdentityTokenCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthenticateWithAccessTokenDelegate;
        
        private EndOperationDelegate onEndAuthenticateWithAccessTokenDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateWithAccessTokenCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMessagesDelegate;
        
        private EndOperationDelegate onEndGetMessagesDelegate;
        
        private System.Threading.SendOrPostCallback onGetMessagesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMessageDelegate;
        
        private EndOperationDelegate onEndGetMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMessageWithLoadOptionsDelegate;
        
        private EndOperationDelegate onEndGetMessageWithLoadOptionsDelegate;
        
        private System.Threading.SendOrPostCallback onGetMessageWithLoadOptionsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendMessageDelegate;
        
        private EndOperationDelegate onEndSendMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateDraftMessageDelegate;
        
        private EndOperationDelegate onEndCreateDraftMessageDelegate;
        
        private System.Threading.SendOrPostCallback onCreateDraftMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDraftMessageDelegate;
        
        private EndOperationDelegate onEndUpdateDraftMessageDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateDraftMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDraftMessageDelegate;
        
        private EndOperationDelegate onEndDeleteDraftMessageDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDraftMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDraftMessageDelegate;
        
        private EndOperationDelegate onEndGetDraftMessageDelegate;
        
        private System.Threading.SendOrPostCallback onGetDraftMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDraftMessageListDelegate;
        
        private EndOperationDelegate onEndGetDraftMessageListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDraftMessageListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDraftMessageCountDelegate;
        
        private EndOperationDelegate onEndGetDraftMessageCountDelegate;
        
        private System.Threading.SendOrPostCallback onGetDraftMessageCountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDraftDocumentContentDelegate;
        
        private EndOperationDelegate onEndGetDraftDocumentContentDelegate;
        
        private System.Threading.SendOrPostCallback onGetDraftDocumentContentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDraftDocumentCardDelegate;
        
        private EndOperationDelegate onEndGetDraftDocumentCardDelegate;
        
        private System.Threading.SendOrPostCallback onGetDraftDocumentCardCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateInvoiceReceiptDelegate;
        
        private EndOperationDelegate onEndGenerateInvoiceReceiptDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateInvoiceReceiptCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateInvoiceReceiptV2Delegate;
        
        private EndOperationDelegate onEndGenerateInvoiceReceiptV2Delegate;
        
        private System.Threading.SendOrPostCallback onGenerateInvoiceReceiptV2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateInvoiceAmendmentRequestDelegate;
        
        private EndOperationDelegate onEndGenerateInvoiceAmendmentRequestDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateInvoiceAmendmentRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateInvoiceAmendmentRequestV2Delegate;
        
        private EndOperationDelegate onEndGenerateInvoiceAmendmentRequestV2Delegate;
        
        private System.Threading.SendOrPostCallback onGenerateInvoiceAmendmentRequestV2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateDeliveryConfirmationDelegate;
        
        private EndOperationDelegate onEndGenerateDeliveryConfirmationDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateDeliveryConfirmationCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateDeliveryConfirmationV2Delegate;
        
        private EndOperationDelegate onEndGenerateDeliveryConfirmationV2Delegate;
        
        private System.Threading.SendOrPostCallback onGenerateDeliveryConfirmationV2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateAmendmentRequestDelegate;
        
        private EndOperationDelegate onEndGenerateAmendmentRequestDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateAmendmentRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateAmendmentRequestV2Delegate;
        
        private EndOperationDelegate onEndGenerateAmendmentRequestV2Delegate;
        
        private System.Threading.SendOrPostCallback onGenerateAmendmentRequestV2CompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateTitleBuyerDelegate;
        
        private EndOperationDelegate onEndGenerateTitleBuyerDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateTitleBuyerCompletedDelegate;
        
        private BeginOperationDelegate onBeginGenerateRevocationOfferDelegate;
        
        private EndOperationDelegate onEndGenerateRevocationOfferDelegate;
        
        private System.Threading.SendOrPostCallback onGenerateRevocationOfferCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDocumentContentDelegate;
        
        private EndOperationDelegate onEndGetDocumentContentDelegate;
        
        private System.Threading.SendOrPostCallback onGetDocumentContentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFullDocumentInfoDelegate;
        
        private EndOperationDelegate onEndGetFullDocumentInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetFullDocumentInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDocumentListDelegate;
        
        private EndOperationDelegate onEndGetDocumentListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDocumentListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInnKppNameByBoxIdDelegate;
        
        private EndOperationDelegate onEndGetInnKppNameByBoxIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetInnKppNameByBoxIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchContactsDelegate;
        
        private EndOperationDelegate onEndSearchContactsDelegate;
        
        private System.Threading.SendOrPostCallback onSearchContactsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetContactDelegate;
        
        private EndOperationDelegate onEndGetContactDelegate;
        
        private System.Threading.SendOrPostCallback onGetContactCompletedDelegate;
        
        private BeginOperationDelegate onBeginAcceptAuthorizationDelegate;
        
        private EndOperationDelegate onEndAcceptAuthorizationDelegate;
        
        private System.Threading.SendOrPostCallback onAcceptAuthorizationCompletedDelegate;
        
        private BeginOperationDelegate onBeginRejectAuthorizationDelegate;
        
        private EndOperationDelegate onEndRejectAuthorizationDelegate;
        
        private System.Threading.SendOrPostCallback onRejectAuthorizationCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendAuthRequestDelegate;
        
        private EndOperationDelegate onEndSendAuthRequestDelegate;
        
        private System.Threading.SendOrPostCallback onSendAuthRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginCancelAuthRequestDelegate;
        
        private EndOperationDelegate onEndCancelAuthRequestDelegate;
        
        private System.Threading.SendOrPostCallback onCancelAuthRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginAcceptAuthRequestDelegate;
        
        private EndOperationDelegate onEndAcceptAuthRequestDelegate;
        
        private System.Threading.SendOrPostCallback onAcceptAuthRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginRejectAuthRequestDelegate;
        
        private EndOperationDelegate onEndRejectAuthRequestDelegate;
        
        private System.Threading.SendOrPostCallback onRejectAuthRequestCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteContactDelegate;
        
        private EndOperationDelegate onEndDeleteContactDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteContactCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrganizationByInnKppDelegate;
        
        private EndOperationDelegate onEndGetOrganizationByInnKppDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrganizationByInnKppCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrganizationByDelegate;
        
        private EndOperationDelegate onEndGetOrganizationByDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrganizationByCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetErrorTextDelegate;
        
        private EndOperationDelegate onEndGetErrorTextDelegate;
        
        private System.Threading.SendOrPostCallback onGetErrorTextCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBoxesDelegate;
        
        private EndOperationDelegate onEndGetBoxesDelegate;
        
        private System.Threading.SendOrPostCallback onGetBoxesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSubjectInfoDelegate;
        
        private EndOperationDelegate onEndGetSubjectInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetSubjectInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSpecialOperatorInfoDelegate;
        
        private EndOperationDelegate onEndGetSpecialOperatorInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetSpecialOperatorInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOrganizationStructureElementDelegate;
        
        private EndOperationDelegate onEndAddOrganizationStructureElementDelegate;
        
        private System.Threading.SendOrPostCallback onAddOrganizationStructureElementCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteOrganizationStructureElementDelegate;
        
        private EndOperationDelegate onEndDeleteOrganizationStructureElementDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteOrganizationStructureElementCompletedDelegate;
        
        private BeginOperationDelegate onBeginModifyOrganizationStructureElementDelegate;
        
        private EndOperationDelegate onEndModifyOrganizationStructureElementDelegate;
        
        private System.Threading.SendOrPostCallback onModifyOrganizationStructureElementCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrganizationStructureDelegate;
        
        private EndOperationDelegate onEndGetOrganizationStructureDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrganizationStructureCompletedDelegate;
        
        private BeginOperationDelegate onBeginOrganizationStructureHasSingleElementDelegate;
        
        private EndOperationDelegate onEndOrganizationStructureHasSingleElementDelegate;
        
        private System.Threading.SendOrPostCallback onOrganizationStructureHasSingleElementCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrganizationStructureElementChildrenDelegate;
        
        private EndOperationDelegate onEndGetOrganizationStructureElementChildrenDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrganizationStructureElementChildrenCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVersionDelegate;
        
        private EndOperationDelegate onEndGetVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginCanSendInvoiceDelegate;
        
        private EndOperationDelegate onEndCanSendInvoiceDelegate;
        
        private System.Threading.SendOrPostCallback onCanSendInvoiceCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckQualifiedCertificateDelegate;
        
        private EndOperationDelegate onEndCheckQualifiedCertificateDelegate;
        
        private System.Threading.SendOrPostCallback onCheckQualifiedCertificateCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBoxCertificatesDelegate;
        
        private EndOperationDelegate onEndGetBoxCertificatesDelegate;
        
        private System.Threading.SendOrPostCallback onGetBoxCertificatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRequiredNoticesDelegate;
        
        private EndOperationDelegate onEndGetRequiredNoticesDelegate;
        
        private System.Threading.SendOrPostCallback onGetRequiredNoticesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEnhancedSignDelegate;
        
        private EndOperationDelegate onEndGetEnhancedSignDelegate;
        
        private System.Threading.SendOrPostCallback onGetEnhancedSignCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetEnhancedSignByIdDelegate;
        
        private EndOperationDelegate onEndGetEnhancedSignByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetEnhancedSignByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadDocumentFlowArchiveDelegate;
        
        private EndOperationDelegate onEndDownloadDocumentFlowArchiveDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadDocumentFlowArchiveCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOrganizationListByInnKppDelegate;
        
        private EndOperationDelegate onEndGetOrganizationListByInnKppDelegate;
        
        private System.Threading.SendOrPostCallback onGetOrganizationListByInnKppCompletedDelegate;
        
        private BeginOperationDelegate onBeginCheckCertificatesDelegate;
        
        private EndOperationDelegate onEndCheckCertificatesDelegate;
        
        private System.Threading.SendOrPostCallback onCheckCertificatesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserInfoDelegate;
        
        private EndOperationDelegate onEndGetUserInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterDelegate;
        
        private EndOperationDelegate onEndRegisterDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginAcceptRegulationDelegate;
        
        private EndOperationDelegate onEndAcceptRegulationDelegate;
        
        private System.Threading.SendOrPostCallback onAcceptRegulationCompletedDelegate;
        
        private BeginOperationDelegate onBeginHasQualifiedCertificateDelegate;
        
        private EndOperationDelegate onEndHasQualifiedCertificateDelegate;
        
        private System.Threading.SendOrPostCallback onHasQualifiedCertificateCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendUnsignedMessageDelegate;
        
        private EndOperationDelegate onEndSendUnsignedMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendUnsignedMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendForwardMessageDelegate;
        
        private EndOperationDelegate onEndSendForwardMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendForwardMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginSignDocumentDelegate;
        
        private EndOperationDelegate onEndSignDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onSignDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginSignDocumentWithSimpleSignatureDelegate;
        
        private EndOperationDelegate onEndSignDocumentWithSimpleSignatureDelegate;
        
        private System.Threading.SendOrPostCallback onSignDocumentWithSimpleSignatureCompletedDelegate;
        
        private BeginOperationDelegate onBeginRejectSignDelegate;
        
        private EndOperationDelegate onEndRejectSignDelegate;
        
        private System.Threading.SendOrPostCallback onRejectSignCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDocumentEntriesDelegate;
        
        private EndOperationDelegate onEndGetDocumentEntriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetDocumentEntriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetFlowDocumentInfoDelegate;
        
        private EndOperationDelegate onEndGetFlowDocumentInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetFlowDocumentInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendInternalMessageDelegate;
        
        private EndOperationDelegate onEndSendInternalMessageDelegate;
        
        private System.Threading.SendOrPostCallback onSendInternalMessageCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetInternalDocumentsDelegate;
        
        private EndOperationDelegate onEndGetInternalDocumentsDelegate;
        
        private System.Threading.SendOrPostCallback onGetInternalDocumentsCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveDocumentToDepartmentDelegate;
        
        private EndOperationDelegate onEndMoveDocumentToDepartmentDelegate;
        
        private System.Threading.SendOrPostCallback onMoveDocumentToDepartmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveDocumentsToDepartmentDelegate;
        
        private EndOperationDelegate onEndMoveDocumentsToDepartmentDelegate;
        
        private System.Threading.SendOrPostCallback onMoveDocumentsToDepartmentCompletedDelegate;
        
        private BeginOperationDelegate onBeginMoveDocumentDelegate;
        
        private EndOperationDelegate onEndMoveDocumentDelegate;
        
        private System.Threading.SendOrPostCallback onMoveDocumentCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDepartmentEmployeesDelegate;
        
        private EndOperationDelegate onEndGetDepartmentEmployeesDelegate;
        
        private System.Threading.SendOrPostCallback onGetDepartmentEmployeesCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateDocumentTagDelegate;
        
        private EndOperationDelegate onEndCreateDocumentTagDelegate;
        
        private System.Threading.SendOrPostCallback onCreateDocumentTagCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDocumentTagDelegate;
        
        private EndOperationDelegate onEndDeleteDocumentTagDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDocumentTagCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDocumentTagDelegate;
        
        private EndOperationDelegate onEndGetDocumentTagDelegate;
        
        private System.Threading.SendOrPostCallback onGetDocumentTagCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDocumentTagListDelegate;
        
        private EndOperationDelegate onEndGetDocumentTagListDelegate;
        
        private System.Threading.SendOrPostCallback onGetDocumentTagListCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddOrganizationPromoCodeDelegate;
        
        private EndOperationDelegate onEndAddOrganizationPromoCodeDelegate;
        
        private System.Threading.SendOrPostCallback onAddOrganizationPromoCodeCompletedDelegate;
        
        public ExchangeServiceClient() {
        }
        
        public ExchangeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ExchangeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExchangeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ExchangeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GenerateGoodsTransportWaybillCargoReceivedTitleCompletedEventArgs> GenerateGoodsTransportWaybillCargoReceivedTitleCompleted;
        
        public event System.EventHandler<GenerateGoodsTransportWaybillCargoDeliveredTitleCompletedEventArgs> GenerateGoodsTransportWaybillCargoDeliveredTitleCompleted;
        
        public event System.EventHandler<GetAvailableDepartmentsCompletedEventArgs> GetAvailableDepartmentsCompleted;
        
        public event System.EventHandler<GetDocumentGoodsMarkingStateCompletedEventArgs> GetDocumentGoodsMarkingStateCompleted;
        
        public event System.EventHandler<GetOrganizationPromoCodeListCompletedEventArgs> GetOrganizationPromoCodeListCompleted;
        
        public event System.EventHandler<GetPromoCodeByNameCompletedEventArgs> GetPromoCodeByNameCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteOrganizationPromoCodeCompleted;
        
        public event System.EventHandler<CheckCertificateListCompletedEventArgs> CheckCertificateListCompleted;
        
        public event System.EventHandler<GenerateStatementOfInvoiceReglamentCompletedEventArgs> GenerateStatementOfInvoiceReglamentCompleted;
        
        public event System.EventHandler<SendStatementOfInvoiceReglamentCompletedEventArgs> SendStatementOfInvoiceReglamentCompleted;
        
        public event System.EventHandler<CheckNeedToStatementOfInvoiceReglamentCompletedEventArgs> CheckNeedToStatementOfInvoiceReglamentCompleted;
        
        public event System.EventHandler<ParseGeneralTransferSellerCompletedEventArgs> ParseGeneralTransferSellerCompleted;
        
        public event System.EventHandler<ParseGeneralTransferBuyerCompletedEventArgs> ParseGeneralTransferBuyerCompleted;
        
        public event System.EventHandler<ParseWorksTransferSellerCompletedEventArgs> ParseWorksTransferSellerCompleted;
        
        public event System.EventHandler<ParseWorksTransferBuyerCompletedEventArgs> ParseWorksTransferBuyerCompleted;
        
        public event System.EventHandler<ParseGoodsTransferSellerCompletedEventArgs> ParseGoodsTransferSellerCompleted;
        
        public event System.EventHandler<ParseGoodsTransferBuyerCompletedEventArgs> ParseGoodsTransferBuyerCompleted;
        
        public event System.EventHandler<ParseGeneralTransferCorrectionSellerCompletedEventArgs> ParseGeneralTransferCorrectionSellerCompleted;
        
        public event System.EventHandler<ParseGeneralTransferCorrectionBuyerCompletedEventArgs> ParseGeneralTransferCorrectionBuyerCompleted;
        
        public event System.EventHandler<ParseGeneralTransferCorrectionBuyerV3CompletedEventArgs> ParseGeneralTransferCorrectionBuyerV3Completed;
        
        public event System.EventHandler<ParseGeneralTransferSellerV2CompletedEventArgs> ParseGeneralTransferSellerV2Completed;
        
        public event System.EventHandler<ParseGeneralTransferBuyerV2CompletedEventArgs> ParseGeneralTransferBuyerV2Completed;
        
        public event System.EventHandler<ParseTransportWaybillConsignorTitleCompletedEventArgs> ParseTransportWaybillConsignorTitleCompleted;
        
        public event System.EventHandler<ParseTransportWaybillCargoReceivedTitleCompletedEventArgs> ParseTransportWaybillCargoReceivedTitleCompleted;
        
        public event System.EventHandler<ParseTransportWaybillCargoDeliveredTitleCompletedEventArgs> ParseTransportWaybillCargoDeliveredTitleCompleted;
        
        public event System.EventHandler<ParseTransportWaybillConsigneeTitleCompletedEventArgs> ParseTransportWaybillConsigneeTitleCompleted;
        
        public event System.EventHandler<ParseTransportWaybillCarrierTitleCompletedEventArgs> ParseTransportWaybillCarrierTitleCompleted;
        
        public event System.EventHandler<ParseTransportWaybillDeliveryPlaceChangeTitleCompletedEventArgs> ParseTransportWaybillDeliveryPlaceChangeTitleCompleted;
        
        public event System.EventHandler<ParseTransportWaybillDriverOrVehicleChangeTitleCompletedEventArgs> ParseTransportWaybillDriverOrVehicleChangeTitleCompleted;
        
        public event System.EventHandler<ParseTransportWaybillExpeditorTitleCompletedEventArgs> ParseTransportWaybillExpeditorTitleCompleted;
        
        public event System.EventHandler<ParseGeneralTransferCorrectionSellerTitleV3CompletedEventArgs> ParseGeneralTransferCorrectionSellerTitleV3Completed;
        
        public event System.EventHandler<GenerateWorksTransferSellerCompletedEventArgs> GenerateWorksTransferSellerCompleted;
        
        public event System.EventHandler<GenerateGoodsTransferSellerCompletedEventArgs> GenerateGoodsTransferSellerCompleted;
        
        public event System.EventHandler<GenerateGeneralTransferSellerCompletedEventArgs> GenerateGeneralTransferSellerCompleted;
        
        public event System.EventHandler<GenerateGeneralTransferSellerV2CompletedEventArgs> GenerateGeneralTransferSellerV2Completed;
        
        public event System.EventHandler<GenerateGeneralTransferCorrectionSellerCompletedEventArgs> GenerateGeneralTransferCorrectionSellerCompleted;
        
        public event System.EventHandler<GenerateGeneralTransferCorrectionSellerTitleV3CompletedEventArgs> GenerateGeneralTransferCorrectionSellerTitleV3Completed;
        
        public event System.EventHandler<GenerateWorksTransferBuyerCompletedEventArgs> GenerateWorksTransferBuyerCompleted;
        
        public event System.EventHandler<GenerateGoodsTransferBuyerCompletedEventArgs> GenerateGoodsTransferBuyerCompleted;
        
        public event System.EventHandler<GenerateGeneralTransferBuyerCompletedEventArgs> GenerateGeneralTransferBuyerCompleted;
        
        public event System.EventHandler<GenerateGeneralTransferBuyerV2CompletedEventArgs> GenerateGeneralTransferBuyerV2Completed;
        
        public event System.EventHandler<GenerateGeneralTransferCorrectionBuyerCompletedEventArgs> GenerateGeneralTransferCorrectionBuyerCompleted;
        
        public event System.EventHandler<GenerateGeneralTransferCorrectionBuyerV3CompletedEventArgs> GenerateGeneralTransferCorrectionBuyerV3Completed;
        
        public event System.EventHandler<GenerateTransportWaybillConsignorTitleCompletedEventArgs> GenerateTransportWaybillConsignorTitleCompleted;
        
        public event System.EventHandler<GenerateTransportWaybillCargoReceivedTitleCompletedEventArgs> GenerateTransportWaybillCargoReceivedTitleCompleted;
        
        public event System.EventHandler<GenerateTransportWaybillCargoDeliveredTitleCompletedEventArgs> GenerateTransportWaybillCargoDeliveredTitleCompleted;
        
        public event System.EventHandler<GenerateTransportWaybillConsigneeTitleCompletedEventArgs> GenerateTransportWaybillConsigneeTitleCompleted;
        
        public event System.EventHandler<GenerateTransportWaybillCarrierTitleCompletedEventArgs> GenerateTransportWaybillCarrierTitleCompleted;
        
        public event System.EventHandler<GenerateTransportWaybillDeliveryPlaceChangeTitleCompletedEventArgs> GenerateTransportWaybillDeliveryPlaceChangeTitleCompleted;
        
        public event System.EventHandler<GenerateTransportWaybillDriverOrVehicleChangeTitleCompletedEventArgs> GenerateTransportWaybillDriverOrVehicleChangeTitleCompleted;
        
        public event System.EventHandler<GenerateTransportWaybillExpeditorTitleCompletedEventArgs> GenerateTransportWaybillExpeditorTitleCompleted;
        
        public event System.EventHandler<DownloadPdfDocumentCompletedEventArgs> DownloadPdfDocumentCompleted;
        
        public event System.EventHandler<RegisterSubscriberCompletedEventArgs> RegisterSubscriberCompleted;
        
        public event System.EventHandler<CreateNonActiveSubscriberCompletedEventArgs> CreateNonActiveSubscriberCompleted;
        
        public event System.EventHandler<GetCertificateSubjectInfoCompletedEventArgs> GetCertificateSubjectInfoCompleted;
        
        public event System.EventHandler<GetDocumentExecutedFunctionCompletedEventArgs> GetDocumentExecutedFunctionCompleted;
        
        public event System.EventHandler<CreateCertificateIssueRequestCompletedEventArgs> CreateCertificateIssueRequestCompleted;
        
        public event System.EventHandler<CreateCertificateIssueRequestFromFileCompletedEventArgs> CreateCertificateIssueRequestFromFileCompleted;
        
        public event System.EventHandler<GetCertificateIssueShortInfoCompletedEventArgs> GetCertificateIssueShortInfoCompleted;
        
        public event System.EventHandler<GetCertificateIssueInfoCompletedEventArgs> GetCertificateIssueInfoCompleted;
        
        public event System.EventHandler<ReissueCertificateQrCodeCompletedEventArgs> ReissueCertificateQrCodeCompleted;
        
        public event System.EventHandler<CheckSimpleSignatureAvailabilityCompletedEventArgs> CheckSimpleSignatureAvailabilityCompleted;
        
        public event System.EventHandler<AcceptSimpleSignatureRegulationCompletedEventArgs> AcceptSimpleSignatureRegulationCompleted;
        
        public event System.EventHandler<PreviewSimpleSignatureRequisitesCompletedEventArgs> PreviewSimpleSignatureRequisitesCompleted;
        
        public event System.EventHandler<CreateSimpleSignatureCompletedEventArgs> CreateSimpleSignatureCompleted;
        
        public event System.EventHandler<CreateUserAndEmployeeCompletedEventArgs> CreateUserAndEmployeeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteEmployeeCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteEmployeeAndUserCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteEmployeeCertificateCompleted;
        
        public event System.EventHandler<GetSettingCompletedEventArgs> GetSettingCompleted;
        
        public event System.EventHandler<UpdateSettingCompletedEventArgs> UpdateSettingCompleted;
        
        public event System.EventHandler<GetEmployeeCompletedEventArgs> GetEmployeeCompleted;
        
        public event System.EventHandler<SearchEmployeesCompletedEventArgs> SearchEmployeesCompleted;
        
        public event System.EventHandler<UpdateEmployeeAdministratorAuthorityCompletedEventArgs> UpdateEmployeeAdministratorAuthorityCompleted;
        
        public event System.EventHandler<UpdateEmployeePersonalInfoCompletedEventArgs> UpdateEmployeePersonalInfoCompleted;
        
        public event System.EventHandler<UpdateEmployeeCertificateCompletedEventArgs> UpdateEmployeeCertificateCompleted;
        
        public event System.EventHandler<UpdatePasswordCompletedEventArgs> UpdatePasswordCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MoveDraftMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> MoveDraftMessageV2Completed;
        
        public event System.EventHandler<GetEnumValuesCompletedEventArgs> GetEnumValuesCompleted;
        
        public event System.EventHandler<PrintDocumentCompletedEventArgs> PrintDocumentCompleted;
        
        public event System.EventHandler<GetDocumentTypeVersionsCompletedEventArgs> GetDocumentTypeVersionsCompleted;
        
        public event System.EventHandler<SearchProviderIdentificationCentersCompletedEventArgs> SearchProviderIdentificationCentersCompleted;
        
        public event System.EventHandler<ParseGoodsTransportWaybillConsignorTitleCompletedEventArgs> ParseGoodsTransportWaybillConsignorTitleCompleted;
        
        public event System.EventHandler<ParseGoodsTransportWaybillConsigneeTitleCompletedEventArgs> ParseGoodsTransportWaybillConsigneeTitleCompleted;
        
        public event System.EventHandler<ParseGoodsTransportWaybillCargoReceivedTitleCompletedEventArgs> ParseGoodsTransportWaybillCargoReceivedTitleCompleted;
        
        public event System.EventHandler<ParseGoodsTransportWaybillCargoDeliveredTitleCompletedEventArgs> ParseGoodsTransportWaybillCargoDeliveredTitleCompleted;
        
        public event System.EventHandler<GenerateGoodsTransportWaybillConsignorTitleCompletedEventArgs> GenerateGoodsTransportWaybillConsignorTitleCompleted;
        
        public event System.EventHandler<GenerateGoodsTransportWaybillConsigneeTitleCompletedEventArgs> GenerateGoodsTransportWaybillConsigneeTitleCompleted;
        
        public event System.EventHandler<AuthenticateCompletedEventArgs> AuthenticateCompleted;
        
        public event System.EventHandler<AuthenticateWithCertificateCompletedEventArgs> AuthenticateWithCertificateCompleted;
        
        public event System.EventHandler<AuthenticateWithCertificateAndPasswordCompletedEventArgs> AuthenticateWithCertificateAndPasswordCompleted;
        
        public event System.EventHandler<AuthenticateWithCertificate2CompletedEventArgs> AuthenticateWithCertificate2Completed;
        
        public event System.EventHandler<AuthenticateWithIdentityTokenCompletedEventArgs> AuthenticateWithIdentityTokenCompleted;
        
        public event System.EventHandler<AuthenticateWithAccessTokenCompletedEventArgs> AuthenticateWithAccessTokenCompleted;
        
        public event System.EventHandler<GetMessagesCompletedEventArgs> GetMessagesCompleted;
        
        public event System.EventHandler<GetMessageCompletedEventArgs> GetMessageCompleted;
        
        public event System.EventHandler<GetMessageWithLoadOptionsCompletedEventArgs> GetMessageWithLoadOptionsCompleted;
        
        public event System.EventHandler<SendMessageCompletedEventArgs> SendMessageCompleted;
        
        public event System.EventHandler<CreateDraftMessageCompletedEventArgs> CreateDraftMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> UpdateDraftMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDraftMessageCompleted;
        
        public event System.EventHandler<GetDraftMessageCompletedEventArgs> GetDraftMessageCompleted;
        
        public event System.EventHandler<GetDraftMessageListCompletedEventArgs> GetDraftMessageListCompleted;
        
        public event System.EventHandler<GetDraftMessageCountCompletedEventArgs> GetDraftMessageCountCompleted;
        
        public event System.EventHandler<GetDraftDocumentContentCompletedEventArgs> GetDraftDocumentContentCompleted;
        
        public event System.EventHandler<GetDraftDocumentCardCompletedEventArgs> GetDraftDocumentCardCompleted;
        
        public event System.EventHandler<GenerateInvoiceReceiptCompletedEventArgs> GenerateInvoiceReceiptCompleted;
        
        public event System.EventHandler<GenerateInvoiceReceiptV2CompletedEventArgs> GenerateInvoiceReceiptV2Completed;
        
        public event System.EventHandler<GenerateInvoiceAmendmentRequestCompletedEventArgs> GenerateInvoiceAmendmentRequestCompleted;
        
        public event System.EventHandler<GenerateInvoiceAmendmentRequestV2CompletedEventArgs> GenerateInvoiceAmendmentRequestV2Completed;
        
        public event System.EventHandler<GenerateDeliveryConfirmationCompletedEventArgs> GenerateDeliveryConfirmationCompleted;
        
        public event System.EventHandler<GenerateDeliveryConfirmationV2CompletedEventArgs> GenerateDeliveryConfirmationV2Completed;
        
        public event System.EventHandler<GenerateAmendmentRequestCompletedEventArgs> GenerateAmendmentRequestCompleted;
        
        public event System.EventHandler<GenerateAmendmentRequestV2CompletedEventArgs> GenerateAmendmentRequestV2Completed;
        
        public event System.EventHandler<GenerateTitleBuyerCompletedEventArgs> GenerateTitleBuyerCompleted;
        
        public event System.EventHandler<GenerateRevocationOfferCompletedEventArgs> GenerateRevocationOfferCompleted;
        
        public event System.EventHandler<GetDocumentContentCompletedEventArgs> GetDocumentContentCompleted;
        
        public event System.EventHandler<GetFullDocumentInfoCompletedEventArgs> GetFullDocumentInfoCompleted;
        
        public event System.EventHandler<GetDocumentListCompletedEventArgs> GetDocumentListCompleted;
        
        public event System.EventHandler<GetInnKppNameByBoxIdCompletedEventArgs> GetInnKppNameByBoxIdCompleted;
        
        public event System.EventHandler<SearchContactsCompletedEventArgs> SearchContactsCompleted;
        
        public event System.EventHandler<GetContactCompletedEventArgs> GetContactCompleted;
        
        public event System.EventHandler<AcceptAuthorizationCompletedEventArgs> AcceptAuthorizationCompleted;
        
        public event System.EventHandler<RejectAuthorizationCompletedEventArgs> RejectAuthorizationCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendAuthRequestCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CancelAuthRequestCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AcceptAuthRequestCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RejectAuthRequestCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteContactCompleted;
        
        public event System.EventHandler<GetOrganizationByInnKppCompletedEventArgs> GetOrganizationByInnKppCompleted;
        
        public event System.EventHandler<GetOrganizationByCompletedEventArgs> GetOrganizationByCompleted;
        
        public event System.EventHandler<GetErrorTextCompletedEventArgs> GetErrorTextCompleted;
        
        public event System.EventHandler<GetBoxesCompletedEventArgs> GetBoxesCompleted;
        
        public event System.EventHandler<GetSubjectInfoCompletedEventArgs> GetSubjectInfoCompleted;
        
        public event System.EventHandler<GetSpecialOperatorInfoCompletedEventArgs> GetSpecialOperatorInfoCompleted;
        
        public event System.EventHandler<AddOrganizationStructureElementCompletedEventArgs> AddOrganizationStructureElementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteOrganizationStructureElementCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ModifyOrganizationStructureElementCompleted;
        
        public event System.EventHandler<GetOrganizationStructureCompletedEventArgs> GetOrganizationStructureCompleted;
        
        public event System.EventHandler<OrganizationStructureHasSingleElementCompletedEventArgs> OrganizationStructureHasSingleElementCompleted;
        
        public event System.EventHandler<GetOrganizationStructureElementChildrenCompletedEventArgs> GetOrganizationStructureElementChildrenCompleted;
        
        public event System.EventHandler<GetVersionCompletedEventArgs> GetVersionCompleted;
        
        public event System.EventHandler<CanSendInvoiceCompletedEventArgs> CanSendInvoiceCompleted;
        
        public event System.EventHandler<CheckQualifiedCertificateCompletedEventArgs> CheckQualifiedCertificateCompleted;
        
        public event System.EventHandler<GetBoxCertificatesCompletedEventArgs> GetBoxCertificatesCompleted;
        
        public event System.EventHandler<GetRequiredNoticesCompletedEventArgs> GetRequiredNoticesCompleted;
        
        public event System.EventHandler<GetEnhancedSignCompletedEventArgs> GetEnhancedSignCompleted;
        
        public event System.EventHandler<GetEnhancedSignByIdCompletedEventArgs> GetEnhancedSignByIdCompleted;
        
        public event System.EventHandler<DownloadDocumentFlowArchiveCompletedEventArgs> DownloadDocumentFlowArchiveCompleted;
        
        public event System.EventHandler<GetOrganizationListByInnKppCompletedEventArgs> GetOrganizationListByInnKppCompleted;
        
        public event System.EventHandler<CheckCertificatesCompletedEventArgs> CheckCertificatesCompleted;
        
        public event System.EventHandler<GetUserInfoCompletedEventArgs> GetUserInfoCompleted;
        
        public event System.EventHandler<RegisterCompletedEventArgs> RegisterCompleted;
        
        public event System.EventHandler<AcceptRegulationCompletedEventArgs> AcceptRegulationCompleted;
        
        public event System.EventHandler<HasQualifiedCertificateCompletedEventArgs> HasQualifiedCertificateCompleted;
        
        public event System.EventHandler<SendUnsignedMessageCompletedEventArgs> SendUnsignedMessageCompleted;
        
        public event System.EventHandler<SendForwardMessageCompletedEventArgs> SendForwardMessageCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SignDocumentCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SignDocumentWithSimpleSignatureCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RejectSignCompleted;
        
        public event System.EventHandler<GetDocumentEntriesCompletedEventArgs> GetDocumentEntriesCompleted;
        
        public event System.EventHandler<GetFlowDocumentInfoCompletedEventArgs> GetFlowDocumentInfoCompleted;
        
        public event System.EventHandler<SendInternalMessageCompletedEventArgs> SendInternalMessageCompleted;
        
        public event System.EventHandler<GetInternalDocumentsCompletedEventArgs> GetInternalDocumentsCompleted;
        
        public event System.EventHandler<MoveDocumentToDepartmentCompletedEventArgs> MoveDocumentToDepartmentCompleted;
        
        public event System.EventHandler<MoveDocumentsToDepartmentCompletedEventArgs> MoveDocumentsToDepartmentCompleted;
        
        public event System.EventHandler<MoveDocumentCompletedEventArgs> MoveDocumentCompleted;
        
        public event System.EventHandler<GetDepartmentEmployeesCompletedEventArgs> GetDepartmentEmployeesCompleted;
        
        public event System.EventHandler<CreateDocumentTagCompletedEventArgs> CreateDocumentTagCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DeleteDocumentTagCompleted;
        
        public event System.EventHandler<GetDocumentTagCompletedEventArgs> GetDocumentTagCompleted;
        
        public event System.EventHandler<GetDocumentTagListCompletedEventArgs> GetDocumentTagListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddOrganizationPromoCodeCompleted;
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateGoodsTransportWaybillCargoReceivedTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleGeneratingRequest request) {
            return base.Channel.GenerateGoodsTransportWaybillCargoReceivedTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGoodsTransportWaybillCargoReceivedTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGoodsTransportWaybillCargoReceivedTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateGoodsTransportWaybillCargoReceivedTitle(System.IAsyncResult result) {
            return base.Channel.EndGenerateGoodsTransportWaybillCargoReceivedTitle(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGoodsTransportWaybillCargoReceivedTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleGeneratingRequest request = ((Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleGeneratingRequest)(inValues[1]));
            return this.BeginGenerateGoodsTransportWaybillCargoReceivedTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateGoodsTransportWaybillCargoReceivedTitle(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateGoodsTransportWaybillCargoReceivedTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGoodsTransportWaybillCargoReceivedTitleCompleted(object state) {
            if ((this.GenerateGoodsTransportWaybillCargoReceivedTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGoodsTransportWaybillCargoReceivedTitleCompleted(this, new GenerateGoodsTransportWaybillCargoReceivedTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGoodsTransportWaybillCargoReceivedTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleGeneratingRequest request) {
            this.GenerateGoodsTransportWaybillCargoReceivedTitleAsync(credentials, request, null);
        }
        
        public void GenerateGoodsTransportWaybillCargoReceivedTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleGeneratingRequest request, object userState) {
            if ((this.onBeginGenerateGoodsTransportWaybillCargoReceivedTitleDelegate == null)) {
                this.onBeginGenerateGoodsTransportWaybillCargoReceivedTitleDelegate = new BeginOperationDelegate(this.OnBeginGenerateGoodsTransportWaybillCargoReceivedTitle);
            }
            if ((this.onEndGenerateGoodsTransportWaybillCargoReceivedTitleDelegate == null)) {
                this.onEndGenerateGoodsTransportWaybillCargoReceivedTitleDelegate = new EndOperationDelegate(this.OnEndGenerateGoodsTransportWaybillCargoReceivedTitle);
            }
            if ((this.onGenerateGoodsTransportWaybillCargoReceivedTitleCompletedDelegate == null)) {
                this.onGenerateGoodsTransportWaybillCargoReceivedTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGoodsTransportWaybillCargoReceivedTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateGoodsTransportWaybillCargoReceivedTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateGoodsTransportWaybillCargoReceivedTitleDelegate, this.onGenerateGoodsTransportWaybillCargoReceivedTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateGoodsTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleGeneratingRequest request) {
            return base.Channel.GenerateGoodsTransportWaybillCargoDeliveredTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGoodsTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGoodsTransportWaybillCargoDeliveredTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateGoodsTransportWaybillCargoDeliveredTitle(System.IAsyncResult result) {
            return base.Channel.EndGenerateGoodsTransportWaybillCargoDeliveredTitle(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGoodsTransportWaybillCargoDeliveredTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleGeneratingRequest request = ((Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleGeneratingRequest)(inValues[1]));
            return this.BeginGenerateGoodsTransportWaybillCargoDeliveredTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateGoodsTransportWaybillCargoDeliveredTitle(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateGoodsTransportWaybillCargoDeliveredTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGoodsTransportWaybillCargoDeliveredTitleCompleted(object state) {
            if ((this.GenerateGoodsTransportWaybillCargoDeliveredTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGoodsTransportWaybillCargoDeliveredTitleCompleted(this, new GenerateGoodsTransportWaybillCargoDeliveredTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGoodsTransportWaybillCargoDeliveredTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleGeneratingRequest request) {
            this.GenerateGoodsTransportWaybillCargoDeliveredTitleAsync(credentials, request, null);
        }
        
        public void GenerateGoodsTransportWaybillCargoDeliveredTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleGeneratingRequest request, object userState) {
            if ((this.onBeginGenerateGoodsTransportWaybillCargoDeliveredTitleDelegate == null)) {
                this.onBeginGenerateGoodsTransportWaybillCargoDeliveredTitleDelegate = new BeginOperationDelegate(this.OnBeginGenerateGoodsTransportWaybillCargoDeliveredTitle);
            }
            if ((this.onEndGenerateGoodsTransportWaybillCargoDeliveredTitleDelegate == null)) {
                this.onEndGenerateGoodsTransportWaybillCargoDeliveredTitleDelegate = new EndOperationDelegate(this.OnEndGenerateGoodsTransportWaybillCargoDeliveredTitle);
            }
            if ((this.onGenerateGoodsTransportWaybillCargoDeliveredTitleCompletedDelegate == null)) {
                this.onGenerateGoodsTransportWaybillCargoDeliveredTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGoodsTransportWaybillCargoDeliveredTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateGoodsTransportWaybillCargoDeliveredTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateGoodsTransportWaybillCargoDeliveredTitleDelegate, this.onGenerateGoodsTransportWaybillCargoDeliveredTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.AvailableDepartmentsResponse GetAvailableDepartments(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.AvailableDepartmentsRequest request) {
            return base.Channel.GetAvailableDepartments(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAvailableDepartments(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.AvailableDepartmentsRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAvailableDepartments(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.AvailableDepartmentsResponse EndGetAvailableDepartments(System.IAsyncResult result) {
            return base.Channel.EndGetAvailableDepartments(result);
        }
        
        private System.IAsyncResult OnBeginGetAvailableDepartments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.AvailableDepartmentsRequest request = ((Midway.ObjectModel.AvailableDepartmentsRequest)(inValues[1]));
            return this.BeginGetAvailableDepartments(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGetAvailableDepartments(System.IAsyncResult result) {
            Midway.ObjectModel.AvailableDepartmentsResponse retVal = this.EndGetAvailableDepartments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAvailableDepartmentsCompleted(object state) {
            if ((this.GetAvailableDepartmentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAvailableDepartmentsCompleted(this, new GetAvailableDepartmentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAvailableDepartmentsAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.AvailableDepartmentsRequest request) {
            this.GetAvailableDepartmentsAsync(credentials, request, null);
        }
        
        public void GetAvailableDepartmentsAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.AvailableDepartmentsRequest request, object userState) {
            if ((this.onBeginGetAvailableDepartmentsDelegate == null)) {
                this.onBeginGetAvailableDepartmentsDelegate = new BeginOperationDelegate(this.OnBeginGetAvailableDepartments);
            }
            if ((this.onEndGetAvailableDepartmentsDelegate == null)) {
                this.onEndGetAvailableDepartmentsDelegate = new EndOperationDelegate(this.OnEndGetAvailableDepartments);
            }
            if ((this.onGetAvailableDepartmentsCompletedDelegate == null)) {
                this.onGetAvailableDepartmentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvailableDepartmentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAvailableDepartmentsDelegate, new object[] {
                        credentials,
                        request}, this.onEndGetAvailableDepartmentsDelegate, this.onGetAvailableDepartmentsCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGoodsMarkingStateResponse GetDocumentGoodsMarkingState(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentGoodsMarkingStateRequest request) {
            return base.Channel.GetDocumentGoodsMarkingState(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDocumentGoodsMarkingState(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentGoodsMarkingStateRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDocumentGoodsMarkingState(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGoodsMarkingStateResponse EndGetDocumentGoodsMarkingState(System.IAsyncResult result) {
            return base.Channel.EndGetDocumentGoodsMarkingState(result);
        }
        
        private System.IAsyncResult OnBeginGetDocumentGoodsMarkingState(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.DocumentGoodsMarkingStateRequest request = ((Midway.ObjectModel.DocumentGoodsMarkingStateRequest)(inValues[1]));
            return this.BeginGetDocumentGoodsMarkingState(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGetDocumentGoodsMarkingState(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGoodsMarkingStateResponse retVal = this.EndGetDocumentGoodsMarkingState(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDocumentGoodsMarkingStateCompleted(object state) {
            if ((this.GetDocumentGoodsMarkingStateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDocumentGoodsMarkingStateCompleted(this, new GetDocumentGoodsMarkingStateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDocumentGoodsMarkingStateAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentGoodsMarkingStateRequest request) {
            this.GetDocumentGoodsMarkingStateAsync(credentials, request, null);
        }
        
        public void GetDocumentGoodsMarkingStateAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentGoodsMarkingStateRequest request, object userState) {
            if ((this.onBeginGetDocumentGoodsMarkingStateDelegate == null)) {
                this.onBeginGetDocumentGoodsMarkingStateDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentGoodsMarkingState);
            }
            if ((this.onEndGetDocumentGoodsMarkingStateDelegate == null)) {
                this.onEndGetDocumentGoodsMarkingStateDelegate = new EndOperationDelegate(this.OnEndGetDocumentGoodsMarkingState);
            }
            if ((this.onGetDocumentGoodsMarkingStateCompletedDelegate == null)) {
                this.onGetDocumentGoodsMarkingStateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentGoodsMarkingStateCompleted);
            }
            base.InvokeAsync(this.onBeginGetDocumentGoodsMarkingStateDelegate, new object[] {
                        credentials,
                        request}, this.onEndGetDocumentGoodsMarkingStateDelegate, this.onGetDocumentGoodsMarkingStateCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.OrganizationPromoCode[] GetOrganizationPromoCodeList(string authToken, string boxId) {
            return base.Channel.GetOrganizationPromoCodeList(authToken, boxId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrganizationPromoCodeList(string authToken, string boxId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrganizationPromoCodeList(authToken, boxId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.OrganizationPromoCode[] EndGetOrganizationPromoCodeList(System.IAsyncResult result) {
            return base.Channel.EndGetOrganizationPromoCodeList(result);
        }
        
        private System.IAsyncResult OnBeginGetOrganizationPromoCodeList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            return this.BeginGetOrganizationPromoCodeList(authToken, boxId, callback, asyncState);
        }
        
        private object[] OnEndGetOrganizationPromoCodeList(System.IAsyncResult result) {
            Midway.ObjectModel.OrganizationPromoCode[] retVal = this.EndGetOrganizationPromoCodeList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrganizationPromoCodeListCompleted(object state) {
            if ((this.GetOrganizationPromoCodeListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrganizationPromoCodeListCompleted(this, new GetOrganizationPromoCodeListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrganizationPromoCodeListAsync(string authToken, string boxId) {
            this.GetOrganizationPromoCodeListAsync(authToken, boxId, null);
        }
        
        public void GetOrganizationPromoCodeListAsync(string authToken, string boxId, object userState) {
            if ((this.onBeginGetOrganizationPromoCodeListDelegate == null)) {
                this.onBeginGetOrganizationPromoCodeListDelegate = new BeginOperationDelegate(this.OnBeginGetOrganizationPromoCodeList);
            }
            if ((this.onEndGetOrganizationPromoCodeListDelegate == null)) {
                this.onEndGetOrganizationPromoCodeListDelegate = new EndOperationDelegate(this.OnEndGetOrganizationPromoCodeList);
            }
            if ((this.onGetOrganizationPromoCodeListCompletedDelegate == null)) {
                this.onGetOrganizationPromoCodeListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrganizationPromoCodeListCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrganizationPromoCodeListDelegate, new object[] {
                        authToken,
                        boxId}, this.onEndGetOrganizationPromoCodeListDelegate, this.onGetOrganizationPromoCodeListCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.PromoCode GetPromoCodeByName(string authToken, string promoCodeName) {
            return base.Channel.GetPromoCodeByName(authToken, promoCodeName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPromoCodeByName(string authToken, string promoCodeName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPromoCodeByName(authToken, promoCodeName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.PromoCode EndGetPromoCodeByName(System.IAsyncResult result) {
            return base.Channel.EndGetPromoCodeByName(result);
        }
        
        private System.IAsyncResult OnBeginGetPromoCodeByName(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string promoCodeName = ((string)(inValues[1]));
            return this.BeginGetPromoCodeByName(authToken, promoCodeName, callback, asyncState);
        }
        
        private object[] OnEndGetPromoCodeByName(System.IAsyncResult result) {
            Midway.ObjectModel.PromoCode retVal = this.EndGetPromoCodeByName(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPromoCodeByNameCompleted(object state) {
            if ((this.GetPromoCodeByNameCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPromoCodeByNameCompleted(this, new GetPromoCodeByNameCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPromoCodeByNameAsync(string authToken, string promoCodeName) {
            this.GetPromoCodeByNameAsync(authToken, promoCodeName, null);
        }
        
        public void GetPromoCodeByNameAsync(string authToken, string promoCodeName, object userState) {
            if ((this.onBeginGetPromoCodeByNameDelegate == null)) {
                this.onBeginGetPromoCodeByNameDelegate = new BeginOperationDelegate(this.OnBeginGetPromoCodeByName);
            }
            if ((this.onEndGetPromoCodeByNameDelegate == null)) {
                this.onEndGetPromoCodeByNameDelegate = new EndOperationDelegate(this.OnEndGetPromoCodeByName);
            }
            if ((this.onGetPromoCodeByNameCompletedDelegate == null)) {
                this.onGetPromoCodeByNameCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPromoCodeByNameCompleted);
            }
            base.InvokeAsync(this.onBeginGetPromoCodeByNameDelegate, new object[] {
                        authToken,
                        promoCodeName}, this.onEndGetPromoCodeByNameDelegate, this.onGetPromoCodeByNameCompletedDelegate, userState);
        }
        
        public void DeleteOrganizationPromoCode(string authToken, string boxId, string organizationPromoCodeId) {
            base.Channel.DeleteOrganizationPromoCode(authToken, boxId, organizationPromoCodeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteOrganizationPromoCode(string authToken, string boxId, string organizationPromoCodeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteOrganizationPromoCode(authToken, boxId, organizationPromoCodeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteOrganizationPromoCode(System.IAsyncResult result) {
            base.Channel.EndDeleteOrganizationPromoCode(result);
        }
        
        private System.IAsyncResult OnBeginDeleteOrganizationPromoCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string organizationPromoCodeId = ((string)(inValues[2]));
            return this.BeginDeleteOrganizationPromoCode(authToken, boxId, organizationPromoCodeId, callback, asyncState);
        }
        
        private object[] OnEndDeleteOrganizationPromoCode(System.IAsyncResult result) {
            this.EndDeleteOrganizationPromoCode(result);
            return null;
        }
        
        private void OnDeleteOrganizationPromoCodeCompleted(object state) {
            if ((this.DeleteOrganizationPromoCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteOrganizationPromoCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteOrganizationPromoCodeAsync(string authToken, string boxId, string organizationPromoCodeId) {
            this.DeleteOrganizationPromoCodeAsync(authToken, boxId, organizationPromoCodeId, null);
        }
        
        public void DeleteOrganizationPromoCodeAsync(string authToken, string boxId, string organizationPromoCodeId, object userState) {
            if ((this.onBeginDeleteOrganizationPromoCodeDelegate == null)) {
                this.onBeginDeleteOrganizationPromoCodeDelegate = new BeginOperationDelegate(this.OnBeginDeleteOrganizationPromoCode);
            }
            if ((this.onEndDeleteOrganizationPromoCodeDelegate == null)) {
                this.onEndDeleteOrganizationPromoCodeDelegate = new EndOperationDelegate(this.OnEndDeleteOrganizationPromoCode);
            }
            if ((this.onDeleteOrganizationPromoCodeCompletedDelegate == null)) {
                this.onDeleteOrganizationPromoCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationPromoCodeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteOrganizationPromoCodeDelegate, new object[] {
                        authToken,
                        boxId,
                        organizationPromoCodeId}, this.onEndDeleteOrganizationPromoCodeDelegate, this.onDeleteOrganizationPromoCodeCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.CertificateCheckInfo[] CheckCertificateList(string[] thumbprints) {
            return base.Channel.CheckCertificateList(thumbprints);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckCertificateList(string[] thumbprints, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckCertificateList(thumbprints, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.CertificateCheckInfo[] EndCheckCertificateList(System.IAsyncResult result) {
            return base.Channel.EndCheckCertificateList(result);
        }
        
        private System.IAsyncResult OnBeginCheckCertificateList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] thumbprints = ((string[])(inValues[0]));
            return this.BeginCheckCertificateList(thumbprints, callback, asyncState);
        }
        
        private object[] OnEndCheckCertificateList(System.IAsyncResult result) {
            Midway.ObjectModel.CertificateCheckInfo[] retVal = this.EndCheckCertificateList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckCertificateListCompleted(object state) {
            if ((this.CheckCertificateListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckCertificateListCompleted(this, new CheckCertificateListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckCertificateListAsync(string[] thumbprints) {
            this.CheckCertificateListAsync(thumbprints, null);
        }
        
        public void CheckCertificateListAsync(string[] thumbprints, object userState) {
            if ((this.onBeginCheckCertificateListDelegate == null)) {
                this.onBeginCheckCertificateListDelegate = new BeginOperationDelegate(this.OnBeginCheckCertificateList);
            }
            if ((this.onEndCheckCertificateListDelegate == null)) {
                this.onEndCheckCertificateListDelegate = new EndOperationDelegate(this.OnEndCheckCertificateList);
            }
            if ((this.onCheckCertificateListCompletedDelegate == null)) {
                this.onCheckCertificateListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckCertificateListCompleted);
            }
            base.InvokeAsync(this.onBeginCheckCertificateListDelegate, new object[] {
                        thumbprints}, this.onEndCheckCertificateListDelegate, this.onCheckCertificateListCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent GenerateStatementOfInvoiceReglament(string authToken, string boxId) {
            return base.Channel.GenerateStatementOfInvoiceReglament(authToken, boxId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateStatementOfInvoiceReglament(string authToken, string boxId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateStatementOfInvoiceReglament(authToken, boxId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndGenerateStatementOfInvoiceReglament(System.IAsyncResult result) {
            return base.Channel.EndGenerateStatementOfInvoiceReglament(result);
        }
        
        private System.IAsyncResult OnBeginGenerateStatementOfInvoiceReglament(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            return this.BeginGenerateStatementOfInvoiceReglament(authToken, boxId, callback, asyncState);
        }
        
        private object[] OnEndGenerateStatementOfInvoiceReglament(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndGenerateStatementOfInvoiceReglament(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateStatementOfInvoiceReglamentCompleted(object state) {
            if ((this.GenerateStatementOfInvoiceReglamentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateStatementOfInvoiceReglamentCompleted(this, new GenerateStatementOfInvoiceReglamentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateStatementOfInvoiceReglamentAsync(string authToken, string boxId) {
            this.GenerateStatementOfInvoiceReglamentAsync(authToken, boxId, null);
        }
        
        public void GenerateStatementOfInvoiceReglamentAsync(string authToken, string boxId, object userState) {
            if ((this.onBeginGenerateStatementOfInvoiceReglamentDelegate == null)) {
                this.onBeginGenerateStatementOfInvoiceReglamentDelegate = new BeginOperationDelegate(this.OnBeginGenerateStatementOfInvoiceReglament);
            }
            if ((this.onEndGenerateStatementOfInvoiceReglamentDelegate == null)) {
                this.onEndGenerateStatementOfInvoiceReglamentDelegate = new EndOperationDelegate(this.OnEndGenerateStatementOfInvoiceReglament);
            }
            if ((this.onGenerateStatementOfInvoiceReglamentCompletedDelegate == null)) {
                this.onGenerateStatementOfInvoiceReglamentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateStatementOfInvoiceReglamentCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateStatementOfInvoiceReglamentDelegate, new object[] {
                        authToken,
                        boxId}, this.onEndGenerateStatementOfInvoiceReglamentDelegate, this.onGenerateStatementOfInvoiceReglamentCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SentMessage SendStatementOfInvoiceReglament(string authToken, Midway.ObjectModel.MessageOfStatement message) {
            return base.Channel.SendStatementOfInvoiceReglament(authToken, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendStatementOfInvoiceReglament(string authToken, Midway.ObjectModel.MessageOfStatement message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendStatementOfInvoiceReglament(authToken, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SentMessage EndSendStatementOfInvoiceReglament(System.IAsyncResult result) {
            return base.Channel.EndSendStatementOfInvoiceReglament(result);
        }
        
        private System.IAsyncResult OnBeginSendStatementOfInvoiceReglament(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.MessageOfStatement message = ((Midway.ObjectModel.MessageOfStatement)(inValues[1]));
            return this.BeginSendStatementOfInvoiceReglament(authToken, message, callback, asyncState);
        }
        
        private object[] OnEndSendStatementOfInvoiceReglament(System.IAsyncResult result) {
            Midway.ObjectModel.SentMessage retVal = this.EndSendStatementOfInvoiceReglament(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendStatementOfInvoiceReglamentCompleted(object state) {
            if ((this.SendStatementOfInvoiceReglamentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendStatementOfInvoiceReglamentCompleted(this, new SendStatementOfInvoiceReglamentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendStatementOfInvoiceReglamentAsync(string authToken, Midway.ObjectModel.MessageOfStatement message) {
            this.SendStatementOfInvoiceReglamentAsync(authToken, message, null);
        }
        
        public void SendStatementOfInvoiceReglamentAsync(string authToken, Midway.ObjectModel.MessageOfStatement message, object userState) {
            if ((this.onBeginSendStatementOfInvoiceReglamentDelegate == null)) {
                this.onBeginSendStatementOfInvoiceReglamentDelegate = new BeginOperationDelegate(this.OnBeginSendStatementOfInvoiceReglament);
            }
            if ((this.onEndSendStatementOfInvoiceReglamentDelegate == null)) {
                this.onEndSendStatementOfInvoiceReglamentDelegate = new EndOperationDelegate(this.OnEndSendStatementOfInvoiceReglament);
            }
            if ((this.onSendStatementOfInvoiceReglamentCompletedDelegate == null)) {
                this.onSendStatementOfInvoiceReglamentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendStatementOfInvoiceReglamentCompleted);
            }
            base.InvokeAsync(this.onBeginSendStatementOfInvoiceReglamentDelegate, new object[] {
                        authToken,
                        message}, this.onEndSendStatementOfInvoiceReglamentDelegate, this.onSendStatementOfInvoiceReglamentCompletedDelegate, userState);
        }
        
        public bool CheckNeedToStatementOfInvoiceReglament(string authToken, string boxId) {
            return base.Channel.CheckNeedToStatementOfInvoiceReglament(authToken, boxId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckNeedToStatementOfInvoiceReglament(string authToken, string boxId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckNeedToStatementOfInvoiceReglament(authToken, boxId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCheckNeedToStatementOfInvoiceReglament(System.IAsyncResult result) {
            return base.Channel.EndCheckNeedToStatementOfInvoiceReglament(result);
        }
        
        private System.IAsyncResult OnBeginCheckNeedToStatementOfInvoiceReglament(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            return this.BeginCheckNeedToStatementOfInvoiceReglament(authToken, boxId, callback, asyncState);
        }
        
        private object[] OnEndCheckNeedToStatementOfInvoiceReglament(System.IAsyncResult result) {
            bool retVal = this.EndCheckNeedToStatementOfInvoiceReglament(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckNeedToStatementOfInvoiceReglamentCompleted(object state) {
            if ((this.CheckNeedToStatementOfInvoiceReglamentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckNeedToStatementOfInvoiceReglamentCompleted(this, new CheckNeedToStatementOfInvoiceReglamentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckNeedToStatementOfInvoiceReglamentAsync(string authToken, string boxId) {
            this.CheckNeedToStatementOfInvoiceReglamentAsync(authToken, boxId, null);
        }
        
        public void CheckNeedToStatementOfInvoiceReglamentAsync(string authToken, string boxId, object userState) {
            if ((this.onBeginCheckNeedToStatementOfInvoiceReglamentDelegate == null)) {
                this.onBeginCheckNeedToStatementOfInvoiceReglamentDelegate = new BeginOperationDelegate(this.OnBeginCheckNeedToStatementOfInvoiceReglament);
            }
            if ((this.onEndCheckNeedToStatementOfInvoiceReglamentDelegate == null)) {
                this.onEndCheckNeedToStatementOfInvoiceReglamentDelegate = new EndOperationDelegate(this.OnEndCheckNeedToStatementOfInvoiceReglament);
            }
            if ((this.onCheckNeedToStatementOfInvoiceReglamentCompletedDelegate == null)) {
                this.onCheckNeedToStatementOfInvoiceReglamentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckNeedToStatementOfInvoiceReglamentCompleted);
            }
            base.InvokeAsync(this.onBeginCheckNeedToStatementOfInvoiceReglamentDelegate, new object[] {
                        authToken,
                        boxId}, this.onEndCheckNeedToStatementOfInvoiceReglamentDelegate, this.onCheckNeedToStatementOfInvoiceReglamentCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneralTransferSeller ParseGeneralTransferSeller(string authToken, byte[] content) {
            return base.Channel.ParseGeneralTransferSeller(authToken, content);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGeneralTransferSeller(string authToken, byte[] content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGeneralTransferSeller(authToken, content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneralTransferSeller EndParseGeneralTransferSeller(System.IAsyncResult result) {
            return base.Channel.EndParseGeneralTransferSeller(result);
        }
        
        private System.IAsyncResult OnBeginParseGeneralTransferSeller(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            byte[] content = ((byte[])(inValues[1]));
            return this.BeginParseGeneralTransferSeller(authToken, content, callback, asyncState);
        }
        
        private object[] OnEndParseGeneralTransferSeller(System.IAsyncResult result) {
            Midway.ObjectModel.GeneralTransferSeller retVal = this.EndParseGeneralTransferSeller(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGeneralTransferSellerCompleted(object state) {
            if ((this.ParseGeneralTransferSellerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGeneralTransferSellerCompleted(this, new ParseGeneralTransferSellerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGeneralTransferSellerAsync(string authToken, byte[] content) {
            this.ParseGeneralTransferSellerAsync(authToken, content, null);
        }
        
        public void ParseGeneralTransferSellerAsync(string authToken, byte[] content, object userState) {
            if ((this.onBeginParseGeneralTransferSellerDelegate == null)) {
                this.onBeginParseGeneralTransferSellerDelegate = new BeginOperationDelegate(this.OnBeginParseGeneralTransferSeller);
            }
            if ((this.onEndParseGeneralTransferSellerDelegate == null)) {
                this.onEndParseGeneralTransferSellerDelegate = new EndOperationDelegate(this.OnEndParseGeneralTransferSeller);
            }
            if ((this.onParseGeneralTransferSellerCompletedDelegate == null)) {
                this.onParseGeneralTransferSellerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGeneralTransferSellerCompleted);
            }
            base.InvokeAsync(this.onBeginParseGeneralTransferSellerDelegate, new object[] {
                        authToken,
                        content}, this.onEndParseGeneralTransferSellerDelegate, this.onParseGeneralTransferSellerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneralTransferBuyer ParseGeneralTransferBuyer(string authToken, byte[] content) {
            return base.Channel.ParseGeneralTransferBuyer(authToken, content);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGeneralTransferBuyer(string authToken, byte[] content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGeneralTransferBuyer(authToken, content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneralTransferBuyer EndParseGeneralTransferBuyer(System.IAsyncResult result) {
            return base.Channel.EndParseGeneralTransferBuyer(result);
        }
        
        private System.IAsyncResult OnBeginParseGeneralTransferBuyer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            byte[] content = ((byte[])(inValues[1]));
            return this.BeginParseGeneralTransferBuyer(authToken, content, callback, asyncState);
        }
        
        private object[] OnEndParseGeneralTransferBuyer(System.IAsyncResult result) {
            Midway.ObjectModel.GeneralTransferBuyer retVal = this.EndParseGeneralTransferBuyer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGeneralTransferBuyerCompleted(object state) {
            if ((this.ParseGeneralTransferBuyerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGeneralTransferBuyerCompleted(this, new ParseGeneralTransferBuyerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGeneralTransferBuyerAsync(string authToken, byte[] content) {
            this.ParseGeneralTransferBuyerAsync(authToken, content, null);
        }
        
        public void ParseGeneralTransferBuyerAsync(string authToken, byte[] content, object userState) {
            if ((this.onBeginParseGeneralTransferBuyerDelegate == null)) {
                this.onBeginParseGeneralTransferBuyerDelegate = new BeginOperationDelegate(this.OnBeginParseGeneralTransferBuyer);
            }
            if ((this.onEndParseGeneralTransferBuyerDelegate == null)) {
                this.onEndParseGeneralTransferBuyerDelegate = new EndOperationDelegate(this.OnEndParseGeneralTransferBuyer);
            }
            if ((this.onParseGeneralTransferBuyerCompletedDelegate == null)) {
                this.onParseGeneralTransferBuyerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGeneralTransferBuyerCompleted);
            }
            base.InvokeAsync(this.onBeginParseGeneralTransferBuyerDelegate, new object[] {
                        authToken,
                        content}, this.onEndParseGeneralTransferBuyerDelegate, this.onParseGeneralTransferBuyerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.WorksTransferSeller ParseWorksTransferSeller(string authToken, byte[] content) {
            return base.Channel.ParseWorksTransferSeller(authToken, content);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseWorksTransferSeller(string authToken, byte[] content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseWorksTransferSeller(authToken, content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.WorksTransferSeller EndParseWorksTransferSeller(System.IAsyncResult result) {
            return base.Channel.EndParseWorksTransferSeller(result);
        }
        
        private System.IAsyncResult OnBeginParseWorksTransferSeller(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            byte[] content = ((byte[])(inValues[1]));
            return this.BeginParseWorksTransferSeller(authToken, content, callback, asyncState);
        }
        
        private object[] OnEndParseWorksTransferSeller(System.IAsyncResult result) {
            Midway.ObjectModel.WorksTransferSeller retVal = this.EndParseWorksTransferSeller(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseWorksTransferSellerCompleted(object state) {
            if ((this.ParseWorksTransferSellerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseWorksTransferSellerCompleted(this, new ParseWorksTransferSellerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseWorksTransferSellerAsync(string authToken, byte[] content) {
            this.ParseWorksTransferSellerAsync(authToken, content, null);
        }
        
        public void ParseWorksTransferSellerAsync(string authToken, byte[] content, object userState) {
            if ((this.onBeginParseWorksTransferSellerDelegate == null)) {
                this.onBeginParseWorksTransferSellerDelegate = new BeginOperationDelegate(this.OnBeginParseWorksTransferSeller);
            }
            if ((this.onEndParseWorksTransferSellerDelegate == null)) {
                this.onEndParseWorksTransferSellerDelegate = new EndOperationDelegate(this.OnEndParseWorksTransferSeller);
            }
            if ((this.onParseWorksTransferSellerCompletedDelegate == null)) {
                this.onParseWorksTransferSellerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseWorksTransferSellerCompleted);
            }
            base.InvokeAsync(this.onBeginParseWorksTransferSellerDelegate, new object[] {
                        authToken,
                        content}, this.onEndParseWorksTransferSellerDelegate, this.onParseWorksTransferSellerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.WorksTransferBuyer ParseWorksTransferBuyer(string authToken, byte[] content) {
            return base.Channel.ParseWorksTransferBuyer(authToken, content);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseWorksTransferBuyer(string authToken, byte[] content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseWorksTransferBuyer(authToken, content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.WorksTransferBuyer EndParseWorksTransferBuyer(System.IAsyncResult result) {
            return base.Channel.EndParseWorksTransferBuyer(result);
        }
        
        private System.IAsyncResult OnBeginParseWorksTransferBuyer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            byte[] content = ((byte[])(inValues[1]));
            return this.BeginParseWorksTransferBuyer(authToken, content, callback, asyncState);
        }
        
        private object[] OnEndParseWorksTransferBuyer(System.IAsyncResult result) {
            Midway.ObjectModel.WorksTransferBuyer retVal = this.EndParseWorksTransferBuyer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseWorksTransferBuyerCompleted(object state) {
            if ((this.ParseWorksTransferBuyerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseWorksTransferBuyerCompleted(this, new ParseWorksTransferBuyerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseWorksTransferBuyerAsync(string authToken, byte[] content) {
            this.ParseWorksTransferBuyerAsync(authToken, content, null);
        }
        
        public void ParseWorksTransferBuyerAsync(string authToken, byte[] content, object userState) {
            if ((this.onBeginParseWorksTransferBuyerDelegate == null)) {
                this.onBeginParseWorksTransferBuyerDelegate = new BeginOperationDelegate(this.OnBeginParseWorksTransferBuyer);
            }
            if ((this.onEndParseWorksTransferBuyerDelegate == null)) {
                this.onEndParseWorksTransferBuyerDelegate = new EndOperationDelegate(this.OnEndParseWorksTransferBuyer);
            }
            if ((this.onParseWorksTransferBuyerCompletedDelegate == null)) {
                this.onParseWorksTransferBuyerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseWorksTransferBuyerCompleted);
            }
            base.InvokeAsync(this.onBeginParseWorksTransferBuyerDelegate, new object[] {
                        authToken,
                        content}, this.onEndParseWorksTransferBuyerDelegate, this.onParseWorksTransferBuyerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GoodsTransferSeller ParseGoodsTransferSeller(string authToken, byte[] content) {
            return base.Channel.ParseGoodsTransferSeller(authToken, content);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGoodsTransferSeller(string authToken, byte[] content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGoodsTransferSeller(authToken, content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GoodsTransferSeller EndParseGoodsTransferSeller(System.IAsyncResult result) {
            return base.Channel.EndParseGoodsTransferSeller(result);
        }
        
        private System.IAsyncResult OnBeginParseGoodsTransferSeller(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            byte[] content = ((byte[])(inValues[1]));
            return this.BeginParseGoodsTransferSeller(authToken, content, callback, asyncState);
        }
        
        private object[] OnEndParseGoodsTransferSeller(System.IAsyncResult result) {
            Midway.ObjectModel.GoodsTransferSeller retVal = this.EndParseGoodsTransferSeller(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGoodsTransferSellerCompleted(object state) {
            if ((this.ParseGoodsTransferSellerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGoodsTransferSellerCompleted(this, new ParseGoodsTransferSellerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGoodsTransferSellerAsync(string authToken, byte[] content) {
            this.ParseGoodsTransferSellerAsync(authToken, content, null);
        }
        
        public void ParseGoodsTransferSellerAsync(string authToken, byte[] content, object userState) {
            if ((this.onBeginParseGoodsTransferSellerDelegate == null)) {
                this.onBeginParseGoodsTransferSellerDelegate = new BeginOperationDelegate(this.OnBeginParseGoodsTransferSeller);
            }
            if ((this.onEndParseGoodsTransferSellerDelegate == null)) {
                this.onEndParseGoodsTransferSellerDelegate = new EndOperationDelegate(this.OnEndParseGoodsTransferSeller);
            }
            if ((this.onParseGoodsTransferSellerCompletedDelegate == null)) {
                this.onParseGoodsTransferSellerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGoodsTransferSellerCompleted);
            }
            base.InvokeAsync(this.onBeginParseGoodsTransferSellerDelegate, new object[] {
                        authToken,
                        content}, this.onEndParseGoodsTransferSellerDelegate, this.onParseGoodsTransferSellerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GoodsTransferBuyer ParseGoodsTransferBuyer(string authToken, byte[] content) {
            return base.Channel.ParseGoodsTransferBuyer(authToken, content);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGoodsTransferBuyer(string authToken, byte[] content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGoodsTransferBuyer(authToken, content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GoodsTransferBuyer EndParseGoodsTransferBuyer(System.IAsyncResult result) {
            return base.Channel.EndParseGoodsTransferBuyer(result);
        }
        
        private System.IAsyncResult OnBeginParseGoodsTransferBuyer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            byte[] content = ((byte[])(inValues[1]));
            return this.BeginParseGoodsTransferBuyer(authToken, content, callback, asyncState);
        }
        
        private object[] OnEndParseGoodsTransferBuyer(System.IAsyncResult result) {
            Midway.ObjectModel.GoodsTransferBuyer retVal = this.EndParseGoodsTransferBuyer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGoodsTransferBuyerCompleted(object state) {
            if ((this.ParseGoodsTransferBuyerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGoodsTransferBuyerCompleted(this, new ParseGoodsTransferBuyerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGoodsTransferBuyerAsync(string authToken, byte[] content) {
            this.ParseGoodsTransferBuyerAsync(authToken, content, null);
        }
        
        public void ParseGoodsTransferBuyerAsync(string authToken, byte[] content, object userState) {
            if ((this.onBeginParseGoodsTransferBuyerDelegate == null)) {
                this.onBeginParseGoodsTransferBuyerDelegate = new BeginOperationDelegate(this.OnBeginParseGoodsTransferBuyer);
            }
            if ((this.onEndParseGoodsTransferBuyerDelegate == null)) {
                this.onEndParseGoodsTransferBuyerDelegate = new EndOperationDelegate(this.OnEndParseGoodsTransferBuyer);
            }
            if ((this.onParseGoodsTransferBuyerCompletedDelegate == null)) {
                this.onParseGoodsTransferBuyerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGoodsTransferBuyerCompleted);
            }
            base.InvokeAsync(this.onBeginParseGoodsTransferBuyerDelegate, new object[] {
                        authToken,
                        content}, this.onEndParseGoodsTransferBuyerDelegate, this.onParseGoodsTransferBuyerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneralTransferCorrectionSeller ParseGeneralTransferCorrectionSeller(string authToken, byte[] content) {
            return base.Channel.ParseGeneralTransferCorrectionSeller(authToken, content);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGeneralTransferCorrectionSeller(string authToken, byte[] content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGeneralTransferCorrectionSeller(authToken, content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneralTransferCorrectionSeller EndParseGeneralTransferCorrectionSeller(System.IAsyncResult result) {
            return base.Channel.EndParseGeneralTransferCorrectionSeller(result);
        }
        
        private System.IAsyncResult OnBeginParseGeneralTransferCorrectionSeller(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            byte[] content = ((byte[])(inValues[1]));
            return this.BeginParseGeneralTransferCorrectionSeller(authToken, content, callback, asyncState);
        }
        
        private object[] OnEndParseGeneralTransferCorrectionSeller(System.IAsyncResult result) {
            Midway.ObjectModel.GeneralTransferCorrectionSeller retVal = this.EndParseGeneralTransferCorrectionSeller(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGeneralTransferCorrectionSellerCompleted(object state) {
            if ((this.ParseGeneralTransferCorrectionSellerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGeneralTransferCorrectionSellerCompleted(this, new ParseGeneralTransferCorrectionSellerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGeneralTransferCorrectionSellerAsync(string authToken, byte[] content) {
            this.ParseGeneralTransferCorrectionSellerAsync(authToken, content, null);
        }
        
        public void ParseGeneralTransferCorrectionSellerAsync(string authToken, byte[] content, object userState) {
            if ((this.onBeginParseGeneralTransferCorrectionSellerDelegate == null)) {
                this.onBeginParseGeneralTransferCorrectionSellerDelegate = new BeginOperationDelegate(this.OnBeginParseGeneralTransferCorrectionSeller);
            }
            if ((this.onEndParseGeneralTransferCorrectionSellerDelegate == null)) {
                this.onEndParseGeneralTransferCorrectionSellerDelegate = new EndOperationDelegate(this.OnEndParseGeneralTransferCorrectionSeller);
            }
            if ((this.onParseGeneralTransferCorrectionSellerCompletedDelegate == null)) {
                this.onParseGeneralTransferCorrectionSellerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGeneralTransferCorrectionSellerCompleted);
            }
            base.InvokeAsync(this.onBeginParseGeneralTransferCorrectionSellerDelegate, new object[] {
                        authToken,
                        content}, this.onEndParseGeneralTransferCorrectionSellerDelegate, this.onParseGeneralTransferCorrectionSellerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneralTransferCorrectionBuyer ParseGeneralTransferCorrectionBuyer(string authToken, byte[] content) {
            return base.Channel.ParseGeneralTransferCorrectionBuyer(authToken, content);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGeneralTransferCorrectionBuyer(string authToken, byte[] content, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGeneralTransferCorrectionBuyer(authToken, content, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneralTransferCorrectionBuyer EndParseGeneralTransferCorrectionBuyer(System.IAsyncResult result) {
            return base.Channel.EndParseGeneralTransferCorrectionBuyer(result);
        }
        
        private System.IAsyncResult OnBeginParseGeneralTransferCorrectionBuyer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            byte[] content = ((byte[])(inValues[1]));
            return this.BeginParseGeneralTransferCorrectionBuyer(authToken, content, callback, asyncState);
        }
        
        private object[] OnEndParseGeneralTransferCorrectionBuyer(System.IAsyncResult result) {
            Midway.ObjectModel.GeneralTransferCorrectionBuyer retVal = this.EndParseGeneralTransferCorrectionBuyer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGeneralTransferCorrectionBuyerCompleted(object state) {
            if ((this.ParseGeneralTransferCorrectionBuyerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGeneralTransferCorrectionBuyerCompleted(this, new ParseGeneralTransferCorrectionBuyerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGeneralTransferCorrectionBuyerAsync(string authToken, byte[] content) {
            this.ParseGeneralTransferCorrectionBuyerAsync(authToken, content, null);
        }
        
        public void ParseGeneralTransferCorrectionBuyerAsync(string authToken, byte[] content, object userState) {
            if ((this.onBeginParseGeneralTransferCorrectionBuyerDelegate == null)) {
                this.onBeginParseGeneralTransferCorrectionBuyerDelegate = new BeginOperationDelegate(this.OnBeginParseGeneralTransferCorrectionBuyer);
            }
            if ((this.onEndParseGeneralTransferCorrectionBuyerDelegate == null)) {
                this.onEndParseGeneralTransferCorrectionBuyerDelegate = new EndOperationDelegate(this.OnEndParseGeneralTransferCorrectionBuyer);
            }
            if ((this.onParseGeneralTransferCorrectionBuyerCompletedDelegate == null)) {
                this.onParseGeneralTransferCorrectionBuyerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGeneralTransferCorrectionBuyerCompleted);
            }
            base.InvokeAsync(this.onBeginParseGeneralTransferCorrectionBuyerDelegate, new object[] {
                        authToken,
                        content}, this.onEndParseGeneralTransferCorrectionBuyerDelegate, this.onParseGeneralTransferCorrectionBuyerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingResponse ParseGeneralTransferCorrectionBuyerV3(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingRequest request) {
            return base.Channel.ParseGeneralTransferCorrectionBuyerV3(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGeneralTransferCorrectionBuyerV3(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGeneralTransferCorrectionBuyerV3(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingResponse EndParseGeneralTransferCorrectionBuyerV3(System.IAsyncResult result) {
            return base.Channel.EndParseGeneralTransferCorrectionBuyerV3(result);
        }
        
        private System.IAsyncResult OnBeginParseGeneralTransferCorrectionBuyerV3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingRequest request = ((Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingRequest)(inValues[1]));
            return this.BeginParseGeneralTransferCorrectionBuyerV3(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseGeneralTransferCorrectionBuyerV3(System.IAsyncResult result) {
            Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingResponse retVal = this.EndParseGeneralTransferCorrectionBuyerV3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGeneralTransferCorrectionBuyerV3Completed(object state) {
            if ((this.ParseGeneralTransferCorrectionBuyerV3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGeneralTransferCorrectionBuyerV3Completed(this, new ParseGeneralTransferCorrectionBuyerV3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGeneralTransferCorrectionBuyerV3Async(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingRequest request) {
            this.ParseGeneralTransferCorrectionBuyerV3Async(credentials, request, null);
        }
        
        public void ParseGeneralTransferCorrectionBuyerV3Async(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3ParsingRequest request, object userState) {
            if ((this.onBeginParseGeneralTransferCorrectionBuyerV3Delegate == null)) {
                this.onBeginParseGeneralTransferCorrectionBuyerV3Delegate = new BeginOperationDelegate(this.OnBeginParseGeneralTransferCorrectionBuyerV3);
            }
            if ((this.onEndParseGeneralTransferCorrectionBuyerV3Delegate == null)) {
                this.onEndParseGeneralTransferCorrectionBuyerV3Delegate = new EndOperationDelegate(this.OnEndParseGeneralTransferCorrectionBuyerV3);
            }
            if ((this.onParseGeneralTransferCorrectionBuyerV3CompletedDelegate == null)) {
                this.onParseGeneralTransferCorrectionBuyerV3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGeneralTransferCorrectionBuyerV3Completed);
            }
            base.InvokeAsync(this.onBeginParseGeneralTransferCorrectionBuyerV3Delegate, new object[] {
                        credentials,
                        request}, this.onEndParseGeneralTransferCorrectionBuyerV3Delegate, this.onParseGeneralTransferCorrectionBuyerV3CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneralTransferSellerV2ParsingResponse ParseGeneralTransferSellerV2(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferSellerV2ParsingRequest request) {
            return base.Channel.ParseGeneralTransferSellerV2(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGeneralTransferSellerV2(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferSellerV2ParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGeneralTransferSellerV2(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneralTransferSellerV2ParsingResponse EndParseGeneralTransferSellerV2(System.IAsyncResult result) {
            return base.Channel.EndParseGeneralTransferSellerV2(result);
        }
        
        private System.IAsyncResult OnBeginParseGeneralTransferSellerV2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GeneralTransferSellerV2ParsingRequest request = ((Midway.ObjectModel.GeneralTransferSellerV2ParsingRequest)(inValues[1]));
            return this.BeginParseGeneralTransferSellerV2(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseGeneralTransferSellerV2(System.IAsyncResult result) {
            Midway.ObjectModel.GeneralTransferSellerV2ParsingResponse retVal = this.EndParseGeneralTransferSellerV2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGeneralTransferSellerV2Completed(object state) {
            if ((this.ParseGeneralTransferSellerV2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGeneralTransferSellerV2Completed(this, new ParseGeneralTransferSellerV2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGeneralTransferSellerV2Async(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferSellerV2ParsingRequest request) {
            this.ParseGeneralTransferSellerV2Async(credentials, request, null);
        }
        
        public void ParseGeneralTransferSellerV2Async(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferSellerV2ParsingRequest request, object userState) {
            if ((this.onBeginParseGeneralTransferSellerV2Delegate == null)) {
                this.onBeginParseGeneralTransferSellerV2Delegate = new BeginOperationDelegate(this.OnBeginParseGeneralTransferSellerV2);
            }
            if ((this.onEndParseGeneralTransferSellerV2Delegate == null)) {
                this.onEndParseGeneralTransferSellerV2Delegate = new EndOperationDelegate(this.OnEndParseGeneralTransferSellerV2);
            }
            if ((this.onParseGeneralTransferSellerV2CompletedDelegate == null)) {
                this.onParseGeneralTransferSellerV2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGeneralTransferSellerV2Completed);
            }
            base.InvokeAsync(this.onBeginParseGeneralTransferSellerV2Delegate, new object[] {
                        credentials,
                        request}, this.onEndParseGeneralTransferSellerV2Delegate, this.onParseGeneralTransferSellerV2CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneralTransferBuyerV2ParsingResponse ParseGeneralTransferBuyerV2(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferBuyerV2ParsingRequest request) {
            return base.Channel.ParseGeneralTransferBuyerV2(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGeneralTransferBuyerV2(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferBuyerV2ParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGeneralTransferBuyerV2(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneralTransferBuyerV2ParsingResponse EndParseGeneralTransferBuyerV2(System.IAsyncResult result) {
            return base.Channel.EndParseGeneralTransferBuyerV2(result);
        }
        
        private System.IAsyncResult OnBeginParseGeneralTransferBuyerV2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GeneralTransferBuyerV2ParsingRequest request = ((Midway.ObjectModel.GeneralTransferBuyerV2ParsingRequest)(inValues[1]));
            return this.BeginParseGeneralTransferBuyerV2(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseGeneralTransferBuyerV2(System.IAsyncResult result) {
            Midway.ObjectModel.GeneralTransferBuyerV2ParsingResponse retVal = this.EndParseGeneralTransferBuyerV2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGeneralTransferBuyerV2Completed(object state) {
            if ((this.ParseGeneralTransferBuyerV2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGeneralTransferBuyerV2Completed(this, new ParseGeneralTransferBuyerV2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGeneralTransferBuyerV2Async(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferBuyerV2ParsingRequest request) {
            this.ParseGeneralTransferBuyerV2Async(credentials, request, null);
        }
        
        public void ParseGeneralTransferBuyerV2Async(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferBuyerV2ParsingRequest request, object userState) {
            if ((this.onBeginParseGeneralTransferBuyerV2Delegate == null)) {
                this.onBeginParseGeneralTransferBuyerV2Delegate = new BeginOperationDelegate(this.OnBeginParseGeneralTransferBuyerV2);
            }
            if ((this.onEndParseGeneralTransferBuyerV2Delegate == null)) {
                this.onEndParseGeneralTransferBuyerV2Delegate = new EndOperationDelegate(this.OnEndParseGeneralTransferBuyerV2);
            }
            if ((this.onParseGeneralTransferBuyerV2CompletedDelegate == null)) {
                this.onParseGeneralTransferBuyerV2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGeneralTransferBuyerV2Completed);
            }
            base.InvokeAsync(this.onBeginParseGeneralTransferBuyerV2Delegate, new object[] {
                        credentials,
                        request}, this.onEndParseGeneralTransferBuyerV2Delegate, this.onParseGeneralTransferBuyerV2CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.TransportWaybillConsignorTitleParsingResponse ParseTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsignorTitleParsingRequest request) {
            return base.Channel.ParseTransportWaybillConsignorTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsignorTitleParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseTransportWaybillConsignorTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.TransportWaybillConsignorTitleParsingResponse EndParseTransportWaybillConsignorTitle(System.IAsyncResult result) {
            return base.Channel.EndParseTransportWaybillConsignorTitle(result);
        }
        
        private System.IAsyncResult OnBeginParseTransportWaybillConsignorTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillConsignorTitleParsingRequest request = ((Midway.ObjectModel.TransportWaybillConsignorTitleParsingRequest)(inValues[1]));
            return this.BeginParseTransportWaybillConsignorTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseTransportWaybillConsignorTitle(System.IAsyncResult result) {
            Midway.ObjectModel.TransportWaybillConsignorTitleParsingResponse retVal = this.EndParseTransportWaybillConsignorTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseTransportWaybillConsignorTitleCompleted(object state) {
            if ((this.ParseTransportWaybillConsignorTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseTransportWaybillConsignorTitleCompleted(this, new ParseTransportWaybillConsignorTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseTransportWaybillConsignorTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsignorTitleParsingRequest request) {
            this.ParseTransportWaybillConsignorTitleAsync(credentials, request, null);
        }
        
        public void ParseTransportWaybillConsignorTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsignorTitleParsingRequest request, object userState) {
            if ((this.onBeginParseTransportWaybillConsignorTitleDelegate == null)) {
                this.onBeginParseTransportWaybillConsignorTitleDelegate = new BeginOperationDelegate(this.OnBeginParseTransportWaybillConsignorTitle);
            }
            if ((this.onEndParseTransportWaybillConsignorTitleDelegate == null)) {
                this.onEndParseTransportWaybillConsignorTitleDelegate = new EndOperationDelegate(this.OnEndParseTransportWaybillConsignorTitle);
            }
            if ((this.onParseTransportWaybillConsignorTitleCompletedDelegate == null)) {
                this.onParseTransportWaybillConsignorTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseTransportWaybillConsignorTitleCompleted);
            }
            base.InvokeAsync(this.onBeginParseTransportWaybillConsignorTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndParseTransportWaybillConsignorTitleDelegate, this.onParseTransportWaybillConsignorTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.TransportWaybillCargoReceivedTitleParsingResponse ParseTransportWaybillCargoReceivedTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoReceivedParsingRequest request) {
            return base.Channel.ParseTransportWaybillCargoReceivedTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseTransportWaybillCargoReceivedTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoReceivedParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseTransportWaybillCargoReceivedTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.TransportWaybillCargoReceivedTitleParsingResponse EndParseTransportWaybillCargoReceivedTitle(System.IAsyncResult result) {
            return base.Channel.EndParseTransportWaybillCargoReceivedTitle(result);
        }
        
        private System.IAsyncResult OnBeginParseTransportWaybillCargoReceivedTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillCargoReceivedParsingRequest request = ((Midway.ObjectModel.TransportWaybillCargoReceivedParsingRequest)(inValues[1]));
            return this.BeginParseTransportWaybillCargoReceivedTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseTransportWaybillCargoReceivedTitle(System.IAsyncResult result) {
            Midway.ObjectModel.TransportWaybillCargoReceivedTitleParsingResponse retVal = this.EndParseTransportWaybillCargoReceivedTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseTransportWaybillCargoReceivedTitleCompleted(object state) {
            if ((this.ParseTransportWaybillCargoReceivedTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseTransportWaybillCargoReceivedTitleCompleted(this, new ParseTransportWaybillCargoReceivedTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseTransportWaybillCargoReceivedTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoReceivedParsingRequest request) {
            this.ParseTransportWaybillCargoReceivedTitleAsync(credentials, request, null);
        }
        
        public void ParseTransportWaybillCargoReceivedTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoReceivedParsingRequest request, object userState) {
            if ((this.onBeginParseTransportWaybillCargoReceivedTitleDelegate == null)) {
                this.onBeginParseTransportWaybillCargoReceivedTitleDelegate = new BeginOperationDelegate(this.OnBeginParseTransportWaybillCargoReceivedTitle);
            }
            if ((this.onEndParseTransportWaybillCargoReceivedTitleDelegate == null)) {
                this.onEndParseTransportWaybillCargoReceivedTitleDelegate = new EndOperationDelegate(this.OnEndParseTransportWaybillCargoReceivedTitle);
            }
            if ((this.onParseTransportWaybillCargoReceivedTitleCompletedDelegate == null)) {
                this.onParseTransportWaybillCargoReceivedTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseTransportWaybillCargoReceivedTitleCompleted);
            }
            base.InvokeAsync(this.onBeginParseTransportWaybillCargoReceivedTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndParseTransportWaybillCargoReceivedTitleDelegate, this.onParseTransportWaybillCargoReceivedTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.TransportWaybillCargoDeliveredTitleParsingResponse ParseTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoDeliveredParsingRequest request) {
            return base.Channel.ParseTransportWaybillCargoDeliveredTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoDeliveredParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseTransportWaybillCargoDeliveredTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.TransportWaybillCargoDeliveredTitleParsingResponse EndParseTransportWaybillCargoDeliveredTitle(System.IAsyncResult result) {
            return base.Channel.EndParseTransportWaybillCargoDeliveredTitle(result);
        }
        
        private System.IAsyncResult OnBeginParseTransportWaybillCargoDeliveredTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillCargoDeliveredParsingRequest request = ((Midway.ObjectModel.TransportWaybillCargoDeliveredParsingRequest)(inValues[1]));
            return this.BeginParseTransportWaybillCargoDeliveredTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseTransportWaybillCargoDeliveredTitle(System.IAsyncResult result) {
            Midway.ObjectModel.TransportWaybillCargoDeliveredTitleParsingResponse retVal = this.EndParseTransportWaybillCargoDeliveredTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseTransportWaybillCargoDeliveredTitleCompleted(object state) {
            if ((this.ParseTransportWaybillCargoDeliveredTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseTransportWaybillCargoDeliveredTitleCompleted(this, new ParseTransportWaybillCargoDeliveredTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseTransportWaybillCargoDeliveredTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoDeliveredParsingRequest request) {
            this.ParseTransportWaybillCargoDeliveredTitleAsync(credentials, request, null);
        }
        
        public void ParseTransportWaybillCargoDeliveredTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoDeliveredParsingRequest request, object userState) {
            if ((this.onBeginParseTransportWaybillCargoDeliveredTitleDelegate == null)) {
                this.onBeginParseTransportWaybillCargoDeliveredTitleDelegate = new BeginOperationDelegate(this.OnBeginParseTransportWaybillCargoDeliveredTitle);
            }
            if ((this.onEndParseTransportWaybillCargoDeliveredTitleDelegate == null)) {
                this.onEndParseTransportWaybillCargoDeliveredTitleDelegate = new EndOperationDelegate(this.OnEndParseTransportWaybillCargoDeliveredTitle);
            }
            if ((this.onParseTransportWaybillCargoDeliveredTitleCompletedDelegate == null)) {
                this.onParseTransportWaybillCargoDeliveredTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseTransportWaybillCargoDeliveredTitleCompleted);
            }
            base.InvokeAsync(this.onBeginParseTransportWaybillCargoDeliveredTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndParseTransportWaybillCargoDeliveredTitleDelegate, this.onParseTransportWaybillCargoDeliveredTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.TransportWaybillConsigneeTitleParsingResponse ParseTransportWaybillConsigneeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsigneeTitleParsingRequest request) {
            return base.Channel.ParseTransportWaybillConsigneeTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseTransportWaybillConsigneeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsigneeTitleParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseTransportWaybillConsigneeTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.TransportWaybillConsigneeTitleParsingResponse EndParseTransportWaybillConsigneeTitle(System.IAsyncResult result) {
            return base.Channel.EndParseTransportWaybillConsigneeTitle(result);
        }
        
        private System.IAsyncResult OnBeginParseTransportWaybillConsigneeTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillConsigneeTitleParsingRequest request = ((Midway.ObjectModel.TransportWaybillConsigneeTitleParsingRequest)(inValues[1]));
            return this.BeginParseTransportWaybillConsigneeTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseTransportWaybillConsigneeTitle(System.IAsyncResult result) {
            Midway.ObjectModel.TransportWaybillConsigneeTitleParsingResponse retVal = this.EndParseTransportWaybillConsigneeTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseTransportWaybillConsigneeTitleCompleted(object state) {
            if ((this.ParseTransportWaybillConsigneeTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseTransportWaybillConsigneeTitleCompleted(this, new ParseTransportWaybillConsigneeTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseTransportWaybillConsigneeTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsigneeTitleParsingRequest request) {
            this.ParseTransportWaybillConsigneeTitleAsync(credentials, request, null);
        }
        
        public void ParseTransportWaybillConsigneeTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsigneeTitleParsingRequest request, object userState) {
            if ((this.onBeginParseTransportWaybillConsigneeTitleDelegate == null)) {
                this.onBeginParseTransportWaybillConsigneeTitleDelegate = new BeginOperationDelegate(this.OnBeginParseTransportWaybillConsigneeTitle);
            }
            if ((this.onEndParseTransportWaybillConsigneeTitleDelegate == null)) {
                this.onEndParseTransportWaybillConsigneeTitleDelegate = new EndOperationDelegate(this.OnEndParseTransportWaybillConsigneeTitle);
            }
            if ((this.onParseTransportWaybillConsigneeTitleCompletedDelegate == null)) {
                this.onParseTransportWaybillConsigneeTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseTransportWaybillConsigneeTitleCompleted);
            }
            base.InvokeAsync(this.onBeginParseTransportWaybillConsigneeTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndParseTransportWaybillConsigneeTitleDelegate, this.onParseTransportWaybillConsigneeTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.TransportWaybillCarrierTitleParsingResponse ParseTransportWaybillCarrierTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCarrierTitleParsingRequest request) {
            return base.Channel.ParseTransportWaybillCarrierTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseTransportWaybillCarrierTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCarrierTitleParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseTransportWaybillCarrierTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.TransportWaybillCarrierTitleParsingResponse EndParseTransportWaybillCarrierTitle(System.IAsyncResult result) {
            return base.Channel.EndParseTransportWaybillCarrierTitle(result);
        }
        
        private System.IAsyncResult OnBeginParseTransportWaybillCarrierTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillCarrierTitleParsingRequest request = ((Midway.ObjectModel.TransportWaybillCarrierTitleParsingRequest)(inValues[1]));
            return this.BeginParseTransportWaybillCarrierTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseTransportWaybillCarrierTitle(System.IAsyncResult result) {
            Midway.ObjectModel.TransportWaybillCarrierTitleParsingResponse retVal = this.EndParseTransportWaybillCarrierTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseTransportWaybillCarrierTitleCompleted(object state) {
            if ((this.ParseTransportWaybillCarrierTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseTransportWaybillCarrierTitleCompleted(this, new ParseTransportWaybillCarrierTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseTransportWaybillCarrierTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCarrierTitleParsingRequest request) {
            this.ParseTransportWaybillCarrierTitleAsync(credentials, request, null);
        }
        
        public void ParseTransportWaybillCarrierTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCarrierTitleParsingRequest request, object userState) {
            if ((this.onBeginParseTransportWaybillCarrierTitleDelegate == null)) {
                this.onBeginParseTransportWaybillCarrierTitleDelegate = new BeginOperationDelegate(this.OnBeginParseTransportWaybillCarrierTitle);
            }
            if ((this.onEndParseTransportWaybillCarrierTitleDelegate == null)) {
                this.onEndParseTransportWaybillCarrierTitleDelegate = new EndOperationDelegate(this.OnEndParseTransportWaybillCarrierTitle);
            }
            if ((this.onParseTransportWaybillCarrierTitleCompletedDelegate == null)) {
                this.onParseTransportWaybillCarrierTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseTransportWaybillCarrierTitleCompleted);
            }
            base.InvokeAsync(this.onBeginParseTransportWaybillCarrierTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndParseTransportWaybillCarrierTitleDelegate, this.onParseTransportWaybillCarrierTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingResponse ParseTransportWaybillDeliveryPlaceChangeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingRequest request) {
            return base.Channel.ParseTransportWaybillDeliveryPlaceChangeTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseTransportWaybillDeliveryPlaceChangeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseTransportWaybillDeliveryPlaceChangeTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingResponse EndParseTransportWaybillDeliveryPlaceChangeTitle(System.IAsyncResult result) {
            return base.Channel.EndParseTransportWaybillDeliveryPlaceChangeTitle(result);
        }
        
        private System.IAsyncResult OnBeginParseTransportWaybillDeliveryPlaceChangeTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingRequest request = ((Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingRequest)(inValues[1]));
            return this.BeginParseTransportWaybillDeliveryPlaceChangeTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseTransportWaybillDeliveryPlaceChangeTitle(System.IAsyncResult result) {
            Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingResponse retVal = this.EndParseTransportWaybillDeliveryPlaceChangeTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseTransportWaybillDeliveryPlaceChangeTitleCompleted(object state) {
            if ((this.ParseTransportWaybillDeliveryPlaceChangeTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseTransportWaybillDeliveryPlaceChangeTitleCompleted(this, new ParseTransportWaybillDeliveryPlaceChangeTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseTransportWaybillDeliveryPlaceChangeTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingRequest request) {
            this.ParseTransportWaybillDeliveryPlaceChangeTitleAsync(credentials, request, null);
        }
        
        public void ParseTransportWaybillDeliveryPlaceChangeTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleParsingRequest request, object userState) {
            if ((this.onBeginParseTransportWaybillDeliveryPlaceChangeTitleDelegate == null)) {
                this.onBeginParseTransportWaybillDeliveryPlaceChangeTitleDelegate = new BeginOperationDelegate(this.OnBeginParseTransportWaybillDeliveryPlaceChangeTitle);
            }
            if ((this.onEndParseTransportWaybillDeliveryPlaceChangeTitleDelegate == null)) {
                this.onEndParseTransportWaybillDeliveryPlaceChangeTitleDelegate = new EndOperationDelegate(this.OnEndParseTransportWaybillDeliveryPlaceChangeTitle);
            }
            if ((this.onParseTransportWaybillDeliveryPlaceChangeTitleCompletedDelegate == null)) {
                this.onParseTransportWaybillDeliveryPlaceChangeTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseTransportWaybillDeliveryPlaceChangeTitleCompleted);
            }
            base.InvokeAsync(this.onBeginParseTransportWaybillDeliveryPlaceChangeTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndParseTransportWaybillDeliveryPlaceChangeTitleDelegate, this.onParseTransportWaybillDeliveryPlaceChangeTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingResponse ParseTransportWaybillDriverOrVehicleChangeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingRequest request) {
            return base.Channel.ParseTransportWaybillDriverOrVehicleChangeTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseTransportWaybillDriverOrVehicleChangeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseTransportWaybillDriverOrVehicleChangeTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingResponse EndParseTransportWaybillDriverOrVehicleChangeTitle(System.IAsyncResult result) {
            return base.Channel.EndParseTransportWaybillDriverOrVehicleChangeTitle(result);
        }
        
        private System.IAsyncResult OnBeginParseTransportWaybillDriverOrVehicleChangeTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingRequest request = ((Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingRequest)(inValues[1]));
            return this.BeginParseTransportWaybillDriverOrVehicleChangeTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseTransportWaybillDriverOrVehicleChangeTitle(System.IAsyncResult result) {
            Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingResponse retVal = this.EndParseTransportWaybillDriverOrVehicleChangeTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseTransportWaybillDriverOrVehicleChangeTitleCompleted(object state) {
            if ((this.ParseTransportWaybillDriverOrVehicleChangeTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseTransportWaybillDriverOrVehicleChangeTitleCompleted(this, new ParseTransportWaybillDriverOrVehicleChangeTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseTransportWaybillDriverOrVehicleChangeTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingRequest request) {
            this.ParseTransportWaybillDriverOrVehicleChangeTitleAsync(credentials, request, null);
        }
        
        public void ParseTransportWaybillDriverOrVehicleChangeTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleParsingRequest request, object userState) {
            if ((this.onBeginParseTransportWaybillDriverOrVehicleChangeTitleDelegate == null)) {
                this.onBeginParseTransportWaybillDriverOrVehicleChangeTitleDelegate = new BeginOperationDelegate(this.OnBeginParseTransportWaybillDriverOrVehicleChangeTitle);
            }
            if ((this.onEndParseTransportWaybillDriverOrVehicleChangeTitleDelegate == null)) {
                this.onEndParseTransportWaybillDriverOrVehicleChangeTitleDelegate = new EndOperationDelegate(this.OnEndParseTransportWaybillDriverOrVehicleChangeTitle);
            }
            if ((this.onParseTransportWaybillDriverOrVehicleChangeTitleCompletedDelegate == null)) {
                this.onParseTransportWaybillDriverOrVehicleChangeTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseTransportWaybillDriverOrVehicleChangeTitleCompleted);
            }
            base.InvokeAsync(this.onBeginParseTransportWaybillDriverOrVehicleChangeTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndParseTransportWaybillDriverOrVehicleChangeTitleDelegate, this.onParseTransportWaybillDriverOrVehicleChangeTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.TransportWaybillExpeditorTitleParsingResponse ParseTransportWaybillExpeditorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillExpeditorTitleParsingRequest request) {
            return base.Channel.ParseTransportWaybillExpeditorTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseTransportWaybillExpeditorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillExpeditorTitleParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseTransportWaybillExpeditorTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.TransportWaybillExpeditorTitleParsingResponse EndParseTransportWaybillExpeditorTitle(System.IAsyncResult result) {
            return base.Channel.EndParseTransportWaybillExpeditorTitle(result);
        }
        
        private System.IAsyncResult OnBeginParseTransportWaybillExpeditorTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillExpeditorTitleParsingRequest request = ((Midway.ObjectModel.TransportWaybillExpeditorTitleParsingRequest)(inValues[1]));
            return this.BeginParseTransportWaybillExpeditorTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseTransportWaybillExpeditorTitle(System.IAsyncResult result) {
            Midway.ObjectModel.TransportWaybillExpeditorTitleParsingResponse retVal = this.EndParseTransportWaybillExpeditorTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseTransportWaybillExpeditorTitleCompleted(object state) {
            if ((this.ParseTransportWaybillExpeditorTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseTransportWaybillExpeditorTitleCompleted(this, new ParseTransportWaybillExpeditorTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseTransportWaybillExpeditorTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillExpeditorTitleParsingRequest request) {
            this.ParseTransportWaybillExpeditorTitleAsync(credentials, request, null);
        }
        
        public void ParseTransportWaybillExpeditorTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillExpeditorTitleParsingRequest request, object userState) {
            if ((this.onBeginParseTransportWaybillExpeditorTitleDelegate == null)) {
                this.onBeginParseTransportWaybillExpeditorTitleDelegate = new BeginOperationDelegate(this.OnBeginParseTransportWaybillExpeditorTitle);
            }
            if ((this.onEndParseTransportWaybillExpeditorTitleDelegate == null)) {
                this.onEndParseTransportWaybillExpeditorTitleDelegate = new EndOperationDelegate(this.OnEndParseTransportWaybillExpeditorTitle);
            }
            if ((this.onParseTransportWaybillExpeditorTitleCompletedDelegate == null)) {
                this.onParseTransportWaybillExpeditorTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseTransportWaybillExpeditorTitleCompleted);
            }
            base.InvokeAsync(this.onBeginParseTransportWaybillExpeditorTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndParseTransportWaybillExpeditorTitleDelegate, this.onParseTransportWaybillExpeditorTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingResponse ParseGeneralTransferCorrectionSellerTitleV3(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingRequest request) {
            return base.Channel.ParseGeneralTransferCorrectionSellerTitleV3(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGeneralTransferCorrectionSellerTitleV3(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGeneralTransferCorrectionSellerTitleV3(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingResponse EndParseGeneralTransferCorrectionSellerTitleV3(System.IAsyncResult result) {
            return base.Channel.EndParseGeneralTransferCorrectionSellerTitleV3(result);
        }
        
        private System.IAsyncResult OnBeginParseGeneralTransferCorrectionSellerTitleV3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingRequest request = ((Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingRequest)(inValues[1]));
            return this.BeginParseGeneralTransferCorrectionSellerTitleV3(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseGeneralTransferCorrectionSellerTitleV3(System.IAsyncResult result) {
            Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingResponse retVal = this.EndParseGeneralTransferCorrectionSellerTitleV3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGeneralTransferCorrectionSellerTitleV3Completed(object state) {
            if ((this.ParseGeneralTransferCorrectionSellerTitleV3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGeneralTransferCorrectionSellerTitleV3Completed(this, new ParseGeneralTransferCorrectionSellerTitleV3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGeneralTransferCorrectionSellerTitleV3Async(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingRequest request) {
            this.ParseGeneralTransferCorrectionSellerTitleV3Async(credentials, request, null);
        }
        
        public void ParseGeneralTransferCorrectionSellerTitleV3Async(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3ParsingRequest request, object userState) {
            if ((this.onBeginParseGeneralTransferCorrectionSellerTitleV3Delegate == null)) {
                this.onBeginParseGeneralTransferCorrectionSellerTitleV3Delegate = new BeginOperationDelegate(this.OnBeginParseGeneralTransferCorrectionSellerTitleV3);
            }
            if ((this.onEndParseGeneralTransferCorrectionSellerTitleV3Delegate == null)) {
                this.onEndParseGeneralTransferCorrectionSellerTitleV3Delegate = new EndOperationDelegate(this.OnEndParseGeneralTransferCorrectionSellerTitleV3);
            }
            if ((this.onParseGeneralTransferCorrectionSellerTitleV3CompletedDelegate == null)) {
                this.onParseGeneralTransferCorrectionSellerTitleV3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGeneralTransferCorrectionSellerTitleV3Completed);
            }
            base.InvokeAsync(this.onBeginParseGeneralTransferCorrectionSellerTitleV3Delegate, new object[] {
                        credentials,
                        request}, this.onEndParseGeneralTransferCorrectionSellerTitleV3Delegate, this.onParseGeneralTransferCorrectionSellerTitleV3CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneratedContent GenerateWorksTransferSeller(string authToken, Midway.ObjectModel.WorksTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options) {
            return base.Channel.GenerateWorksTransferSeller(authToken, model, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateWorksTransferSeller(string authToken, Midway.ObjectModel.WorksTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateWorksTransferSeller(authToken, model, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneratedContent EndGenerateWorksTransferSeller(System.IAsyncResult result) {
            return base.Channel.EndGenerateWorksTransferSeller(result);
        }
        
        private System.IAsyncResult OnBeginGenerateWorksTransferSeller(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.WorksTransferSeller model = ((Midway.ObjectModel.WorksTransferSeller)(inValues[1]));
            Midway.ObjectModel.DocumentGenerationOptions options = ((Midway.ObjectModel.DocumentGenerationOptions)(inValues[2]));
            return this.BeginGenerateWorksTransferSeller(authToken, model, options, callback, asyncState);
        }
        
        private object[] OnEndGenerateWorksTransferSeller(System.IAsyncResult result) {
            Midway.ObjectModel.GeneratedContent retVal = this.EndGenerateWorksTransferSeller(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateWorksTransferSellerCompleted(object state) {
            if ((this.GenerateWorksTransferSellerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateWorksTransferSellerCompleted(this, new GenerateWorksTransferSellerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateWorksTransferSellerAsync(string authToken, Midway.ObjectModel.WorksTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options) {
            this.GenerateWorksTransferSellerAsync(authToken, model, options, null);
        }
        
        public void GenerateWorksTransferSellerAsync(string authToken, Midway.ObjectModel.WorksTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options, object userState) {
            if ((this.onBeginGenerateWorksTransferSellerDelegate == null)) {
                this.onBeginGenerateWorksTransferSellerDelegate = new BeginOperationDelegate(this.OnBeginGenerateWorksTransferSeller);
            }
            if ((this.onEndGenerateWorksTransferSellerDelegate == null)) {
                this.onEndGenerateWorksTransferSellerDelegate = new EndOperationDelegate(this.OnEndGenerateWorksTransferSeller);
            }
            if ((this.onGenerateWorksTransferSellerCompletedDelegate == null)) {
                this.onGenerateWorksTransferSellerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateWorksTransferSellerCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateWorksTransferSellerDelegate, new object[] {
                        authToken,
                        model,
                        options}, this.onEndGenerateWorksTransferSellerDelegate, this.onGenerateWorksTransferSellerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneratedContent GenerateGoodsTransferSeller(string authToken, Midway.ObjectModel.GoodsTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options) {
            return base.Channel.GenerateGoodsTransferSeller(authToken, model, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGoodsTransferSeller(string authToken, Midway.ObjectModel.GoodsTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGoodsTransferSeller(authToken, model, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneratedContent EndGenerateGoodsTransferSeller(System.IAsyncResult result) {
            return base.Channel.EndGenerateGoodsTransferSeller(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGoodsTransferSeller(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.GoodsTransferSeller model = ((Midway.ObjectModel.GoodsTransferSeller)(inValues[1]));
            Midway.ObjectModel.DocumentGenerationOptions options = ((Midway.ObjectModel.DocumentGenerationOptions)(inValues[2]));
            return this.BeginGenerateGoodsTransferSeller(authToken, model, options, callback, asyncState);
        }
        
        private object[] OnEndGenerateGoodsTransferSeller(System.IAsyncResult result) {
            Midway.ObjectModel.GeneratedContent retVal = this.EndGenerateGoodsTransferSeller(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGoodsTransferSellerCompleted(object state) {
            if ((this.GenerateGoodsTransferSellerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGoodsTransferSellerCompleted(this, new GenerateGoodsTransferSellerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGoodsTransferSellerAsync(string authToken, Midway.ObjectModel.GoodsTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options) {
            this.GenerateGoodsTransferSellerAsync(authToken, model, options, null);
        }
        
        public void GenerateGoodsTransferSellerAsync(string authToken, Midway.ObjectModel.GoodsTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options, object userState) {
            if ((this.onBeginGenerateGoodsTransferSellerDelegate == null)) {
                this.onBeginGenerateGoodsTransferSellerDelegate = new BeginOperationDelegate(this.OnBeginGenerateGoodsTransferSeller);
            }
            if ((this.onEndGenerateGoodsTransferSellerDelegate == null)) {
                this.onEndGenerateGoodsTransferSellerDelegate = new EndOperationDelegate(this.OnEndGenerateGoodsTransferSeller);
            }
            if ((this.onGenerateGoodsTransferSellerCompletedDelegate == null)) {
                this.onGenerateGoodsTransferSellerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGoodsTransferSellerCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateGoodsTransferSellerDelegate, new object[] {
                        authToken,
                        model,
                        options}, this.onEndGenerateGoodsTransferSellerDelegate, this.onGenerateGoodsTransferSellerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneratedContent GenerateGeneralTransferSeller(string authToken, Midway.ObjectModel.GeneralTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options) {
            return base.Channel.GenerateGeneralTransferSeller(authToken, model, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGeneralTransferSeller(string authToken, Midway.ObjectModel.GeneralTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGeneralTransferSeller(authToken, model, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneratedContent EndGenerateGeneralTransferSeller(System.IAsyncResult result) {
            return base.Channel.EndGenerateGeneralTransferSeller(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGeneralTransferSeller(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.GeneralTransferSeller model = ((Midway.ObjectModel.GeneralTransferSeller)(inValues[1]));
            Midway.ObjectModel.DocumentGenerationOptions options = ((Midway.ObjectModel.DocumentGenerationOptions)(inValues[2]));
            return this.BeginGenerateGeneralTransferSeller(authToken, model, options, callback, asyncState);
        }
        
        private object[] OnEndGenerateGeneralTransferSeller(System.IAsyncResult result) {
            Midway.ObjectModel.GeneratedContent retVal = this.EndGenerateGeneralTransferSeller(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGeneralTransferSellerCompleted(object state) {
            if ((this.GenerateGeneralTransferSellerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGeneralTransferSellerCompleted(this, new GenerateGeneralTransferSellerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGeneralTransferSellerAsync(string authToken, Midway.ObjectModel.GeneralTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options) {
            this.GenerateGeneralTransferSellerAsync(authToken, model, options, null);
        }
        
        public void GenerateGeneralTransferSellerAsync(string authToken, Midway.ObjectModel.GeneralTransferSeller model, Midway.ObjectModel.DocumentGenerationOptions options, object userState) {
            if ((this.onBeginGenerateGeneralTransferSellerDelegate == null)) {
                this.onBeginGenerateGeneralTransferSellerDelegate = new BeginOperationDelegate(this.OnBeginGenerateGeneralTransferSeller);
            }
            if ((this.onEndGenerateGeneralTransferSellerDelegate == null)) {
                this.onEndGenerateGeneralTransferSellerDelegate = new EndOperationDelegate(this.OnEndGenerateGeneralTransferSeller);
            }
            if ((this.onGenerateGeneralTransferSellerCompletedDelegate == null)) {
                this.onGenerateGeneralTransferSellerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGeneralTransferSellerCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateGeneralTransferSellerDelegate, new object[] {
                        authToken,
                        model,
                        options}, this.onEndGenerateGeneralTransferSellerDelegate, this.onGenerateGeneralTransferSellerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateGeneralTransferSellerV2(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferSellerV2GeneratingRequest request) {
            return base.Channel.GenerateGeneralTransferSellerV2(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGeneralTransferSellerV2(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferSellerV2GeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGeneralTransferSellerV2(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateGeneralTransferSellerV2(System.IAsyncResult result) {
            return base.Channel.EndGenerateGeneralTransferSellerV2(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGeneralTransferSellerV2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GeneralTransferSellerV2GeneratingRequest request = ((Midway.ObjectModel.GeneralTransferSellerV2GeneratingRequest)(inValues[1]));
            return this.BeginGenerateGeneralTransferSellerV2(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateGeneralTransferSellerV2(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateGeneralTransferSellerV2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGeneralTransferSellerV2Completed(object state) {
            if ((this.GenerateGeneralTransferSellerV2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGeneralTransferSellerV2Completed(this, new GenerateGeneralTransferSellerV2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGeneralTransferSellerV2Async(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferSellerV2GeneratingRequest request) {
            this.GenerateGeneralTransferSellerV2Async(credentials, request, null);
        }
        
        public void GenerateGeneralTransferSellerV2Async(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferSellerV2GeneratingRequest request, object userState) {
            if ((this.onBeginGenerateGeneralTransferSellerV2Delegate == null)) {
                this.onBeginGenerateGeneralTransferSellerV2Delegate = new BeginOperationDelegate(this.OnBeginGenerateGeneralTransferSellerV2);
            }
            if ((this.onEndGenerateGeneralTransferSellerV2Delegate == null)) {
                this.onEndGenerateGeneralTransferSellerV2Delegate = new EndOperationDelegate(this.OnEndGenerateGeneralTransferSellerV2);
            }
            if ((this.onGenerateGeneralTransferSellerV2CompletedDelegate == null)) {
                this.onGenerateGeneralTransferSellerV2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGeneralTransferSellerV2Completed);
            }
            base.InvokeAsync(this.onBeginGenerateGeneralTransferSellerV2Delegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateGeneralTransferSellerV2Delegate, this.onGenerateGeneralTransferSellerV2CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneratedContent GenerateGeneralTransferCorrectionSeller(string authToken, Midway.ObjectModel.GeneralTransferCorrectionSeller model, Midway.ObjectModel.DocumentGenerationOptions options) {
            return base.Channel.GenerateGeneralTransferCorrectionSeller(authToken, model, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGeneralTransferCorrectionSeller(string authToken, Midway.ObjectModel.GeneralTransferCorrectionSeller model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGeneralTransferCorrectionSeller(authToken, model, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneratedContent EndGenerateGeneralTransferCorrectionSeller(System.IAsyncResult result) {
            return base.Channel.EndGenerateGeneralTransferCorrectionSeller(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGeneralTransferCorrectionSeller(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.GeneralTransferCorrectionSeller model = ((Midway.ObjectModel.GeneralTransferCorrectionSeller)(inValues[1]));
            Midway.ObjectModel.DocumentGenerationOptions options = ((Midway.ObjectModel.DocumentGenerationOptions)(inValues[2]));
            return this.BeginGenerateGeneralTransferCorrectionSeller(authToken, model, options, callback, asyncState);
        }
        
        private object[] OnEndGenerateGeneralTransferCorrectionSeller(System.IAsyncResult result) {
            Midway.ObjectModel.GeneratedContent retVal = this.EndGenerateGeneralTransferCorrectionSeller(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGeneralTransferCorrectionSellerCompleted(object state) {
            if ((this.GenerateGeneralTransferCorrectionSellerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGeneralTransferCorrectionSellerCompleted(this, new GenerateGeneralTransferCorrectionSellerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGeneralTransferCorrectionSellerAsync(string authToken, Midway.ObjectModel.GeneralTransferCorrectionSeller model, Midway.ObjectModel.DocumentGenerationOptions options) {
            this.GenerateGeneralTransferCorrectionSellerAsync(authToken, model, options, null);
        }
        
        public void GenerateGeneralTransferCorrectionSellerAsync(string authToken, Midway.ObjectModel.GeneralTransferCorrectionSeller model, Midway.ObjectModel.DocumentGenerationOptions options, object userState) {
            if ((this.onBeginGenerateGeneralTransferCorrectionSellerDelegate == null)) {
                this.onBeginGenerateGeneralTransferCorrectionSellerDelegate = new BeginOperationDelegate(this.OnBeginGenerateGeneralTransferCorrectionSeller);
            }
            if ((this.onEndGenerateGeneralTransferCorrectionSellerDelegate == null)) {
                this.onEndGenerateGeneralTransferCorrectionSellerDelegate = new EndOperationDelegate(this.OnEndGenerateGeneralTransferCorrectionSeller);
            }
            if ((this.onGenerateGeneralTransferCorrectionSellerCompletedDelegate == null)) {
                this.onGenerateGeneralTransferCorrectionSellerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGeneralTransferCorrectionSellerCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateGeneralTransferCorrectionSellerDelegate, new object[] {
                        authToken,
                        model,
                        options}, this.onEndGenerateGeneralTransferCorrectionSellerDelegate, this.onGenerateGeneralTransferCorrectionSellerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateGeneralTransferCorrectionSellerTitleV3(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3GeneratingRequest request) {
            return base.Channel.GenerateGeneralTransferCorrectionSellerTitleV3(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGeneralTransferCorrectionSellerTitleV3(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3GeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGeneralTransferCorrectionSellerTitleV3(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateGeneralTransferCorrectionSellerTitleV3(System.IAsyncResult result) {
            return base.Channel.EndGenerateGeneralTransferCorrectionSellerTitleV3(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGeneralTransferCorrectionSellerTitleV3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3GeneratingRequest request = ((Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3GeneratingRequest)(inValues[1]));
            return this.BeginGenerateGeneralTransferCorrectionSellerTitleV3(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateGeneralTransferCorrectionSellerTitleV3(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateGeneralTransferCorrectionSellerTitleV3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGeneralTransferCorrectionSellerTitleV3Completed(object state) {
            if ((this.GenerateGeneralTransferCorrectionSellerTitleV3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGeneralTransferCorrectionSellerTitleV3Completed(this, new GenerateGeneralTransferCorrectionSellerTitleV3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGeneralTransferCorrectionSellerTitleV3Async(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3GeneratingRequest request) {
            this.GenerateGeneralTransferCorrectionSellerTitleV3Async(credentials, request, null);
        }
        
        public void GenerateGeneralTransferCorrectionSellerTitleV3Async(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionSellerTitleV3GeneratingRequest request, object userState) {
            if ((this.onBeginGenerateGeneralTransferCorrectionSellerTitleV3Delegate == null)) {
                this.onBeginGenerateGeneralTransferCorrectionSellerTitleV3Delegate = new BeginOperationDelegate(this.OnBeginGenerateGeneralTransferCorrectionSellerTitleV3);
            }
            if ((this.onEndGenerateGeneralTransferCorrectionSellerTitleV3Delegate == null)) {
                this.onEndGenerateGeneralTransferCorrectionSellerTitleV3Delegate = new EndOperationDelegate(this.OnEndGenerateGeneralTransferCorrectionSellerTitleV3);
            }
            if ((this.onGenerateGeneralTransferCorrectionSellerTitleV3CompletedDelegate == null)) {
                this.onGenerateGeneralTransferCorrectionSellerTitleV3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGeneralTransferCorrectionSellerTitleV3Completed);
            }
            base.InvokeAsync(this.onBeginGenerateGeneralTransferCorrectionSellerTitleV3Delegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateGeneralTransferCorrectionSellerTitleV3Delegate, this.onGenerateGeneralTransferCorrectionSellerTitleV3CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneratedContent GenerateWorksTransferBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.WorksTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options) {
            return base.Channel.GenerateWorksTransferBuyer(authToken, boxId, documentId, model, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateWorksTransferBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.WorksTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateWorksTransferBuyer(authToken, boxId, documentId, model, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneratedContent EndGenerateWorksTransferBuyer(System.IAsyncResult result) {
            return base.Channel.EndGenerateWorksTransferBuyer(result);
        }
        
        private System.IAsyncResult OnBeginGenerateWorksTransferBuyer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            Midway.ObjectModel.WorksTransferBuyer model = ((Midway.ObjectModel.WorksTransferBuyer)(inValues[3]));
            Midway.ObjectModel.DocumentGenerationOptions options = ((Midway.ObjectModel.DocumentGenerationOptions)(inValues[4]));
            return this.BeginGenerateWorksTransferBuyer(authToken, boxId, documentId, model, options, callback, asyncState);
        }
        
        private object[] OnEndGenerateWorksTransferBuyer(System.IAsyncResult result) {
            Midway.ObjectModel.GeneratedContent retVal = this.EndGenerateWorksTransferBuyer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateWorksTransferBuyerCompleted(object state) {
            if ((this.GenerateWorksTransferBuyerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateWorksTransferBuyerCompleted(this, new GenerateWorksTransferBuyerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateWorksTransferBuyerAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.WorksTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options) {
            this.GenerateWorksTransferBuyerAsync(authToken, boxId, documentId, model, options, null);
        }
        
        public void GenerateWorksTransferBuyerAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.WorksTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options, object userState) {
            if ((this.onBeginGenerateWorksTransferBuyerDelegate == null)) {
                this.onBeginGenerateWorksTransferBuyerDelegate = new BeginOperationDelegate(this.OnBeginGenerateWorksTransferBuyer);
            }
            if ((this.onEndGenerateWorksTransferBuyerDelegate == null)) {
                this.onEndGenerateWorksTransferBuyerDelegate = new EndOperationDelegate(this.OnEndGenerateWorksTransferBuyer);
            }
            if ((this.onGenerateWorksTransferBuyerCompletedDelegate == null)) {
                this.onGenerateWorksTransferBuyerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateWorksTransferBuyerCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateWorksTransferBuyerDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        model,
                        options}, this.onEndGenerateWorksTransferBuyerDelegate, this.onGenerateWorksTransferBuyerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneratedContent GenerateGoodsTransferBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.GoodsTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options) {
            return base.Channel.GenerateGoodsTransferBuyer(authToken, boxId, documentId, model, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGoodsTransferBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.GoodsTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGoodsTransferBuyer(authToken, boxId, documentId, model, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneratedContent EndGenerateGoodsTransferBuyer(System.IAsyncResult result) {
            return base.Channel.EndGenerateGoodsTransferBuyer(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGoodsTransferBuyer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            Midway.ObjectModel.GoodsTransferBuyer model = ((Midway.ObjectModel.GoodsTransferBuyer)(inValues[3]));
            Midway.ObjectModel.DocumentGenerationOptions options = ((Midway.ObjectModel.DocumentGenerationOptions)(inValues[4]));
            return this.BeginGenerateGoodsTransferBuyer(authToken, boxId, documentId, model, options, callback, asyncState);
        }
        
        private object[] OnEndGenerateGoodsTransferBuyer(System.IAsyncResult result) {
            Midway.ObjectModel.GeneratedContent retVal = this.EndGenerateGoodsTransferBuyer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGoodsTransferBuyerCompleted(object state) {
            if ((this.GenerateGoodsTransferBuyerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGoodsTransferBuyerCompleted(this, new GenerateGoodsTransferBuyerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGoodsTransferBuyerAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.GoodsTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options) {
            this.GenerateGoodsTransferBuyerAsync(authToken, boxId, documentId, model, options, null);
        }
        
        public void GenerateGoodsTransferBuyerAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.GoodsTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options, object userState) {
            if ((this.onBeginGenerateGoodsTransferBuyerDelegate == null)) {
                this.onBeginGenerateGoodsTransferBuyerDelegate = new BeginOperationDelegate(this.OnBeginGenerateGoodsTransferBuyer);
            }
            if ((this.onEndGenerateGoodsTransferBuyerDelegate == null)) {
                this.onEndGenerateGoodsTransferBuyerDelegate = new EndOperationDelegate(this.OnEndGenerateGoodsTransferBuyer);
            }
            if ((this.onGenerateGoodsTransferBuyerCompletedDelegate == null)) {
                this.onGenerateGoodsTransferBuyerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGoodsTransferBuyerCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateGoodsTransferBuyerDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        model,
                        options}, this.onEndGenerateGoodsTransferBuyerDelegate, this.onGenerateGoodsTransferBuyerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneratedContent GenerateGeneralTransferBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.GeneralTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options) {
            return base.Channel.GenerateGeneralTransferBuyer(authToken, boxId, documentId, model, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGeneralTransferBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.GeneralTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGeneralTransferBuyer(authToken, boxId, documentId, model, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneratedContent EndGenerateGeneralTransferBuyer(System.IAsyncResult result) {
            return base.Channel.EndGenerateGeneralTransferBuyer(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGeneralTransferBuyer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            Midway.ObjectModel.GeneralTransferBuyer model = ((Midway.ObjectModel.GeneralTransferBuyer)(inValues[3]));
            Midway.ObjectModel.DocumentGenerationOptions options = ((Midway.ObjectModel.DocumentGenerationOptions)(inValues[4]));
            return this.BeginGenerateGeneralTransferBuyer(authToken, boxId, documentId, model, options, callback, asyncState);
        }
        
        private object[] OnEndGenerateGeneralTransferBuyer(System.IAsyncResult result) {
            Midway.ObjectModel.GeneratedContent retVal = this.EndGenerateGeneralTransferBuyer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGeneralTransferBuyerCompleted(object state) {
            if ((this.GenerateGeneralTransferBuyerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGeneralTransferBuyerCompleted(this, new GenerateGeneralTransferBuyerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGeneralTransferBuyerAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.GeneralTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options) {
            this.GenerateGeneralTransferBuyerAsync(authToken, boxId, documentId, model, options, null);
        }
        
        public void GenerateGeneralTransferBuyerAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.GeneralTransferBuyer model, Midway.ObjectModel.DocumentGenerationOptions options, object userState) {
            if ((this.onBeginGenerateGeneralTransferBuyerDelegate == null)) {
                this.onBeginGenerateGeneralTransferBuyerDelegate = new BeginOperationDelegate(this.OnBeginGenerateGeneralTransferBuyer);
            }
            if ((this.onEndGenerateGeneralTransferBuyerDelegate == null)) {
                this.onEndGenerateGeneralTransferBuyerDelegate = new EndOperationDelegate(this.OnEndGenerateGeneralTransferBuyer);
            }
            if ((this.onGenerateGeneralTransferBuyerCompletedDelegate == null)) {
                this.onGenerateGeneralTransferBuyerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGeneralTransferBuyerCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateGeneralTransferBuyerDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        model,
                        options}, this.onEndGenerateGeneralTransferBuyerDelegate, this.onGenerateGeneralTransferBuyerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateGeneralTransferBuyerV2(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferBuyerV2GeneratingRequest request) {
            return base.Channel.GenerateGeneralTransferBuyerV2(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGeneralTransferBuyerV2(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferBuyerV2GeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGeneralTransferBuyerV2(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateGeneralTransferBuyerV2(System.IAsyncResult result) {
            return base.Channel.EndGenerateGeneralTransferBuyerV2(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGeneralTransferBuyerV2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GeneralTransferBuyerV2GeneratingRequest request = ((Midway.ObjectModel.GeneralTransferBuyerV2GeneratingRequest)(inValues[1]));
            return this.BeginGenerateGeneralTransferBuyerV2(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateGeneralTransferBuyerV2(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateGeneralTransferBuyerV2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGeneralTransferBuyerV2Completed(object state) {
            if ((this.GenerateGeneralTransferBuyerV2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGeneralTransferBuyerV2Completed(this, new GenerateGeneralTransferBuyerV2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGeneralTransferBuyerV2Async(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferBuyerV2GeneratingRequest request) {
            this.GenerateGeneralTransferBuyerV2Async(credentials, request, null);
        }
        
        public void GenerateGeneralTransferBuyerV2Async(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferBuyerV2GeneratingRequest request, object userState) {
            if ((this.onBeginGenerateGeneralTransferBuyerV2Delegate == null)) {
                this.onBeginGenerateGeneralTransferBuyerV2Delegate = new BeginOperationDelegate(this.OnBeginGenerateGeneralTransferBuyerV2);
            }
            if ((this.onEndGenerateGeneralTransferBuyerV2Delegate == null)) {
                this.onEndGenerateGeneralTransferBuyerV2Delegate = new EndOperationDelegate(this.OnEndGenerateGeneralTransferBuyerV2);
            }
            if ((this.onGenerateGeneralTransferBuyerV2CompletedDelegate == null)) {
                this.onGenerateGeneralTransferBuyerV2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGeneralTransferBuyerV2Completed);
            }
            base.InvokeAsync(this.onBeginGenerateGeneralTransferBuyerV2Delegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateGeneralTransferBuyerV2Delegate, this.onGenerateGeneralTransferBuyerV2CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GeneratedContent GenerateGeneralTransferCorrectionBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.GeneralTransferCorrectionBuyer model, Midway.ObjectModel.DocumentGenerationOptions options) {
            return base.Channel.GenerateGeneralTransferCorrectionBuyer(authToken, boxId, documentId, model, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGeneralTransferCorrectionBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.GeneralTransferCorrectionBuyer model, Midway.ObjectModel.DocumentGenerationOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGeneralTransferCorrectionBuyer(authToken, boxId, documentId, model, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GeneratedContent EndGenerateGeneralTransferCorrectionBuyer(System.IAsyncResult result) {
            return base.Channel.EndGenerateGeneralTransferCorrectionBuyer(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGeneralTransferCorrectionBuyer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            Midway.ObjectModel.GeneralTransferCorrectionBuyer model = ((Midway.ObjectModel.GeneralTransferCorrectionBuyer)(inValues[3]));
            Midway.ObjectModel.DocumentGenerationOptions options = ((Midway.ObjectModel.DocumentGenerationOptions)(inValues[4]));
            return this.BeginGenerateGeneralTransferCorrectionBuyer(authToken, boxId, documentId, model, options, callback, asyncState);
        }
        
        private object[] OnEndGenerateGeneralTransferCorrectionBuyer(System.IAsyncResult result) {
            Midway.ObjectModel.GeneratedContent retVal = this.EndGenerateGeneralTransferCorrectionBuyer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGeneralTransferCorrectionBuyerCompleted(object state) {
            if ((this.GenerateGeneralTransferCorrectionBuyerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGeneralTransferCorrectionBuyerCompleted(this, new GenerateGeneralTransferCorrectionBuyerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGeneralTransferCorrectionBuyerAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.GeneralTransferCorrectionBuyer model, Midway.ObjectModel.DocumentGenerationOptions options) {
            this.GenerateGeneralTransferCorrectionBuyerAsync(authToken, boxId, documentId, model, options, null);
        }
        
        public void GenerateGeneralTransferCorrectionBuyerAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.GeneralTransferCorrectionBuyer model, Midway.ObjectModel.DocumentGenerationOptions options, object userState) {
            if ((this.onBeginGenerateGeneralTransferCorrectionBuyerDelegate == null)) {
                this.onBeginGenerateGeneralTransferCorrectionBuyerDelegate = new BeginOperationDelegate(this.OnBeginGenerateGeneralTransferCorrectionBuyer);
            }
            if ((this.onEndGenerateGeneralTransferCorrectionBuyerDelegate == null)) {
                this.onEndGenerateGeneralTransferCorrectionBuyerDelegate = new EndOperationDelegate(this.OnEndGenerateGeneralTransferCorrectionBuyer);
            }
            if ((this.onGenerateGeneralTransferCorrectionBuyerCompletedDelegate == null)) {
                this.onGenerateGeneralTransferCorrectionBuyerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGeneralTransferCorrectionBuyerCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateGeneralTransferCorrectionBuyerDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        model,
                        options}, this.onEndGenerateGeneralTransferCorrectionBuyerDelegate, this.onGenerateGeneralTransferCorrectionBuyerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateGeneralTransferCorrectionBuyerV3(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3GeneratingRequest request) {
            return base.Channel.GenerateGeneralTransferCorrectionBuyerV3(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGeneralTransferCorrectionBuyerV3(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3GeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGeneralTransferCorrectionBuyerV3(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateGeneralTransferCorrectionBuyerV3(System.IAsyncResult result) {
            return base.Channel.EndGenerateGeneralTransferCorrectionBuyerV3(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGeneralTransferCorrectionBuyerV3(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3GeneratingRequest request = ((Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3GeneratingRequest)(inValues[1]));
            return this.BeginGenerateGeneralTransferCorrectionBuyerV3(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateGeneralTransferCorrectionBuyerV3(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateGeneralTransferCorrectionBuyerV3(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGeneralTransferCorrectionBuyerV3Completed(object state) {
            if ((this.GenerateGeneralTransferCorrectionBuyerV3Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGeneralTransferCorrectionBuyerV3Completed(this, new GenerateGeneralTransferCorrectionBuyerV3CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGeneralTransferCorrectionBuyerV3Async(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3GeneratingRequest request) {
            this.GenerateGeneralTransferCorrectionBuyerV3Async(credentials, request, null);
        }
        
        public void GenerateGeneralTransferCorrectionBuyerV3Async(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GeneralTransferCorrectionV3.GeneralTransferCorrectionBuyerTitleV3GeneratingRequest request, object userState) {
            if ((this.onBeginGenerateGeneralTransferCorrectionBuyerV3Delegate == null)) {
                this.onBeginGenerateGeneralTransferCorrectionBuyerV3Delegate = new BeginOperationDelegate(this.OnBeginGenerateGeneralTransferCorrectionBuyerV3);
            }
            if ((this.onEndGenerateGeneralTransferCorrectionBuyerV3Delegate == null)) {
                this.onEndGenerateGeneralTransferCorrectionBuyerV3Delegate = new EndOperationDelegate(this.OnEndGenerateGeneralTransferCorrectionBuyerV3);
            }
            if ((this.onGenerateGeneralTransferCorrectionBuyerV3CompletedDelegate == null)) {
                this.onGenerateGeneralTransferCorrectionBuyerV3CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGeneralTransferCorrectionBuyerV3Completed);
            }
            base.InvokeAsync(this.onBeginGenerateGeneralTransferCorrectionBuyerV3Delegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateGeneralTransferCorrectionBuyerV3Delegate, this.onGenerateGeneralTransferCorrectionBuyerV3CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsignorTitleGeneratingRequest request) {
            return base.Channel.GenerateTransportWaybillConsignorTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsignorTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateTransportWaybillConsignorTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillConsignorTitle(System.IAsyncResult result) {
            return base.Channel.EndGenerateTransportWaybillConsignorTitle(result);
        }
        
        private System.IAsyncResult OnBeginGenerateTransportWaybillConsignorTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillConsignorTitleGeneratingRequest request = ((Midway.ObjectModel.TransportWaybillConsignorTitleGeneratingRequest)(inValues[1]));
            return this.BeginGenerateTransportWaybillConsignorTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateTransportWaybillConsignorTitle(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateTransportWaybillConsignorTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateTransportWaybillConsignorTitleCompleted(object state) {
            if ((this.GenerateTransportWaybillConsignorTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateTransportWaybillConsignorTitleCompleted(this, new GenerateTransportWaybillConsignorTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateTransportWaybillConsignorTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsignorTitleGeneratingRequest request) {
            this.GenerateTransportWaybillConsignorTitleAsync(credentials, request, null);
        }
        
        public void GenerateTransportWaybillConsignorTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsignorTitleGeneratingRequest request, object userState) {
            if ((this.onBeginGenerateTransportWaybillConsignorTitleDelegate == null)) {
                this.onBeginGenerateTransportWaybillConsignorTitleDelegate = new BeginOperationDelegate(this.OnBeginGenerateTransportWaybillConsignorTitle);
            }
            if ((this.onEndGenerateTransportWaybillConsignorTitleDelegate == null)) {
                this.onEndGenerateTransportWaybillConsignorTitleDelegate = new EndOperationDelegate(this.OnEndGenerateTransportWaybillConsignorTitle);
            }
            if ((this.onGenerateTransportWaybillConsignorTitleCompletedDelegate == null)) {
                this.onGenerateTransportWaybillConsignorTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateTransportWaybillConsignorTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateTransportWaybillConsignorTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateTransportWaybillConsignorTitleDelegate, this.onGenerateTransportWaybillConsignorTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillCargoReceivedTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoReceivedTitleGeneratingRequest request) {
            return base.Channel.GenerateTransportWaybillCargoReceivedTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateTransportWaybillCargoReceivedTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoReceivedTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateTransportWaybillCargoReceivedTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillCargoReceivedTitle(System.IAsyncResult result) {
            return base.Channel.EndGenerateTransportWaybillCargoReceivedTitle(result);
        }
        
        private System.IAsyncResult OnBeginGenerateTransportWaybillCargoReceivedTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillCargoReceivedTitleGeneratingRequest request = ((Midway.ObjectModel.TransportWaybillCargoReceivedTitleGeneratingRequest)(inValues[1]));
            return this.BeginGenerateTransportWaybillCargoReceivedTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateTransportWaybillCargoReceivedTitle(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateTransportWaybillCargoReceivedTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateTransportWaybillCargoReceivedTitleCompleted(object state) {
            if ((this.GenerateTransportWaybillCargoReceivedTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateTransportWaybillCargoReceivedTitleCompleted(this, new GenerateTransportWaybillCargoReceivedTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateTransportWaybillCargoReceivedTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoReceivedTitleGeneratingRequest request) {
            this.GenerateTransportWaybillCargoReceivedTitleAsync(credentials, request, null);
        }
        
        public void GenerateTransportWaybillCargoReceivedTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoReceivedTitleGeneratingRequest request, object userState) {
            if ((this.onBeginGenerateTransportWaybillCargoReceivedTitleDelegate == null)) {
                this.onBeginGenerateTransportWaybillCargoReceivedTitleDelegate = new BeginOperationDelegate(this.OnBeginGenerateTransportWaybillCargoReceivedTitle);
            }
            if ((this.onEndGenerateTransportWaybillCargoReceivedTitleDelegate == null)) {
                this.onEndGenerateTransportWaybillCargoReceivedTitleDelegate = new EndOperationDelegate(this.OnEndGenerateTransportWaybillCargoReceivedTitle);
            }
            if ((this.onGenerateTransportWaybillCargoReceivedTitleCompletedDelegate == null)) {
                this.onGenerateTransportWaybillCargoReceivedTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateTransportWaybillCargoReceivedTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateTransportWaybillCargoReceivedTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateTransportWaybillCargoReceivedTitleDelegate, this.onGenerateTransportWaybillCargoReceivedTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoDeliveredTitleGeneratingRequest request) {
            return base.Channel.GenerateTransportWaybillCargoDeliveredTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoDeliveredTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateTransportWaybillCargoDeliveredTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillCargoDeliveredTitle(System.IAsyncResult result) {
            return base.Channel.EndGenerateTransportWaybillCargoDeliveredTitle(result);
        }
        
        private System.IAsyncResult OnBeginGenerateTransportWaybillCargoDeliveredTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillCargoDeliveredTitleGeneratingRequest request = ((Midway.ObjectModel.TransportWaybillCargoDeliveredTitleGeneratingRequest)(inValues[1]));
            return this.BeginGenerateTransportWaybillCargoDeliveredTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateTransportWaybillCargoDeliveredTitle(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateTransportWaybillCargoDeliveredTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateTransportWaybillCargoDeliveredTitleCompleted(object state) {
            if ((this.GenerateTransportWaybillCargoDeliveredTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateTransportWaybillCargoDeliveredTitleCompleted(this, new GenerateTransportWaybillCargoDeliveredTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateTransportWaybillCargoDeliveredTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoDeliveredTitleGeneratingRequest request) {
            this.GenerateTransportWaybillCargoDeliveredTitleAsync(credentials, request, null);
        }
        
        public void GenerateTransportWaybillCargoDeliveredTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCargoDeliveredTitleGeneratingRequest request, object userState) {
            if ((this.onBeginGenerateTransportWaybillCargoDeliveredTitleDelegate == null)) {
                this.onBeginGenerateTransportWaybillCargoDeliveredTitleDelegate = new BeginOperationDelegate(this.OnBeginGenerateTransportWaybillCargoDeliveredTitle);
            }
            if ((this.onEndGenerateTransportWaybillCargoDeliveredTitleDelegate == null)) {
                this.onEndGenerateTransportWaybillCargoDeliveredTitleDelegate = new EndOperationDelegate(this.OnEndGenerateTransportWaybillCargoDeliveredTitle);
            }
            if ((this.onGenerateTransportWaybillCargoDeliveredTitleCompletedDelegate == null)) {
                this.onGenerateTransportWaybillCargoDeliveredTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateTransportWaybillCargoDeliveredTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateTransportWaybillCargoDeliveredTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateTransportWaybillCargoDeliveredTitleDelegate, this.onGenerateTransportWaybillCargoDeliveredTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillConsigneeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsigneeTitleGeneratingRequest request) {
            return base.Channel.GenerateTransportWaybillConsigneeTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateTransportWaybillConsigneeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsigneeTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateTransportWaybillConsigneeTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillConsigneeTitle(System.IAsyncResult result) {
            return base.Channel.EndGenerateTransportWaybillConsigneeTitle(result);
        }
        
        private System.IAsyncResult OnBeginGenerateTransportWaybillConsigneeTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillConsigneeTitleGeneratingRequest request = ((Midway.ObjectModel.TransportWaybillConsigneeTitleGeneratingRequest)(inValues[1]));
            return this.BeginGenerateTransportWaybillConsigneeTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateTransportWaybillConsigneeTitle(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateTransportWaybillConsigneeTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateTransportWaybillConsigneeTitleCompleted(object state) {
            if ((this.GenerateTransportWaybillConsigneeTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateTransportWaybillConsigneeTitleCompleted(this, new GenerateTransportWaybillConsigneeTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateTransportWaybillConsigneeTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsigneeTitleGeneratingRequest request) {
            this.GenerateTransportWaybillConsigneeTitleAsync(credentials, request, null);
        }
        
        public void GenerateTransportWaybillConsigneeTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillConsigneeTitleGeneratingRequest request, object userState) {
            if ((this.onBeginGenerateTransportWaybillConsigneeTitleDelegate == null)) {
                this.onBeginGenerateTransportWaybillConsigneeTitleDelegate = new BeginOperationDelegate(this.OnBeginGenerateTransportWaybillConsigneeTitle);
            }
            if ((this.onEndGenerateTransportWaybillConsigneeTitleDelegate == null)) {
                this.onEndGenerateTransportWaybillConsigneeTitleDelegate = new EndOperationDelegate(this.OnEndGenerateTransportWaybillConsigneeTitle);
            }
            if ((this.onGenerateTransportWaybillConsigneeTitleCompletedDelegate == null)) {
                this.onGenerateTransportWaybillConsigneeTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateTransportWaybillConsigneeTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateTransportWaybillConsigneeTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateTransportWaybillConsigneeTitleDelegate, this.onGenerateTransportWaybillConsigneeTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillCarrierTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCarrierTitleGeneratingRequest request) {
            return base.Channel.GenerateTransportWaybillCarrierTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateTransportWaybillCarrierTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCarrierTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateTransportWaybillCarrierTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillCarrierTitle(System.IAsyncResult result) {
            return base.Channel.EndGenerateTransportWaybillCarrierTitle(result);
        }
        
        private System.IAsyncResult OnBeginGenerateTransportWaybillCarrierTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillCarrierTitleGeneratingRequest request = ((Midway.ObjectModel.TransportWaybillCarrierTitleGeneratingRequest)(inValues[1]));
            return this.BeginGenerateTransportWaybillCarrierTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateTransportWaybillCarrierTitle(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateTransportWaybillCarrierTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateTransportWaybillCarrierTitleCompleted(object state) {
            if ((this.GenerateTransportWaybillCarrierTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateTransportWaybillCarrierTitleCompleted(this, new GenerateTransportWaybillCarrierTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateTransportWaybillCarrierTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCarrierTitleGeneratingRequest request) {
            this.GenerateTransportWaybillCarrierTitleAsync(credentials, request, null);
        }
        
        public void GenerateTransportWaybillCarrierTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillCarrierTitleGeneratingRequest request, object userState) {
            if ((this.onBeginGenerateTransportWaybillCarrierTitleDelegate == null)) {
                this.onBeginGenerateTransportWaybillCarrierTitleDelegate = new BeginOperationDelegate(this.OnBeginGenerateTransportWaybillCarrierTitle);
            }
            if ((this.onEndGenerateTransportWaybillCarrierTitleDelegate == null)) {
                this.onEndGenerateTransportWaybillCarrierTitleDelegate = new EndOperationDelegate(this.OnEndGenerateTransportWaybillCarrierTitle);
            }
            if ((this.onGenerateTransportWaybillCarrierTitleCompletedDelegate == null)) {
                this.onGenerateTransportWaybillCarrierTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateTransportWaybillCarrierTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateTransportWaybillCarrierTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateTransportWaybillCarrierTitleDelegate, this.onGenerateTransportWaybillCarrierTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillDeliveryPlaceChangeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleGeneratingRequest request) {
            return base.Channel.GenerateTransportWaybillDeliveryPlaceChangeTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateTransportWaybillDeliveryPlaceChangeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateTransportWaybillDeliveryPlaceChangeTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillDeliveryPlaceChangeTitle(System.IAsyncResult result) {
            return base.Channel.EndGenerateTransportWaybillDeliveryPlaceChangeTitle(result);
        }
        
        private System.IAsyncResult OnBeginGenerateTransportWaybillDeliveryPlaceChangeTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleGeneratingRequest request = ((Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleGeneratingRequest)(inValues[1]));
            return this.BeginGenerateTransportWaybillDeliveryPlaceChangeTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateTransportWaybillDeliveryPlaceChangeTitle(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateTransportWaybillDeliveryPlaceChangeTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateTransportWaybillDeliveryPlaceChangeTitleCompleted(object state) {
            if ((this.GenerateTransportWaybillDeliveryPlaceChangeTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateTransportWaybillDeliveryPlaceChangeTitleCompleted(this, new GenerateTransportWaybillDeliveryPlaceChangeTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateTransportWaybillDeliveryPlaceChangeTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleGeneratingRequest request) {
            this.GenerateTransportWaybillDeliveryPlaceChangeTitleAsync(credentials, request, null);
        }
        
        public void GenerateTransportWaybillDeliveryPlaceChangeTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDeliveryPlaceChangeTitleGeneratingRequest request, object userState) {
            if ((this.onBeginGenerateTransportWaybillDeliveryPlaceChangeTitleDelegate == null)) {
                this.onBeginGenerateTransportWaybillDeliveryPlaceChangeTitleDelegate = new BeginOperationDelegate(this.OnBeginGenerateTransportWaybillDeliveryPlaceChangeTitle);
            }
            if ((this.onEndGenerateTransportWaybillDeliveryPlaceChangeTitleDelegate == null)) {
                this.onEndGenerateTransportWaybillDeliveryPlaceChangeTitleDelegate = new EndOperationDelegate(this.OnEndGenerateTransportWaybillDeliveryPlaceChangeTitle);
            }
            if ((this.onGenerateTransportWaybillDeliveryPlaceChangeTitleCompletedDelegate == null)) {
                this.onGenerateTransportWaybillDeliveryPlaceChangeTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateTransportWaybillDeliveryPlaceChangeTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateTransportWaybillDeliveryPlaceChangeTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateTransportWaybillDeliveryPlaceChangeTitleDelegate, this.onGenerateTransportWaybillDeliveryPlaceChangeTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillDriverOrVehicleChangeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleGeneratingRequest request) {
            return base.Channel.GenerateTransportWaybillDriverOrVehicleChangeTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateTransportWaybillDriverOrVehicleChangeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateTransportWaybillDriverOrVehicleChangeTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillDriverOrVehicleChangeTitle(System.IAsyncResult result) {
            return base.Channel.EndGenerateTransportWaybillDriverOrVehicleChangeTitle(result);
        }
        
        private System.IAsyncResult OnBeginGenerateTransportWaybillDriverOrVehicleChangeTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleGeneratingRequest request = ((Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleGeneratingRequest)(inValues[1]));
            return this.BeginGenerateTransportWaybillDriverOrVehicleChangeTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateTransportWaybillDriverOrVehicleChangeTitle(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateTransportWaybillDriverOrVehicleChangeTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateTransportWaybillDriverOrVehicleChangeTitleCompleted(object state) {
            if ((this.GenerateTransportWaybillDriverOrVehicleChangeTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateTransportWaybillDriverOrVehicleChangeTitleCompleted(this, new GenerateTransportWaybillDriverOrVehicleChangeTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateTransportWaybillDriverOrVehicleChangeTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleGeneratingRequest request) {
            this.GenerateTransportWaybillDriverOrVehicleChangeTitleAsync(credentials, request, null);
        }
        
        public void GenerateTransportWaybillDriverOrVehicleChangeTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillDriverOrVehicleChangeTitleGeneratingRequest request, object userState) {
            if ((this.onBeginGenerateTransportWaybillDriverOrVehicleChangeTitleDelegate == null)) {
                this.onBeginGenerateTransportWaybillDriverOrVehicleChangeTitleDelegate = new BeginOperationDelegate(this.OnBeginGenerateTransportWaybillDriverOrVehicleChangeTitle);
            }
            if ((this.onEndGenerateTransportWaybillDriverOrVehicleChangeTitleDelegate == null)) {
                this.onEndGenerateTransportWaybillDriverOrVehicleChangeTitleDelegate = new EndOperationDelegate(this.OnEndGenerateTransportWaybillDriverOrVehicleChangeTitle);
            }
            if ((this.onGenerateTransportWaybillDriverOrVehicleChangeTitleCompletedDelegate == null)) {
                this.onGenerateTransportWaybillDriverOrVehicleChangeTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateTransportWaybillDriverOrVehicleChangeTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateTransportWaybillDriverOrVehicleChangeTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateTransportWaybillDriverOrVehicleChangeTitleDelegate, this.onGenerateTransportWaybillDriverOrVehicleChangeTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateTransportWaybillExpeditorTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillExpeditorTitleGeneratingRequest request) {
            return base.Channel.GenerateTransportWaybillExpeditorTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateTransportWaybillExpeditorTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillExpeditorTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateTransportWaybillExpeditorTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateTransportWaybillExpeditorTitle(System.IAsyncResult result) {
            return base.Channel.EndGenerateTransportWaybillExpeditorTitle(result);
        }
        
        private System.IAsyncResult OnBeginGenerateTransportWaybillExpeditorTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.TransportWaybillExpeditorTitleGeneratingRequest request = ((Midway.ObjectModel.TransportWaybillExpeditorTitleGeneratingRequest)(inValues[1]));
            return this.BeginGenerateTransportWaybillExpeditorTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateTransportWaybillExpeditorTitle(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateTransportWaybillExpeditorTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateTransportWaybillExpeditorTitleCompleted(object state) {
            if ((this.GenerateTransportWaybillExpeditorTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateTransportWaybillExpeditorTitleCompleted(this, new GenerateTransportWaybillExpeditorTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateTransportWaybillExpeditorTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillExpeditorTitleGeneratingRequest request) {
            this.GenerateTransportWaybillExpeditorTitleAsync(credentials, request, null);
        }
        
        public void GenerateTransportWaybillExpeditorTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.TransportWaybillExpeditorTitleGeneratingRequest request, object userState) {
            if ((this.onBeginGenerateTransportWaybillExpeditorTitleDelegate == null)) {
                this.onBeginGenerateTransportWaybillExpeditorTitleDelegate = new BeginOperationDelegate(this.OnBeginGenerateTransportWaybillExpeditorTitle);
            }
            if ((this.onEndGenerateTransportWaybillExpeditorTitleDelegate == null)) {
                this.onEndGenerateTransportWaybillExpeditorTitleDelegate = new EndOperationDelegate(this.OnEndGenerateTransportWaybillExpeditorTitle);
            }
            if ((this.onGenerateTransportWaybillExpeditorTitleCompletedDelegate == null)) {
                this.onGenerateTransportWaybillExpeditorTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateTransportWaybillExpeditorTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateTransportWaybillExpeditorTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateTransportWaybillExpeditorTitleDelegate, this.onGenerateTransportWaybillExpeditorTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent DownloadPdfDocument(string authToken, string boxId, string documentId) {
            return base.Channel.DownloadPdfDocument(authToken, boxId, documentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDownloadPdfDocument(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadPdfDocument(authToken, boxId, documentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndDownloadPdfDocument(System.IAsyncResult result) {
            return base.Channel.EndDownloadPdfDocument(result);
        }
        
        private System.IAsyncResult OnBeginDownloadPdfDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            return this.BeginDownloadPdfDocument(authToken, boxId, documentId, callback, asyncState);
        }
        
        private object[] OnEndDownloadPdfDocument(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndDownloadPdfDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadPdfDocumentCompleted(object state) {
            if ((this.DownloadPdfDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadPdfDocumentCompleted(this, new DownloadPdfDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadPdfDocumentAsync(string authToken, string boxId, string documentId) {
            this.DownloadPdfDocumentAsync(authToken, boxId, documentId, null);
        }
        
        public void DownloadPdfDocumentAsync(string authToken, string boxId, string documentId, object userState) {
            if ((this.onBeginDownloadPdfDocumentDelegate == null)) {
                this.onBeginDownloadPdfDocumentDelegate = new BeginOperationDelegate(this.OnBeginDownloadPdfDocument);
            }
            if ((this.onEndDownloadPdfDocumentDelegate == null)) {
                this.onEndDownloadPdfDocumentDelegate = new EndOperationDelegate(this.OnEndDownloadPdfDocument);
            }
            if ((this.onDownloadPdfDocumentCompletedDelegate == null)) {
                this.onDownloadPdfDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadPdfDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadPdfDocumentDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId}, this.onEndDownloadPdfDocumentDelegate, this.onDownloadPdfDocumentCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.RegistrationResponse RegisterSubscriber(Midway.ObjectModel.RegistrationRequest request) {
            return base.Channel.RegisterSubscriber(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegisterSubscriber(Midway.ObjectModel.RegistrationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegisterSubscriber(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.RegistrationResponse EndRegisterSubscriber(System.IAsyncResult result) {
            return base.Channel.EndRegisterSubscriber(result);
        }
        
        private System.IAsyncResult OnBeginRegisterSubscriber(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.RegistrationRequest request = ((Midway.ObjectModel.RegistrationRequest)(inValues[0]));
            return this.BeginRegisterSubscriber(request, callback, asyncState);
        }
        
        private object[] OnEndRegisterSubscriber(System.IAsyncResult result) {
            Midway.ObjectModel.RegistrationResponse retVal = this.EndRegisterSubscriber(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterSubscriberCompleted(object state) {
            if ((this.RegisterSubscriberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterSubscriberCompleted(this, new RegisterSubscriberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterSubscriberAsync(Midway.ObjectModel.RegistrationRequest request) {
            this.RegisterSubscriberAsync(request, null);
        }
        
        public void RegisterSubscriberAsync(Midway.ObjectModel.RegistrationRequest request, object userState) {
            if ((this.onBeginRegisterSubscriberDelegate == null)) {
                this.onBeginRegisterSubscriberDelegate = new BeginOperationDelegate(this.OnBeginRegisterSubscriber);
            }
            if ((this.onEndRegisterSubscriberDelegate == null)) {
                this.onEndRegisterSubscriberDelegate = new EndOperationDelegate(this.OnEndRegisterSubscriber);
            }
            if ((this.onRegisterSubscriberCompletedDelegate == null)) {
                this.onRegisterSubscriberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterSubscriberCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterSubscriberDelegate, new object[] {
                        request}, this.onEndRegisterSubscriberDelegate, this.onRegisterSubscriberCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NonActiveSubscriberCreationResponse CreateNonActiveSubscriber(string authToken, Midway.ObjectModel.NonActiveSubscriberCreationRequest request) {
            return base.Channel.CreateNonActiveSubscriber(authToken, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateNonActiveSubscriber(string authToken, Midway.ObjectModel.NonActiveSubscriberCreationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateNonActiveSubscriber(authToken, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NonActiveSubscriberCreationResponse EndCreateNonActiveSubscriber(System.IAsyncResult result) {
            return base.Channel.EndCreateNonActiveSubscriber(result);
        }
        
        private System.IAsyncResult OnBeginCreateNonActiveSubscriber(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.NonActiveSubscriberCreationRequest request = ((Midway.ObjectModel.NonActiveSubscriberCreationRequest)(inValues[1]));
            return this.BeginCreateNonActiveSubscriber(authToken, request, callback, asyncState);
        }
        
        private object[] OnEndCreateNonActiveSubscriber(System.IAsyncResult result) {
            Midway.ObjectModel.NonActiveSubscriberCreationResponse retVal = this.EndCreateNonActiveSubscriber(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateNonActiveSubscriberCompleted(object state) {
            if ((this.CreateNonActiveSubscriberCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateNonActiveSubscriberCompleted(this, new CreateNonActiveSubscriberCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateNonActiveSubscriberAsync(string authToken, Midway.ObjectModel.NonActiveSubscriberCreationRequest request) {
            this.CreateNonActiveSubscriberAsync(authToken, request, null);
        }
        
        public void CreateNonActiveSubscriberAsync(string authToken, Midway.ObjectModel.NonActiveSubscriberCreationRequest request, object userState) {
            if ((this.onBeginCreateNonActiveSubscriberDelegate == null)) {
                this.onBeginCreateNonActiveSubscriberDelegate = new BeginOperationDelegate(this.OnBeginCreateNonActiveSubscriber);
            }
            if ((this.onEndCreateNonActiveSubscriberDelegate == null)) {
                this.onEndCreateNonActiveSubscriberDelegate = new EndOperationDelegate(this.OnEndCreateNonActiveSubscriber);
            }
            if ((this.onCreateNonActiveSubscriberCompletedDelegate == null)) {
                this.onCreateNonActiveSubscriberCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateNonActiveSubscriberCompleted);
            }
            base.InvokeAsync(this.onBeginCreateNonActiveSubscriberDelegate, new object[] {
                        authToken,
                        request}, this.onEndCreateNonActiveSubscriberDelegate, this.onCreateNonActiveSubscriberCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.QualifiedX509Name GetCertificateSubjectInfo(byte[] certificate) {
            return base.Channel.GetCertificateSubjectInfo(certificate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCertificateSubjectInfo(byte[] certificate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCertificateSubjectInfo(certificate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.QualifiedX509Name EndGetCertificateSubjectInfo(System.IAsyncResult result) {
            return base.Channel.EndGetCertificateSubjectInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetCertificateSubjectInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] certificate = ((byte[])(inValues[0]));
            return this.BeginGetCertificateSubjectInfo(certificate, callback, asyncState);
        }
        
        private object[] OnEndGetCertificateSubjectInfo(System.IAsyncResult result) {
            Midway.ObjectModel.QualifiedX509Name retVal = this.EndGetCertificateSubjectInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCertificateSubjectInfoCompleted(object state) {
            if ((this.GetCertificateSubjectInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCertificateSubjectInfoCompleted(this, new GetCertificateSubjectInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCertificateSubjectInfoAsync(byte[] certificate) {
            this.GetCertificateSubjectInfoAsync(certificate, null);
        }
        
        public void GetCertificateSubjectInfoAsync(byte[] certificate, object userState) {
            if ((this.onBeginGetCertificateSubjectInfoDelegate == null)) {
                this.onBeginGetCertificateSubjectInfoDelegate = new BeginOperationDelegate(this.OnBeginGetCertificateSubjectInfo);
            }
            if ((this.onEndGetCertificateSubjectInfoDelegate == null)) {
                this.onEndGetCertificateSubjectInfoDelegate = new EndOperationDelegate(this.OnEndGetCertificateSubjectInfo);
            }
            if ((this.onGetCertificateSubjectInfoCompletedDelegate == null)) {
                this.onGetCertificateSubjectInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCertificateSubjectInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetCertificateSubjectInfoDelegate, new object[] {
                        certificate}, this.onEndGetCertificateSubjectInfoDelegate, this.onGetCertificateSubjectInfoCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.EnumValue GetDocumentExecutedFunction(string authToken, string boxId, string documentId) {
            return base.Channel.GetDocumentExecutedFunction(authToken, boxId, documentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDocumentExecutedFunction(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDocumentExecutedFunction(authToken, boxId, documentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.EnumValue EndGetDocumentExecutedFunction(System.IAsyncResult result) {
            return base.Channel.EndGetDocumentExecutedFunction(result);
        }
        
        private System.IAsyncResult OnBeginGetDocumentExecutedFunction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            return this.BeginGetDocumentExecutedFunction(authToken, boxId, documentId, callback, asyncState);
        }
        
        private object[] OnEndGetDocumentExecutedFunction(System.IAsyncResult result) {
            Midway.ObjectModel.EnumValue retVal = this.EndGetDocumentExecutedFunction(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDocumentExecutedFunctionCompleted(object state) {
            if ((this.GetDocumentExecutedFunctionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDocumentExecutedFunctionCompleted(this, new GetDocumentExecutedFunctionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDocumentExecutedFunctionAsync(string authToken, string boxId, string documentId) {
            this.GetDocumentExecutedFunctionAsync(authToken, boxId, documentId, null);
        }
        
        public void GetDocumentExecutedFunctionAsync(string authToken, string boxId, string documentId, object userState) {
            if ((this.onBeginGetDocumentExecutedFunctionDelegate == null)) {
                this.onBeginGetDocumentExecutedFunctionDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentExecutedFunction);
            }
            if ((this.onEndGetDocumentExecutedFunctionDelegate == null)) {
                this.onEndGetDocumentExecutedFunctionDelegate = new EndOperationDelegate(this.OnEndGetDocumentExecutedFunction);
            }
            if ((this.onGetDocumentExecutedFunctionCompletedDelegate == null)) {
                this.onGetDocumentExecutedFunctionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentExecutedFunctionCompleted);
            }
            base.InvokeAsync(this.onBeginGetDocumentExecutedFunctionDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId}, this.onEndGetDocumentExecutedFunctionDelegate, this.onGetDocumentExecutedFunctionCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.CertificateIssueRequestCreationResponse CreateCertificateIssueRequest(string authToken, string boxId, Midway.ObjectModel.CertificateIssueRequestCreationRequest request) {
            return base.Channel.CreateCertificateIssueRequest(authToken, boxId, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateCertificateIssueRequest(string authToken, string boxId, Midway.ObjectModel.CertificateIssueRequestCreationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateCertificateIssueRequest(authToken, boxId, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.CertificateIssueRequestCreationResponse EndCreateCertificateIssueRequest(System.IAsyncResult result) {
            return base.Channel.EndCreateCertificateIssueRequest(result);
        }
        
        private System.IAsyncResult OnBeginCreateCertificateIssueRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            Midway.ObjectModel.CertificateIssueRequestCreationRequest request = ((Midway.ObjectModel.CertificateIssueRequestCreationRequest)(inValues[2]));
            return this.BeginCreateCertificateIssueRequest(authToken, boxId, request, callback, asyncState);
        }
        
        private object[] OnEndCreateCertificateIssueRequest(System.IAsyncResult result) {
            Midway.ObjectModel.CertificateIssueRequestCreationResponse retVal = this.EndCreateCertificateIssueRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateCertificateIssueRequestCompleted(object state) {
            if ((this.CreateCertificateIssueRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateCertificateIssueRequestCompleted(this, new CreateCertificateIssueRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateCertificateIssueRequestAsync(string authToken, string boxId, Midway.ObjectModel.CertificateIssueRequestCreationRequest request) {
            this.CreateCertificateIssueRequestAsync(authToken, boxId, request, null);
        }
        
        public void CreateCertificateIssueRequestAsync(string authToken, string boxId, Midway.ObjectModel.CertificateIssueRequestCreationRequest request, object userState) {
            if ((this.onBeginCreateCertificateIssueRequestDelegate == null)) {
                this.onBeginCreateCertificateIssueRequestDelegate = new BeginOperationDelegate(this.OnBeginCreateCertificateIssueRequest);
            }
            if ((this.onEndCreateCertificateIssueRequestDelegate == null)) {
                this.onEndCreateCertificateIssueRequestDelegate = new EndOperationDelegate(this.OnEndCreateCertificateIssueRequest);
            }
            if ((this.onCreateCertificateIssueRequestCompletedDelegate == null)) {
                this.onCreateCertificateIssueRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCertificateIssueRequestCompleted);
            }
            base.InvokeAsync(this.onBeginCreateCertificateIssueRequestDelegate, new object[] {
                        authToken,
                        boxId,
                        request}, this.onEndCreateCertificateIssueRequestDelegate, this.onCreateCertificateIssueRequestCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.CertificateIssueRequestCreationResponse CreateCertificateIssueRequestFromFile(string authToken, string boxId, Midway.ObjectModel.CertificateIssueRequestFromFileCreationRequest request) {
            return base.Channel.CreateCertificateIssueRequestFromFile(authToken, boxId, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateCertificateIssueRequestFromFile(string authToken, string boxId, Midway.ObjectModel.CertificateIssueRequestFromFileCreationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateCertificateIssueRequestFromFile(authToken, boxId, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.CertificateIssueRequestCreationResponse EndCreateCertificateIssueRequestFromFile(System.IAsyncResult result) {
            return base.Channel.EndCreateCertificateIssueRequestFromFile(result);
        }
        
        private System.IAsyncResult OnBeginCreateCertificateIssueRequestFromFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            Midway.ObjectModel.CertificateIssueRequestFromFileCreationRequest request = ((Midway.ObjectModel.CertificateIssueRequestFromFileCreationRequest)(inValues[2]));
            return this.BeginCreateCertificateIssueRequestFromFile(authToken, boxId, request, callback, asyncState);
        }
        
        private object[] OnEndCreateCertificateIssueRequestFromFile(System.IAsyncResult result) {
            Midway.ObjectModel.CertificateIssueRequestCreationResponse retVal = this.EndCreateCertificateIssueRequestFromFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateCertificateIssueRequestFromFileCompleted(object state) {
            if ((this.CreateCertificateIssueRequestFromFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateCertificateIssueRequestFromFileCompleted(this, new CreateCertificateIssueRequestFromFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateCertificateIssueRequestFromFileAsync(string authToken, string boxId, Midway.ObjectModel.CertificateIssueRequestFromFileCreationRequest request) {
            this.CreateCertificateIssueRequestFromFileAsync(authToken, boxId, request, null);
        }
        
        public void CreateCertificateIssueRequestFromFileAsync(string authToken, string boxId, Midway.ObjectModel.CertificateIssueRequestFromFileCreationRequest request, object userState) {
            if ((this.onBeginCreateCertificateIssueRequestFromFileDelegate == null)) {
                this.onBeginCreateCertificateIssueRequestFromFileDelegate = new BeginOperationDelegate(this.OnBeginCreateCertificateIssueRequestFromFile);
            }
            if ((this.onEndCreateCertificateIssueRequestFromFileDelegate == null)) {
                this.onEndCreateCertificateIssueRequestFromFileDelegate = new EndOperationDelegate(this.OnEndCreateCertificateIssueRequestFromFile);
            }
            if ((this.onCreateCertificateIssueRequestFromFileCompletedDelegate == null)) {
                this.onCreateCertificateIssueRequestFromFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateCertificateIssueRequestFromFileCompleted);
            }
            base.InvokeAsync(this.onBeginCreateCertificateIssueRequestFromFileDelegate, new object[] {
                        authToken,
                        boxId,
                        request}, this.onEndCreateCertificateIssueRequestFromFileDelegate, this.onCreateCertificateIssueRequestFromFileCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.CertificateIssueShortInfo GetCertificateIssueShortInfo(string authToken, string boxId, string certificateIssueRequestId) {
            return base.Channel.GetCertificateIssueShortInfo(authToken, boxId, certificateIssueRequestId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCertificateIssueShortInfo(string authToken, string boxId, string certificateIssueRequestId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCertificateIssueShortInfo(authToken, boxId, certificateIssueRequestId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.CertificateIssueShortInfo EndGetCertificateIssueShortInfo(System.IAsyncResult result) {
            return base.Channel.EndGetCertificateIssueShortInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetCertificateIssueShortInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string certificateIssueRequestId = ((string)(inValues[2]));
            return this.BeginGetCertificateIssueShortInfo(authToken, boxId, certificateIssueRequestId, callback, asyncState);
        }
        
        private object[] OnEndGetCertificateIssueShortInfo(System.IAsyncResult result) {
            Midway.ObjectModel.CertificateIssueShortInfo retVal = this.EndGetCertificateIssueShortInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCertificateIssueShortInfoCompleted(object state) {
            if ((this.GetCertificateIssueShortInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCertificateIssueShortInfoCompleted(this, new GetCertificateIssueShortInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCertificateIssueShortInfoAsync(string authToken, string boxId, string certificateIssueRequestId) {
            this.GetCertificateIssueShortInfoAsync(authToken, boxId, certificateIssueRequestId, null);
        }
        
        public void GetCertificateIssueShortInfoAsync(string authToken, string boxId, string certificateIssueRequestId, object userState) {
            if ((this.onBeginGetCertificateIssueShortInfoDelegate == null)) {
                this.onBeginGetCertificateIssueShortInfoDelegate = new BeginOperationDelegate(this.OnBeginGetCertificateIssueShortInfo);
            }
            if ((this.onEndGetCertificateIssueShortInfoDelegate == null)) {
                this.onEndGetCertificateIssueShortInfoDelegate = new EndOperationDelegate(this.OnEndGetCertificateIssueShortInfo);
            }
            if ((this.onGetCertificateIssueShortInfoCompletedDelegate == null)) {
                this.onGetCertificateIssueShortInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCertificateIssueShortInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetCertificateIssueShortInfoDelegate, new object[] {
                        authToken,
                        boxId,
                        certificateIssueRequestId}, this.onEndGetCertificateIssueShortInfoDelegate, this.onGetCertificateIssueShortInfoCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.CertificateIssueInfo GetCertificateIssueInfo(string authToken, string boxId, string certificateIssueRequestId, Midway.ObjectModel.CertificateIssueInfoGettingSettings settings) {
            return base.Channel.GetCertificateIssueInfo(authToken, boxId, certificateIssueRequestId, settings);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCertificateIssueInfo(string authToken, string boxId, string certificateIssueRequestId, Midway.ObjectModel.CertificateIssueInfoGettingSettings settings, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCertificateIssueInfo(authToken, boxId, certificateIssueRequestId, settings, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.CertificateIssueInfo EndGetCertificateIssueInfo(System.IAsyncResult result) {
            return base.Channel.EndGetCertificateIssueInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetCertificateIssueInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string certificateIssueRequestId = ((string)(inValues[2]));
            Midway.ObjectModel.CertificateIssueInfoGettingSettings settings = ((Midway.ObjectModel.CertificateIssueInfoGettingSettings)(inValues[3]));
            return this.BeginGetCertificateIssueInfo(authToken, boxId, certificateIssueRequestId, settings, callback, asyncState);
        }
        
        private object[] OnEndGetCertificateIssueInfo(System.IAsyncResult result) {
            Midway.ObjectModel.CertificateIssueInfo retVal = this.EndGetCertificateIssueInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCertificateIssueInfoCompleted(object state) {
            if ((this.GetCertificateIssueInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCertificateIssueInfoCompleted(this, new GetCertificateIssueInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCertificateIssueInfoAsync(string authToken, string boxId, string certificateIssueRequestId, Midway.ObjectModel.CertificateIssueInfoGettingSettings settings) {
            this.GetCertificateIssueInfoAsync(authToken, boxId, certificateIssueRequestId, settings, null);
        }
        
        public void GetCertificateIssueInfoAsync(string authToken, string boxId, string certificateIssueRequestId, Midway.ObjectModel.CertificateIssueInfoGettingSettings settings, object userState) {
            if ((this.onBeginGetCertificateIssueInfoDelegate == null)) {
                this.onBeginGetCertificateIssueInfoDelegate = new BeginOperationDelegate(this.OnBeginGetCertificateIssueInfo);
            }
            if ((this.onEndGetCertificateIssueInfoDelegate == null)) {
                this.onEndGetCertificateIssueInfoDelegate = new EndOperationDelegate(this.OnEndGetCertificateIssueInfo);
            }
            if ((this.onGetCertificateIssueInfoCompletedDelegate == null)) {
                this.onGetCertificateIssueInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCertificateIssueInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetCertificateIssueInfoDelegate, new object[] {
                        authToken,
                        boxId,
                        certificateIssueRequestId,
                        settings}, this.onEndGetCertificateIssueInfoDelegate, this.onGetCertificateIssueInfoCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.IssuedCertificateQrCode ReissueCertificateQrCode(string authToken, string boxId, Midway.ObjectModel.ReissueCertificateQrCodeRequest reissueCertificateQrCodeRequest) {
            return base.Channel.ReissueCertificateQrCode(authToken, boxId, reissueCertificateQrCodeRequest);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginReissueCertificateQrCode(string authToken, string boxId, Midway.ObjectModel.ReissueCertificateQrCodeRequest reissueCertificateQrCodeRequest, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReissueCertificateQrCode(authToken, boxId, reissueCertificateQrCodeRequest, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.IssuedCertificateQrCode EndReissueCertificateQrCode(System.IAsyncResult result) {
            return base.Channel.EndReissueCertificateQrCode(result);
        }
        
        private System.IAsyncResult OnBeginReissueCertificateQrCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            Midway.ObjectModel.ReissueCertificateQrCodeRequest reissueCertificateQrCodeRequest = ((Midway.ObjectModel.ReissueCertificateQrCodeRequest)(inValues[2]));
            return this.BeginReissueCertificateQrCode(authToken, boxId, reissueCertificateQrCodeRequest, callback, asyncState);
        }
        
        private object[] OnEndReissueCertificateQrCode(System.IAsyncResult result) {
            Midway.ObjectModel.IssuedCertificateQrCode retVal = this.EndReissueCertificateQrCode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReissueCertificateQrCodeCompleted(object state) {
            if ((this.ReissueCertificateQrCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReissueCertificateQrCodeCompleted(this, new ReissueCertificateQrCodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReissueCertificateQrCodeAsync(string authToken, string boxId, Midway.ObjectModel.ReissueCertificateQrCodeRequest reissueCertificateQrCodeRequest) {
            this.ReissueCertificateQrCodeAsync(authToken, boxId, reissueCertificateQrCodeRequest, null);
        }
        
        public void ReissueCertificateQrCodeAsync(string authToken, string boxId, Midway.ObjectModel.ReissueCertificateQrCodeRequest reissueCertificateQrCodeRequest, object userState) {
            if ((this.onBeginReissueCertificateQrCodeDelegate == null)) {
                this.onBeginReissueCertificateQrCodeDelegate = new BeginOperationDelegate(this.OnBeginReissueCertificateQrCode);
            }
            if ((this.onEndReissueCertificateQrCodeDelegate == null)) {
                this.onEndReissueCertificateQrCodeDelegate = new EndOperationDelegate(this.OnEndReissueCertificateQrCode);
            }
            if ((this.onReissueCertificateQrCodeCompletedDelegate == null)) {
                this.onReissueCertificateQrCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReissueCertificateQrCodeCompleted);
            }
            base.InvokeAsync(this.onBeginReissueCertificateQrCodeDelegate, new object[] {
                        authToken,
                        boxId,
                        reissueCertificateQrCodeRequest}, this.onEndReissueCertificateQrCodeDelegate, this.onReissueCertificateQrCodeCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SimpleSignatureAvailabilityCheckingResponse CheckSimpleSignatureAvailability(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureAvailabilityCheckingRequest request) {
            return base.Channel.CheckSimpleSignatureAvailability(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckSimpleSignatureAvailability(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureAvailabilityCheckingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckSimpleSignatureAvailability(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SimpleSignatureAvailabilityCheckingResponse EndCheckSimpleSignatureAvailability(System.IAsyncResult result) {
            return base.Channel.EndCheckSimpleSignatureAvailability(result);
        }
        
        private System.IAsyncResult OnBeginCheckSimpleSignatureAvailability(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.SimpleSignatureAvailabilityCheckingRequest request = ((Midway.ObjectModel.SimpleSignatureAvailabilityCheckingRequest)(inValues[1]));
            return this.BeginCheckSimpleSignatureAvailability(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndCheckSimpleSignatureAvailability(System.IAsyncResult result) {
            Midway.ObjectModel.SimpleSignatureAvailabilityCheckingResponse retVal = this.EndCheckSimpleSignatureAvailability(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckSimpleSignatureAvailabilityCompleted(object state) {
            if ((this.CheckSimpleSignatureAvailabilityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckSimpleSignatureAvailabilityCompleted(this, new CheckSimpleSignatureAvailabilityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckSimpleSignatureAvailabilityAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureAvailabilityCheckingRequest request) {
            this.CheckSimpleSignatureAvailabilityAsync(credentials, request, null);
        }
        
        public void CheckSimpleSignatureAvailabilityAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureAvailabilityCheckingRequest request, object userState) {
            if ((this.onBeginCheckSimpleSignatureAvailabilityDelegate == null)) {
                this.onBeginCheckSimpleSignatureAvailabilityDelegate = new BeginOperationDelegate(this.OnBeginCheckSimpleSignatureAvailability);
            }
            if ((this.onEndCheckSimpleSignatureAvailabilityDelegate == null)) {
                this.onEndCheckSimpleSignatureAvailabilityDelegate = new EndOperationDelegate(this.OnEndCheckSimpleSignatureAvailability);
            }
            if ((this.onCheckSimpleSignatureAvailabilityCompletedDelegate == null)) {
                this.onCheckSimpleSignatureAvailabilityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckSimpleSignatureAvailabilityCompleted);
            }
            base.InvokeAsync(this.onBeginCheckSimpleSignatureAvailabilityDelegate, new object[] {
                        credentials,
                        request}, this.onEndCheckSimpleSignatureAvailabilityDelegate, this.onCheckSimpleSignatureAvailabilityCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SimpleSignatureRegulationAcceptingResponse AcceptSimpleSignatureRegulation(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureRegulationAcceptingRequest request) {
            return base.Channel.AcceptSimpleSignatureRegulation(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAcceptSimpleSignatureRegulation(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureRegulationAcceptingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAcceptSimpleSignatureRegulation(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SimpleSignatureRegulationAcceptingResponse EndAcceptSimpleSignatureRegulation(System.IAsyncResult result) {
            return base.Channel.EndAcceptSimpleSignatureRegulation(result);
        }
        
        private System.IAsyncResult OnBeginAcceptSimpleSignatureRegulation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.SimpleSignatureRegulationAcceptingRequest request = ((Midway.ObjectModel.SimpleSignatureRegulationAcceptingRequest)(inValues[1]));
            return this.BeginAcceptSimpleSignatureRegulation(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndAcceptSimpleSignatureRegulation(System.IAsyncResult result) {
            Midway.ObjectModel.SimpleSignatureRegulationAcceptingResponse retVal = this.EndAcceptSimpleSignatureRegulation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAcceptSimpleSignatureRegulationCompleted(object state) {
            if ((this.AcceptSimpleSignatureRegulationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AcceptSimpleSignatureRegulationCompleted(this, new AcceptSimpleSignatureRegulationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AcceptSimpleSignatureRegulationAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureRegulationAcceptingRequest request) {
            this.AcceptSimpleSignatureRegulationAsync(credentials, request, null);
        }
        
        public void AcceptSimpleSignatureRegulationAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureRegulationAcceptingRequest request, object userState) {
            if ((this.onBeginAcceptSimpleSignatureRegulationDelegate == null)) {
                this.onBeginAcceptSimpleSignatureRegulationDelegate = new BeginOperationDelegate(this.OnBeginAcceptSimpleSignatureRegulation);
            }
            if ((this.onEndAcceptSimpleSignatureRegulationDelegate == null)) {
                this.onEndAcceptSimpleSignatureRegulationDelegate = new EndOperationDelegate(this.OnEndAcceptSimpleSignatureRegulation);
            }
            if ((this.onAcceptSimpleSignatureRegulationCompletedDelegate == null)) {
                this.onAcceptSimpleSignatureRegulationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAcceptSimpleSignatureRegulationCompleted);
            }
            base.InvokeAsync(this.onBeginAcceptSimpleSignatureRegulationDelegate, new object[] {
                        credentials,
                        request}, this.onEndAcceptSimpleSignatureRegulationDelegate, this.onAcceptSimpleSignatureRegulationCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SimpleSignatureRequisitesPreviewingResponse PreviewSimpleSignatureRequisites(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureRequisitesPreviewingRequest request) {
            return base.Channel.PreviewSimpleSignatureRequisites(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPreviewSimpleSignatureRequisites(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureRequisitesPreviewingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPreviewSimpleSignatureRequisites(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SimpleSignatureRequisitesPreviewingResponse EndPreviewSimpleSignatureRequisites(System.IAsyncResult result) {
            return base.Channel.EndPreviewSimpleSignatureRequisites(result);
        }
        
        private System.IAsyncResult OnBeginPreviewSimpleSignatureRequisites(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.SimpleSignatureRequisitesPreviewingRequest request = ((Midway.ObjectModel.SimpleSignatureRequisitesPreviewingRequest)(inValues[1]));
            return this.BeginPreviewSimpleSignatureRequisites(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndPreviewSimpleSignatureRequisites(System.IAsyncResult result) {
            Midway.ObjectModel.SimpleSignatureRequisitesPreviewingResponse retVal = this.EndPreviewSimpleSignatureRequisites(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPreviewSimpleSignatureRequisitesCompleted(object state) {
            if ((this.PreviewSimpleSignatureRequisitesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PreviewSimpleSignatureRequisitesCompleted(this, new PreviewSimpleSignatureRequisitesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PreviewSimpleSignatureRequisitesAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureRequisitesPreviewingRequest request) {
            this.PreviewSimpleSignatureRequisitesAsync(credentials, request, null);
        }
        
        public void PreviewSimpleSignatureRequisitesAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureRequisitesPreviewingRequest request, object userState) {
            if ((this.onBeginPreviewSimpleSignatureRequisitesDelegate == null)) {
                this.onBeginPreviewSimpleSignatureRequisitesDelegate = new BeginOperationDelegate(this.OnBeginPreviewSimpleSignatureRequisites);
            }
            if ((this.onEndPreviewSimpleSignatureRequisitesDelegate == null)) {
                this.onEndPreviewSimpleSignatureRequisitesDelegate = new EndOperationDelegate(this.OnEndPreviewSimpleSignatureRequisites);
            }
            if ((this.onPreviewSimpleSignatureRequisitesCompletedDelegate == null)) {
                this.onPreviewSimpleSignatureRequisitesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPreviewSimpleSignatureRequisitesCompleted);
            }
            base.InvokeAsync(this.onBeginPreviewSimpleSignatureRequisitesDelegate, new object[] {
                        credentials,
                        request}, this.onEndPreviewSimpleSignatureRequisitesDelegate, this.onPreviewSimpleSignatureRequisitesCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SimpleSignatureCreationResponse CreateSimpleSignature(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureCreationRequest request) {
            return base.Channel.CreateSimpleSignature(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateSimpleSignature(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureCreationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateSimpleSignature(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SimpleSignatureCreationResponse EndCreateSimpleSignature(System.IAsyncResult result) {
            return base.Channel.EndCreateSimpleSignature(result);
        }
        
        private System.IAsyncResult OnBeginCreateSimpleSignature(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.SimpleSignatureCreationRequest request = ((Midway.ObjectModel.SimpleSignatureCreationRequest)(inValues[1]));
            return this.BeginCreateSimpleSignature(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndCreateSimpleSignature(System.IAsyncResult result) {
            Midway.ObjectModel.SimpleSignatureCreationResponse retVal = this.EndCreateSimpleSignature(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateSimpleSignatureCompleted(object state) {
            if ((this.CreateSimpleSignatureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateSimpleSignatureCompleted(this, new CreateSimpleSignatureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateSimpleSignatureAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureCreationRequest request) {
            this.CreateSimpleSignatureAsync(credentials, request, null);
        }
        
        public void CreateSimpleSignatureAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SimpleSignatureCreationRequest request, object userState) {
            if ((this.onBeginCreateSimpleSignatureDelegate == null)) {
                this.onBeginCreateSimpleSignatureDelegate = new BeginOperationDelegate(this.OnBeginCreateSimpleSignature);
            }
            if ((this.onEndCreateSimpleSignatureDelegate == null)) {
                this.onEndCreateSimpleSignatureDelegate = new EndOperationDelegate(this.OnEndCreateSimpleSignature);
            }
            if ((this.onCreateSimpleSignatureCompletedDelegate == null)) {
                this.onCreateSimpleSignatureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateSimpleSignatureCompleted);
            }
            base.InvokeAsync(this.onBeginCreateSimpleSignatureDelegate, new object[] {
                        credentials,
                        request}, this.onEndCreateSimpleSignatureDelegate, this.onCreateSimpleSignatureCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.UserAndEmployeeCreationResponse CreateUserAndEmployee(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.UserAndEmployeeCreationRequest request) {
            return base.Channel.CreateUserAndEmployee(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateUserAndEmployee(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.UserAndEmployeeCreationRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateUserAndEmployee(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.UserAndEmployeeCreationResponse EndCreateUserAndEmployee(System.IAsyncResult result) {
            return base.Channel.EndCreateUserAndEmployee(result);
        }
        
        private System.IAsyncResult OnBeginCreateUserAndEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.UserAndEmployeeCreationRequest request = ((Midway.ObjectModel.UserAndEmployeeCreationRequest)(inValues[1]));
            return this.BeginCreateUserAndEmployee(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndCreateUserAndEmployee(System.IAsyncResult result) {
            Midway.ObjectModel.UserAndEmployeeCreationResponse retVal = this.EndCreateUserAndEmployee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateUserAndEmployeeCompleted(object state) {
            if ((this.CreateUserAndEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateUserAndEmployeeCompleted(this, new CreateUserAndEmployeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateUserAndEmployeeAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.UserAndEmployeeCreationRequest request) {
            this.CreateUserAndEmployeeAsync(credentials, request, null);
        }
        
        public void CreateUserAndEmployeeAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.UserAndEmployeeCreationRequest request, object userState) {
            if ((this.onBeginCreateUserAndEmployeeDelegate == null)) {
                this.onBeginCreateUserAndEmployeeDelegate = new BeginOperationDelegate(this.OnBeginCreateUserAndEmployee);
            }
            if ((this.onEndCreateUserAndEmployeeDelegate == null)) {
                this.onEndCreateUserAndEmployeeDelegate = new EndOperationDelegate(this.OnEndCreateUserAndEmployee);
            }
            if ((this.onCreateUserAndEmployeeCompletedDelegate == null)) {
                this.onCreateUserAndEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateUserAndEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginCreateUserAndEmployeeDelegate, new object[] {
                        credentials,
                        request}, this.onEndCreateUserAndEmployeeDelegate, this.onCreateUserAndEmployeeCompletedDelegate, userState);
        }
        
        public void DeleteEmployee(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId) {
            base.Channel.DeleteEmployee(credentials, employeeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteEmployee(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteEmployee(credentials, employeeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteEmployee(System.IAsyncResult result) {
            base.Channel.EndDeleteEmployee(result);
        }
        
        private System.IAsyncResult OnBeginDeleteEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            string employeeId = ((string)(inValues[1]));
            return this.BeginDeleteEmployee(credentials, employeeId, callback, asyncState);
        }
        
        private object[] OnEndDeleteEmployee(System.IAsyncResult result) {
            this.EndDeleteEmployee(result);
            return null;
        }
        
        private void OnDeleteEmployeeCompleted(object state) {
            if ((this.DeleteEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteEmployeeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteEmployeeAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId) {
            this.DeleteEmployeeAsync(credentials, employeeId, null);
        }
        
        public void DeleteEmployeeAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId, object userState) {
            if ((this.onBeginDeleteEmployeeDelegate == null)) {
                this.onBeginDeleteEmployeeDelegate = new BeginOperationDelegate(this.OnBeginDeleteEmployee);
            }
            if ((this.onEndDeleteEmployeeDelegate == null)) {
                this.onEndDeleteEmployeeDelegate = new EndOperationDelegate(this.OnEndDeleteEmployee);
            }
            if ((this.onDeleteEmployeeCompletedDelegate == null)) {
                this.onDeleteEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteEmployeeDelegate, new object[] {
                        credentials,
                        employeeId}, this.onEndDeleteEmployeeDelegate, this.onDeleteEmployeeCompletedDelegate, userState);
        }
        
        public void DeleteEmployeeAndUser(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId) {
            base.Channel.DeleteEmployeeAndUser(credentials, employeeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteEmployeeAndUser(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteEmployeeAndUser(credentials, employeeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteEmployeeAndUser(System.IAsyncResult result) {
            base.Channel.EndDeleteEmployeeAndUser(result);
        }
        
        private System.IAsyncResult OnBeginDeleteEmployeeAndUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            string employeeId = ((string)(inValues[1]));
            return this.BeginDeleteEmployeeAndUser(credentials, employeeId, callback, asyncState);
        }
        
        private object[] OnEndDeleteEmployeeAndUser(System.IAsyncResult result) {
            this.EndDeleteEmployeeAndUser(result);
            return null;
        }
        
        private void OnDeleteEmployeeAndUserCompleted(object state) {
            if ((this.DeleteEmployeeAndUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteEmployeeAndUserCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteEmployeeAndUserAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId) {
            this.DeleteEmployeeAndUserAsync(credentials, employeeId, null);
        }
        
        public void DeleteEmployeeAndUserAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId, object userState) {
            if ((this.onBeginDeleteEmployeeAndUserDelegate == null)) {
                this.onBeginDeleteEmployeeAndUserDelegate = new BeginOperationDelegate(this.OnBeginDeleteEmployeeAndUser);
            }
            if ((this.onEndDeleteEmployeeAndUserDelegate == null)) {
                this.onEndDeleteEmployeeAndUserDelegate = new EndOperationDelegate(this.OnEndDeleteEmployeeAndUser);
            }
            if ((this.onDeleteEmployeeAndUserCompletedDelegate == null)) {
                this.onDeleteEmployeeAndUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteEmployeeAndUserCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteEmployeeAndUserDelegate, new object[] {
                        credentials,
                        employeeId}, this.onEndDeleteEmployeeAndUserDelegate, this.onDeleteEmployeeAndUserCompletedDelegate, userState);
        }
        
        public void DeleteEmployeeCertificate(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId) {
            base.Channel.DeleteEmployeeCertificate(credentials, employeeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteEmployeeCertificate(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteEmployeeCertificate(credentials, employeeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteEmployeeCertificate(System.IAsyncResult result) {
            base.Channel.EndDeleteEmployeeCertificate(result);
        }
        
        private System.IAsyncResult OnBeginDeleteEmployeeCertificate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            string employeeId = ((string)(inValues[1]));
            return this.BeginDeleteEmployeeCertificate(credentials, employeeId, callback, asyncState);
        }
        
        private object[] OnEndDeleteEmployeeCertificate(System.IAsyncResult result) {
            this.EndDeleteEmployeeCertificate(result);
            return null;
        }
        
        private void OnDeleteEmployeeCertificateCompleted(object state) {
            if ((this.DeleteEmployeeCertificateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteEmployeeCertificateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteEmployeeCertificateAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId) {
            this.DeleteEmployeeCertificateAsync(credentials, employeeId, null);
        }
        
        public void DeleteEmployeeCertificateAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, string employeeId, object userState) {
            if ((this.onBeginDeleteEmployeeCertificateDelegate == null)) {
                this.onBeginDeleteEmployeeCertificateDelegate = new BeginOperationDelegate(this.OnBeginDeleteEmployeeCertificate);
            }
            if ((this.onEndDeleteEmployeeCertificateDelegate == null)) {
                this.onEndDeleteEmployeeCertificateDelegate = new EndOperationDelegate(this.OnEndDeleteEmployeeCertificate);
            }
            if ((this.onDeleteEmployeeCertificateCompletedDelegate == null)) {
                this.onDeleteEmployeeCertificateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteEmployeeCertificateCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteEmployeeCertificateDelegate, new object[] {
                        credentials,
                        employeeId}, this.onEndDeleteEmployeeCertificateDelegate, this.onDeleteEmployeeCertificateCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SettingGettingResponse GetSetting(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SettingGettingRequest request) {
            return base.Channel.GetSetting(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSetting(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SettingGettingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSetting(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SettingGettingResponse EndGetSetting(System.IAsyncResult result) {
            return base.Channel.EndGetSetting(result);
        }
        
        private System.IAsyncResult OnBeginGetSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.SettingGettingRequest request = ((Midway.ObjectModel.SettingGettingRequest)(inValues[1]));
            return this.BeginGetSetting(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGetSetting(System.IAsyncResult result) {
            Midway.ObjectModel.SettingGettingResponse retVal = this.EndGetSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSettingCompleted(object state) {
            if ((this.GetSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSettingCompleted(this, new GetSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSettingAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SettingGettingRequest request) {
            this.GetSettingAsync(credentials, request, null);
        }
        
        public void GetSettingAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SettingGettingRequest request, object userState) {
            if ((this.onBeginGetSettingDelegate == null)) {
                this.onBeginGetSettingDelegate = new BeginOperationDelegate(this.OnBeginGetSetting);
            }
            if ((this.onEndGetSettingDelegate == null)) {
                this.onEndGetSettingDelegate = new EndOperationDelegate(this.OnEndGetSetting);
            }
            if ((this.onGetSettingCompletedDelegate == null)) {
                this.onGetSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSettingCompleted);
            }
            base.InvokeAsync(this.onBeginGetSettingDelegate, new object[] {
                        credentials,
                        request}, this.onEndGetSettingDelegate, this.onGetSettingCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SettingUpdatingResponse UpdateSetting(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SettingUpdatingRequest request) {
            return base.Channel.UpdateSetting(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateSetting(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SettingUpdatingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateSetting(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SettingUpdatingResponse EndUpdateSetting(System.IAsyncResult result) {
            return base.Channel.EndUpdateSetting(result);
        }
        
        private System.IAsyncResult OnBeginUpdateSetting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.SettingUpdatingRequest request = ((Midway.ObjectModel.SettingUpdatingRequest)(inValues[1]));
            return this.BeginUpdateSetting(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndUpdateSetting(System.IAsyncResult result) {
            Midway.ObjectModel.SettingUpdatingResponse retVal = this.EndUpdateSetting(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateSettingCompleted(object state) {
            if ((this.UpdateSettingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateSettingCompleted(this, new UpdateSettingCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateSettingAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SettingUpdatingRequest request) {
            this.UpdateSettingAsync(credentials, request, null);
        }
        
        public void UpdateSettingAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.SettingUpdatingRequest request, object userState) {
            if ((this.onBeginUpdateSettingDelegate == null)) {
                this.onBeginUpdateSettingDelegate = new BeginOperationDelegate(this.OnBeginUpdateSetting);
            }
            if ((this.onEndUpdateSettingDelegate == null)) {
                this.onEndUpdateSettingDelegate = new EndOperationDelegate(this.OnEndUpdateSetting);
            }
            if ((this.onUpdateSettingCompletedDelegate == null)) {
                this.onUpdateSettingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateSettingCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateSettingDelegate, new object[] {
                        credentials,
                        request}, this.onEndUpdateSettingDelegate, this.onUpdateSettingCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.Employee GetEmployee(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.ProfileGettingRequest request) {
            return base.Channel.GetEmployee(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEmployee(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.ProfileGettingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEmployee(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.Employee EndGetEmployee(System.IAsyncResult result) {
            return base.Channel.EndGetEmployee(result);
        }
        
        private System.IAsyncResult OnBeginGetEmployee(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.ProfileGettingRequest request = ((Midway.ObjectModel.ProfileGettingRequest)(inValues[1]));
            return this.BeginGetEmployee(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGetEmployee(System.IAsyncResult result) {
            Midway.ObjectModel.Employee retVal = this.EndGetEmployee(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEmployeeCompleted(object state) {
            if ((this.GetEmployeeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEmployeeCompleted(this, new GetEmployeeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEmployeeAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.ProfileGettingRequest request) {
            this.GetEmployeeAsync(credentials, request, null);
        }
        
        public void GetEmployeeAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.ProfileGettingRequest request, object userState) {
            if ((this.onBeginGetEmployeeDelegate == null)) {
                this.onBeginGetEmployeeDelegate = new BeginOperationDelegate(this.OnBeginGetEmployee);
            }
            if ((this.onEndGetEmployeeDelegate == null)) {
                this.onEndGetEmployeeDelegate = new EndOperationDelegate(this.OnEndGetEmployee);
            }
            if ((this.onGetEmployeeCompletedDelegate == null)) {
                this.onGetEmployeeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEmployeeCompleted);
            }
            base.InvokeAsync(this.onBeginGetEmployeeDelegate, new object[] {
                        credentials,
                        request}, this.onEndGetEmployeeDelegate, this.onGetEmployeeCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.EmployeeSearchResponse SearchEmployees(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.EmployeeSearchSettings request) {
            return base.Channel.SearchEmployees(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchEmployees(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.EmployeeSearchSettings request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchEmployees(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.EmployeeSearchResponse EndSearchEmployees(System.IAsyncResult result) {
            return base.Channel.EndSearchEmployees(result);
        }
        
        private System.IAsyncResult OnBeginSearchEmployees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.EmployeeSearchSettings request = ((Midway.ObjectModel.EmployeeSearchSettings)(inValues[1]));
            return this.BeginSearchEmployees(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndSearchEmployees(System.IAsyncResult result) {
            Midway.ObjectModel.EmployeeSearchResponse retVal = this.EndSearchEmployees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchEmployeesCompleted(object state) {
            if ((this.SearchEmployeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchEmployeesCompleted(this, new SearchEmployeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchEmployeesAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.EmployeeSearchSettings request) {
            this.SearchEmployeesAsync(credentials, request, null);
        }
        
        public void SearchEmployeesAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.EmployeeSearchSettings request, object userState) {
            if ((this.onBeginSearchEmployeesDelegate == null)) {
                this.onBeginSearchEmployeesDelegate = new BeginOperationDelegate(this.OnBeginSearchEmployees);
            }
            if ((this.onEndSearchEmployeesDelegate == null)) {
                this.onEndSearchEmployeesDelegate = new EndOperationDelegate(this.OnEndSearchEmployees);
            }
            if ((this.onSearchEmployeesCompletedDelegate == null)) {
                this.onSearchEmployeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchEmployeesCompleted);
            }
            base.InvokeAsync(this.onBeginSearchEmployeesDelegate, new object[] {
                        credentials,
                        request}, this.onEndSearchEmployeesDelegate, this.onSearchEmployeesCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.AdministratorAuthorityUpdatingResponse UpdateEmployeeAdministratorAuthority(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.EmployeeAdministratorAuthorityUpdatingRequest request) {
            return base.Channel.UpdateEmployeeAdministratorAuthority(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateEmployeeAdministratorAuthority(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.EmployeeAdministratorAuthorityUpdatingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEmployeeAdministratorAuthority(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.AdministratorAuthorityUpdatingResponse EndUpdateEmployeeAdministratorAuthority(System.IAsyncResult result) {
            return base.Channel.EndUpdateEmployeeAdministratorAuthority(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEmployeeAdministratorAuthority(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.EmployeeAdministratorAuthorityUpdatingRequest request = ((Midway.ObjectModel.EmployeeAdministratorAuthorityUpdatingRequest)(inValues[1]));
            return this.BeginUpdateEmployeeAdministratorAuthority(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndUpdateEmployeeAdministratorAuthority(System.IAsyncResult result) {
            Midway.ObjectModel.AdministratorAuthorityUpdatingResponse retVal = this.EndUpdateEmployeeAdministratorAuthority(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateEmployeeAdministratorAuthorityCompleted(object state) {
            if ((this.UpdateEmployeeAdministratorAuthorityCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEmployeeAdministratorAuthorityCompleted(this, new UpdateEmployeeAdministratorAuthorityCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEmployeeAdministratorAuthorityAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.EmployeeAdministratorAuthorityUpdatingRequest request) {
            this.UpdateEmployeeAdministratorAuthorityAsync(credentials, request, null);
        }
        
        public void UpdateEmployeeAdministratorAuthorityAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.EmployeeAdministratorAuthorityUpdatingRequest request, object userState) {
            if ((this.onBeginUpdateEmployeeAdministratorAuthorityDelegate == null)) {
                this.onBeginUpdateEmployeeAdministratorAuthorityDelegate = new BeginOperationDelegate(this.OnBeginUpdateEmployeeAdministratorAuthority);
            }
            if ((this.onEndUpdateEmployeeAdministratorAuthorityDelegate == null)) {
                this.onEndUpdateEmployeeAdministratorAuthorityDelegate = new EndOperationDelegate(this.OnEndUpdateEmployeeAdministratorAuthority);
            }
            if ((this.onUpdateEmployeeAdministratorAuthorityCompletedDelegate == null)) {
                this.onUpdateEmployeeAdministratorAuthorityCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeAdministratorAuthorityCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEmployeeAdministratorAuthorityDelegate, new object[] {
                        credentials,
                        request}, this.onEndUpdateEmployeeAdministratorAuthorityDelegate, this.onUpdateEmployeeAdministratorAuthorityCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.PersonalInfoUpdatingResponse UpdateEmployeePersonalInfo(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.PersonalInfoUpdatingRequest request) {
            return base.Channel.UpdateEmployeePersonalInfo(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateEmployeePersonalInfo(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.PersonalInfoUpdatingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEmployeePersonalInfo(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.PersonalInfoUpdatingResponse EndUpdateEmployeePersonalInfo(System.IAsyncResult result) {
            return base.Channel.EndUpdateEmployeePersonalInfo(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEmployeePersonalInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.PersonalInfoUpdatingRequest request = ((Midway.ObjectModel.PersonalInfoUpdatingRequest)(inValues[1]));
            return this.BeginUpdateEmployeePersonalInfo(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndUpdateEmployeePersonalInfo(System.IAsyncResult result) {
            Midway.ObjectModel.PersonalInfoUpdatingResponse retVal = this.EndUpdateEmployeePersonalInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateEmployeePersonalInfoCompleted(object state) {
            if ((this.UpdateEmployeePersonalInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEmployeePersonalInfoCompleted(this, new UpdateEmployeePersonalInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEmployeePersonalInfoAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.PersonalInfoUpdatingRequest request) {
            this.UpdateEmployeePersonalInfoAsync(credentials, request, null);
        }
        
        public void UpdateEmployeePersonalInfoAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.PersonalInfoUpdatingRequest request, object userState) {
            if ((this.onBeginUpdateEmployeePersonalInfoDelegate == null)) {
                this.onBeginUpdateEmployeePersonalInfoDelegate = new BeginOperationDelegate(this.OnBeginUpdateEmployeePersonalInfo);
            }
            if ((this.onEndUpdateEmployeePersonalInfoDelegate == null)) {
                this.onEndUpdateEmployeePersonalInfoDelegate = new EndOperationDelegate(this.OnEndUpdateEmployeePersonalInfo);
            }
            if ((this.onUpdateEmployeePersonalInfoCompletedDelegate == null)) {
                this.onUpdateEmployeePersonalInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeePersonalInfoCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEmployeePersonalInfoDelegate, new object[] {
                        credentials,
                        request}, this.onEndUpdateEmployeePersonalInfoDelegate, this.onUpdateEmployeePersonalInfoCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.CertificateUpdatingResponse UpdateEmployeeCertificate(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.CertificateUpdatingRequest request) {
            return base.Channel.UpdateEmployeeCertificate(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateEmployeeCertificate(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.CertificateUpdatingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateEmployeeCertificate(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.CertificateUpdatingResponse EndUpdateEmployeeCertificate(System.IAsyncResult result) {
            return base.Channel.EndUpdateEmployeeCertificate(result);
        }
        
        private System.IAsyncResult OnBeginUpdateEmployeeCertificate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.CertificateUpdatingRequest request = ((Midway.ObjectModel.CertificateUpdatingRequest)(inValues[1]));
            return this.BeginUpdateEmployeeCertificate(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndUpdateEmployeeCertificate(System.IAsyncResult result) {
            Midway.ObjectModel.CertificateUpdatingResponse retVal = this.EndUpdateEmployeeCertificate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateEmployeeCertificateCompleted(object state) {
            if ((this.UpdateEmployeeCertificateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateEmployeeCertificateCompleted(this, new UpdateEmployeeCertificateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateEmployeeCertificateAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.CertificateUpdatingRequest request) {
            this.UpdateEmployeeCertificateAsync(credentials, request, null);
        }
        
        public void UpdateEmployeeCertificateAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.CertificateUpdatingRequest request, object userState) {
            if ((this.onBeginUpdateEmployeeCertificateDelegate == null)) {
                this.onBeginUpdateEmployeeCertificateDelegate = new BeginOperationDelegate(this.OnBeginUpdateEmployeeCertificate);
            }
            if ((this.onEndUpdateEmployeeCertificateDelegate == null)) {
                this.onEndUpdateEmployeeCertificateDelegate = new EndOperationDelegate(this.OnEndUpdateEmployeeCertificate);
            }
            if ((this.onUpdateEmployeeCertificateCompletedDelegate == null)) {
                this.onUpdateEmployeeCertificateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateEmployeeCertificateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateEmployeeCertificateDelegate, new object[] {
                        credentials,
                        request}, this.onEndUpdateEmployeeCertificateDelegate, this.onUpdateEmployeeCertificateCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.PasswordUpdatingResponse UpdatePassword(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.PasswordUpdatingRequest request) {
            return base.Channel.UpdatePassword(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdatePassword(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.PasswordUpdatingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdatePassword(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.PasswordUpdatingResponse EndUpdatePassword(System.IAsyncResult result) {
            return base.Channel.EndUpdatePassword(result);
        }
        
        private System.IAsyncResult OnBeginUpdatePassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.PasswordUpdatingRequest request = ((Midway.ObjectModel.PasswordUpdatingRequest)(inValues[1]));
            return this.BeginUpdatePassword(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndUpdatePassword(System.IAsyncResult result) {
            Midway.ObjectModel.PasswordUpdatingResponse retVal = this.EndUpdatePassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdatePasswordCompleted(object state) {
            if ((this.UpdatePasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdatePasswordCompleted(this, new UpdatePasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdatePasswordAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.PasswordUpdatingRequest request) {
            this.UpdatePasswordAsync(credentials, request, null);
        }
        
        public void UpdatePasswordAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.PasswordUpdatingRequest request, object userState) {
            if ((this.onBeginUpdatePasswordDelegate == null)) {
                this.onBeginUpdatePasswordDelegate = new BeginOperationDelegate(this.OnBeginUpdatePassword);
            }
            if ((this.onEndUpdatePasswordDelegate == null)) {
                this.onEndUpdatePasswordDelegate = new EndOperationDelegate(this.OnEndUpdatePassword);
            }
            if ((this.onUpdatePasswordCompletedDelegate == null)) {
                this.onUpdatePasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdatePasswordCompleted);
            }
            base.InvokeAsync(this.onBeginUpdatePasswordDelegate, new object[] {
                        credentials,
                        request}, this.onEndUpdatePasswordDelegate, this.onUpdatePasswordCompletedDelegate, userState);
        }
        
        public void MoveDraftMessage(string authToken, string boxId, string draftMessageId, string employeeId) {
            base.Channel.MoveDraftMessage(authToken, boxId, draftMessageId, employeeId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMoveDraftMessage(string authToken, string boxId, string draftMessageId, string employeeId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveDraftMessage(authToken, boxId, draftMessageId, employeeId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndMoveDraftMessage(System.IAsyncResult result) {
            base.Channel.EndMoveDraftMessage(result);
        }
        
        private System.IAsyncResult OnBeginMoveDraftMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string draftMessageId = ((string)(inValues[2]));
            string employeeId = ((string)(inValues[3]));
            return this.BeginMoveDraftMessage(authToken, boxId, draftMessageId, employeeId, callback, asyncState);
        }
        
        private object[] OnEndMoveDraftMessage(System.IAsyncResult result) {
            this.EndMoveDraftMessage(result);
            return null;
        }
        
        private void OnMoveDraftMessageCompleted(object state) {
            if ((this.MoveDraftMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveDraftMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveDraftMessageAsync(string authToken, string boxId, string draftMessageId, string employeeId) {
            this.MoveDraftMessageAsync(authToken, boxId, draftMessageId, employeeId, null);
        }
        
        public void MoveDraftMessageAsync(string authToken, string boxId, string draftMessageId, string employeeId, object userState) {
            if ((this.onBeginMoveDraftMessageDelegate == null)) {
                this.onBeginMoveDraftMessageDelegate = new BeginOperationDelegate(this.OnBeginMoveDraftMessage);
            }
            if ((this.onEndMoveDraftMessageDelegate == null)) {
                this.onEndMoveDraftMessageDelegate = new EndOperationDelegate(this.OnEndMoveDraftMessage);
            }
            if ((this.onMoveDraftMessageCompletedDelegate == null)) {
                this.onMoveDraftMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveDraftMessageCompleted);
            }
            base.InvokeAsync(this.onBeginMoveDraftMessageDelegate, new object[] {
                        authToken,
                        boxId,
                        draftMessageId,
                        employeeId}, this.onEndMoveDraftMessageDelegate, this.onMoveDraftMessageCompletedDelegate, userState);
        }
        
        public void MoveDraftMessageV2(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DraftMessageMovingSettings settings) {
            base.Channel.MoveDraftMessageV2(credentials, settings);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMoveDraftMessageV2(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DraftMessageMovingSettings settings, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveDraftMessageV2(credentials, settings, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndMoveDraftMessageV2(System.IAsyncResult result) {
            base.Channel.EndMoveDraftMessageV2(result);
        }
        
        private System.IAsyncResult OnBeginMoveDraftMessageV2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.DraftMessageMovingSettings settings = ((Midway.ObjectModel.DraftMessageMovingSettings)(inValues[1]));
            return this.BeginMoveDraftMessageV2(credentials, settings, callback, asyncState);
        }
        
        private object[] OnEndMoveDraftMessageV2(System.IAsyncResult result) {
            this.EndMoveDraftMessageV2(result);
            return null;
        }
        
        private void OnMoveDraftMessageV2Completed(object state) {
            if ((this.MoveDraftMessageV2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveDraftMessageV2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveDraftMessageV2Async(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DraftMessageMovingSettings settings) {
            this.MoveDraftMessageV2Async(credentials, settings, null);
        }
        
        public void MoveDraftMessageV2Async(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DraftMessageMovingSettings settings, object userState) {
            if ((this.onBeginMoveDraftMessageV2Delegate == null)) {
                this.onBeginMoveDraftMessageV2Delegate = new BeginOperationDelegate(this.OnBeginMoveDraftMessageV2);
            }
            if ((this.onEndMoveDraftMessageV2Delegate == null)) {
                this.onEndMoveDraftMessageV2Delegate = new EndOperationDelegate(this.OnEndMoveDraftMessageV2);
            }
            if ((this.onMoveDraftMessageV2CompletedDelegate == null)) {
                this.onMoveDraftMessageV2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveDraftMessageV2Completed);
            }
            base.InvokeAsync(this.onBeginMoveDraftMessageV2Delegate, new object[] {
                        credentials,
                        settings}, this.onEndMoveDraftMessageV2Delegate, this.onMoveDraftMessageV2CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.Utility.EnumValuesResponse GetEnumValues(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.Utility.EnumValuesRequest request) {
            return base.Channel.GetEnumValues(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEnumValues(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.Utility.EnumValuesRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEnumValues(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.Utility.EnumValuesResponse EndGetEnumValues(System.IAsyncResult result) {
            return base.Channel.EndGetEnumValues(result);
        }
        
        private System.IAsyncResult OnBeginGetEnumValues(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.Utility.EnumValuesRequest request = ((Midway.ObjectModel.Utility.EnumValuesRequest)(inValues[1]));
            return this.BeginGetEnumValues(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGetEnumValues(System.IAsyncResult result) {
            Midway.ObjectModel.Utility.EnumValuesResponse retVal = this.EndGetEnumValues(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEnumValuesCompleted(object state) {
            if ((this.GetEnumValuesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEnumValuesCompleted(this, new GetEnumValuesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEnumValuesAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.Utility.EnumValuesRequest request) {
            this.GetEnumValuesAsync(credentials, request, null);
        }
        
        public void GetEnumValuesAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.Utility.EnumValuesRequest request, object userState) {
            if ((this.onBeginGetEnumValuesDelegate == null)) {
                this.onBeginGetEnumValuesDelegate = new BeginOperationDelegate(this.OnBeginGetEnumValues);
            }
            if ((this.onEndGetEnumValuesDelegate == null)) {
                this.onEndGetEnumValuesDelegate = new EndOperationDelegate(this.OnEndGetEnumValues);
            }
            if ((this.onGetEnumValuesCompletedDelegate == null)) {
                this.onGetEnumValuesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEnumValuesCompleted);
            }
            base.InvokeAsync(this.onBeginGetEnumValuesDelegate, new object[] {
                        credentials,
                        request}, this.onEndGetEnumValuesDelegate, this.onGetEnumValuesCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentPrintingResponse PrintDocument(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentPrintingRequest request) {
            return base.Channel.PrintDocument(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginPrintDocument(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentPrintingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginPrintDocument(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentPrintingResponse EndPrintDocument(System.IAsyncResult result) {
            return base.Channel.EndPrintDocument(result);
        }
        
        private System.IAsyncResult OnBeginPrintDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.DocumentPrintingRequest request = ((Midway.ObjectModel.DocumentPrintingRequest)(inValues[1]));
            return this.BeginPrintDocument(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndPrintDocument(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentPrintingResponse retVal = this.EndPrintDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnPrintDocumentCompleted(object state) {
            if ((this.PrintDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.PrintDocumentCompleted(this, new PrintDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void PrintDocumentAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentPrintingRequest request) {
            this.PrintDocumentAsync(credentials, request, null);
        }
        
        public void PrintDocumentAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentPrintingRequest request, object userState) {
            if ((this.onBeginPrintDocumentDelegate == null)) {
                this.onBeginPrintDocumentDelegate = new BeginOperationDelegate(this.OnBeginPrintDocument);
            }
            if ((this.onEndPrintDocumentDelegate == null)) {
                this.onEndPrintDocumentDelegate = new EndOperationDelegate(this.OnEndPrintDocument);
            }
            if ((this.onPrintDocumentCompletedDelegate == null)) {
                this.onPrintDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnPrintDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginPrintDocumentDelegate, new object[] {
                        credentials,
                        request}, this.onEndPrintDocumentDelegate, this.onPrintDocumentCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentTypeVersionsGettingResponse GetDocumentTypeVersions(Midway.ObjectModel.DocumentTypeVersionsGettingRequest request) {
            return base.Channel.GetDocumentTypeVersions(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDocumentTypeVersions(Midway.ObjectModel.DocumentTypeVersionsGettingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDocumentTypeVersions(request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentTypeVersionsGettingResponse EndGetDocumentTypeVersions(System.IAsyncResult result) {
            return base.Channel.EndGetDocumentTypeVersions(result);
        }
        
        private System.IAsyncResult OnBeginGetDocumentTypeVersions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.DocumentTypeVersionsGettingRequest request = ((Midway.ObjectModel.DocumentTypeVersionsGettingRequest)(inValues[0]));
            return this.BeginGetDocumentTypeVersions(request, callback, asyncState);
        }
        
        private object[] OnEndGetDocumentTypeVersions(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentTypeVersionsGettingResponse retVal = this.EndGetDocumentTypeVersions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDocumentTypeVersionsCompleted(object state) {
            if ((this.GetDocumentTypeVersionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDocumentTypeVersionsCompleted(this, new GetDocumentTypeVersionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDocumentTypeVersionsAsync(Midway.ObjectModel.DocumentTypeVersionsGettingRequest request) {
            this.GetDocumentTypeVersionsAsync(request, null);
        }
        
        public void GetDocumentTypeVersionsAsync(Midway.ObjectModel.DocumentTypeVersionsGettingRequest request, object userState) {
            if ((this.onBeginGetDocumentTypeVersionsDelegate == null)) {
                this.onBeginGetDocumentTypeVersionsDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentTypeVersions);
            }
            if ((this.onEndGetDocumentTypeVersionsDelegate == null)) {
                this.onEndGetDocumentTypeVersionsDelegate = new EndOperationDelegate(this.OnEndGetDocumentTypeVersions);
            }
            if ((this.onGetDocumentTypeVersionsCompletedDelegate == null)) {
                this.onGetDocumentTypeVersionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentTypeVersionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetDocumentTypeVersionsDelegate, new object[] {
                        request}, this.onEndGetDocumentTypeVersionsDelegate, this.onGetDocumentTypeVersionsCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.ProviderIdentificationCentersSearchingResponse SearchProviderIdentificationCenters(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.ProviderIdentificationCentersSearchingRequest request) {
            return base.Channel.SearchProviderIdentificationCenters(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchProviderIdentificationCenters(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.ProviderIdentificationCentersSearchingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchProviderIdentificationCenters(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.ProviderIdentificationCentersSearchingResponse EndSearchProviderIdentificationCenters(System.IAsyncResult result) {
            return base.Channel.EndSearchProviderIdentificationCenters(result);
        }
        
        private System.IAsyncResult OnBeginSearchProviderIdentificationCenters(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.ProviderIdentificationCentersSearchingRequest request = ((Midway.ObjectModel.ProviderIdentificationCentersSearchingRequest)(inValues[1]));
            return this.BeginSearchProviderIdentificationCenters(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndSearchProviderIdentificationCenters(System.IAsyncResult result) {
            Midway.ObjectModel.ProviderIdentificationCentersSearchingResponse retVal = this.EndSearchProviderIdentificationCenters(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchProviderIdentificationCentersCompleted(object state) {
            if ((this.SearchProviderIdentificationCentersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchProviderIdentificationCentersCompleted(this, new SearchProviderIdentificationCentersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchProviderIdentificationCentersAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.ProviderIdentificationCentersSearchingRequest request) {
            this.SearchProviderIdentificationCentersAsync(credentials, request, null);
        }
        
        public void SearchProviderIdentificationCentersAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.ProviderIdentificationCentersSearchingRequest request, object userState) {
            if ((this.onBeginSearchProviderIdentificationCentersDelegate == null)) {
                this.onBeginSearchProviderIdentificationCentersDelegate = new BeginOperationDelegate(this.OnBeginSearchProviderIdentificationCenters);
            }
            if ((this.onEndSearchProviderIdentificationCentersDelegate == null)) {
                this.onEndSearchProviderIdentificationCentersDelegate = new EndOperationDelegate(this.OnEndSearchProviderIdentificationCenters);
            }
            if ((this.onSearchProviderIdentificationCentersCompletedDelegate == null)) {
                this.onSearchProviderIdentificationCentersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchProviderIdentificationCentersCompleted);
            }
            base.InvokeAsync(this.onBeginSearchProviderIdentificationCentersDelegate, new object[] {
                        credentials,
                        request}, this.onEndSearchProviderIdentificationCentersDelegate, this.onSearchProviderIdentificationCentersCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingResponse ParseGoodsTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingRequest request) {
            return base.Channel.ParseGoodsTransportWaybillConsignorTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGoodsTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGoodsTransportWaybillConsignorTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingResponse EndParseGoodsTransportWaybillConsignorTitle(System.IAsyncResult result) {
            return base.Channel.EndParseGoodsTransportWaybillConsignorTitle(result);
        }
        
        private System.IAsyncResult OnBeginParseGoodsTransportWaybillConsignorTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingRequest request = ((Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingRequest)(inValues[1]));
            return this.BeginParseGoodsTransportWaybillConsignorTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseGoodsTransportWaybillConsignorTitle(System.IAsyncResult result) {
            Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingResponse retVal = this.EndParseGoodsTransportWaybillConsignorTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGoodsTransportWaybillConsignorTitleCompleted(object state) {
            if ((this.ParseGoodsTransportWaybillConsignorTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGoodsTransportWaybillConsignorTitleCompleted(this, new ParseGoodsTransportWaybillConsignorTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGoodsTransportWaybillConsignorTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingRequest request) {
            this.ParseGoodsTransportWaybillConsignorTitleAsync(credentials, request, null);
        }
        
        public void ParseGoodsTransportWaybillConsignorTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleParsingRequest request, object userState) {
            if ((this.onBeginParseGoodsTransportWaybillConsignorTitleDelegate == null)) {
                this.onBeginParseGoodsTransportWaybillConsignorTitleDelegate = new BeginOperationDelegate(this.OnBeginParseGoodsTransportWaybillConsignorTitle);
            }
            if ((this.onEndParseGoodsTransportWaybillConsignorTitleDelegate == null)) {
                this.onEndParseGoodsTransportWaybillConsignorTitleDelegate = new EndOperationDelegate(this.OnEndParseGoodsTransportWaybillConsignorTitle);
            }
            if ((this.onParseGoodsTransportWaybillConsignorTitleCompletedDelegate == null)) {
                this.onParseGoodsTransportWaybillConsignorTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGoodsTransportWaybillConsignorTitleCompleted);
            }
            base.InvokeAsync(this.onBeginParseGoodsTransportWaybillConsignorTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndParseGoodsTransportWaybillConsignorTitleDelegate, this.onParseGoodsTransportWaybillConsignorTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingResponse ParseGoodsTransportWaybillConsigneeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingRequest request) {
            return base.Channel.ParseGoodsTransportWaybillConsigneeTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGoodsTransportWaybillConsigneeTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGoodsTransportWaybillConsigneeTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingResponse EndParseGoodsTransportWaybillConsigneeTitle(System.IAsyncResult result) {
            return base.Channel.EndParseGoodsTransportWaybillConsigneeTitle(result);
        }
        
        private System.IAsyncResult OnBeginParseGoodsTransportWaybillConsigneeTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingRequest request = ((Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingRequest)(inValues[1]));
            return this.BeginParseGoodsTransportWaybillConsigneeTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseGoodsTransportWaybillConsigneeTitle(System.IAsyncResult result) {
            Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingResponse retVal = this.EndParseGoodsTransportWaybillConsigneeTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGoodsTransportWaybillConsigneeTitleCompleted(object state) {
            if ((this.ParseGoodsTransportWaybillConsigneeTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGoodsTransportWaybillConsigneeTitleCompleted(this, new ParseGoodsTransportWaybillConsigneeTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGoodsTransportWaybillConsigneeTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingRequest request) {
            this.ParseGoodsTransportWaybillConsigneeTitleAsync(credentials, request, null);
        }
        
        public void ParseGoodsTransportWaybillConsigneeTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleParsingRequest request, object userState) {
            if ((this.onBeginParseGoodsTransportWaybillConsigneeTitleDelegate == null)) {
                this.onBeginParseGoodsTransportWaybillConsigneeTitleDelegate = new BeginOperationDelegate(this.OnBeginParseGoodsTransportWaybillConsigneeTitle);
            }
            if ((this.onEndParseGoodsTransportWaybillConsigneeTitleDelegate == null)) {
                this.onEndParseGoodsTransportWaybillConsigneeTitleDelegate = new EndOperationDelegate(this.OnEndParseGoodsTransportWaybillConsigneeTitle);
            }
            if ((this.onParseGoodsTransportWaybillConsigneeTitleCompletedDelegate == null)) {
                this.onParseGoodsTransportWaybillConsigneeTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGoodsTransportWaybillConsigneeTitleCompleted);
            }
            base.InvokeAsync(this.onBeginParseGoodsTransportWaybillConsigneeTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndParseGoodsTransportWaybillConsigneeTitleDelegate, this.onParseGoodsTransportWaybillConsigneeTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleParsingResponse ParseGoodsTransportWaybillCargoReceivedTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedParsingRequest request) {
            return base.Channel.ParseGoodsTransportWaybillCargoReceivedTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGoodsTransportWaybillCargoReceivedTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGoodsTransportWaybillCargoReceivedTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleParsingResponse EndParseGoodsTransportWaybillCargoReceivedTitle(System.IAsyncResult result) {
            return base.Channel.EndParseGoodsTransportWaybillCargoReceivedTitle(result);
        }
        
        private System.IAsyncResult OnBeginParseGoodsTransportWaybillCargoReceivedTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedParsingRequest request = ((Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedParsingRequest)(inValues[1]));
            return this.BeginParseGoodsTransportWaybillCargoReceivedTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseGoodsTransportWaybillCargoReceivedTitle(System.IAsyncResult result) {
            Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedTitleParsingResponse retVal = this.EndParseGoodsTransportWaybillCargoReceivedTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGoodsTransportWaybillCargoReceivedTitleCompleted(object state) {
            if ((this.ParseGoodsTransportWaybillCargoReceivedTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGoodsTransportWaybillCargoReceivedTitleCompleted(this, new ParseGoodsTransportWaybillCargoReceivedTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGoodsTransportWaybillCargoReceivedTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedParsingRequest request) {
            this.ParseGoodsTransportWaybillCargoReceivedTitleAsync(credentials, request, null);
        }
        
        public void ParseGoodsTransportWaybillCargoReceivedTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoReceivedParsingRequest request, object userState) {
            if ((this.onBeginParseGoodsTransportWaybillCargoReceivedTitleDelegate == null)) {
                this.onBeginParseGoodsTransportWaybillCargoReceivedTitleDelegate = new BeginOperationDelegate(this.OnBeginParseGoodsTransportWaybillCargoReceivedTitle);
            }
            if ((this.onEndParseGoodsTransportWaybillCargoReceivedTitleDelegate == null)) {
                this.onEndParseGoodsTransportWaybillCargoReceivedTitleDelegate = new EndOperationDelegate(this.OnEndParseGoodsTransportWaybillCargoReceivedTitle);
            }
            if ((this.onParseGoodsTransportWaybillCargoReceivedTitleCompletedDelegate == null)) {
                this.onParseGoodsTransportWaybillCargoReceivedTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGoodsTransportWaybillCargoReceivedTitleCompleted);
            }
            base.InvokeAsync(this.onBeginParseGoodsTransportWaybillCargoReceivedTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndParseGoodsTransportWaybillCargoReceivedTitleDelegate, this.onParseGoodsTransportWaybillCargoReceivedTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleParsingResponse ParseGoodsTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredParsingRequest request) {
            return base.Channel.ParseGoodsTransportWaybillCargoDeliveredTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginParseGoodsTransportWaybillCargoDeliveredTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredParsingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginParseGoodsTransportWaybillCargoDeliveredTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleParsingResponse EndParseGoodsTransportWaybillCargoDeliveredTitle(System.IAsyncResult result) {
            return base.Channel.EndParseGoodsTransportWaybillCargoDeliveredTitle(result);
        }
        
        private System.IAsyncResult OnBeginParseGoodsTransportWaybillCargoDeliveredTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredParsingRequest request = ((Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredParsingRequest)(inValues[1]));
            return this.BeginParseGoodsTransportWaybillCargoDeliveredTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndParseGoodsTransportWaybillCargoDeliveredTitle(System.IAsyncResult result) {
            Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredTitleParsingResponse retVal = this.EndParseGoodsTransportWaybillCargoDeliveredTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnParseGoodsTransportWaybillCargoDeliveredTitleCompleted(object state) {
            if ((this.ParseGoodsTransportWaybillCargoDeliveredTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ParseGoodsTransportWaybillCargoDeliveredTitleCompleted(this, new ParseGoodsTransportWaybillCargoDeliveredTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ParseGoodsTransportWaybillCargoDeliveredTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredParsingRequest request) {
            this.ParseGoodsTransportWaybillCargoDeliveredTitleAsync(credentials, request, null);
        }
        
        public void ParseGoodsTransportWaybillCargoDeliveredTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillCargoDeliveredParsingRequest request, object userState) {
            if ((this.onBeginParseGoodsTransportWaybillCargoDeliveredTitleDelegate == null)) {
                this.onBeginParseGoodsTransportWaybillCargoDeliveredTitleDelegate = new BeginOperationDelegate(this.OnBeginParseGoodsTransportWaybillCargoDeliveredTitle);
            }
            if ((this.onEndParseGoodsTransportWaybillCargoDeliveredTitleDelegate == null)) {
                this.onEndParseGoodsTransportWaybillCargoDeliveredTitleDelegate = new EndOperationDelegate(this.OnEndParseGoodsTransportWaybillCargoDeliveredTitle);
            }
            if ((this.onParseGoodsTransportWaybillCargoDeliveredTitleCompletedDelegate == null)) {
                this.onParseGoodsTransportWaybillCargoDeliveredTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnParseGoodsTransportWaybillCargoDeliveredTitleCompleted);
            }
            base.InvokeAsync(this.onBeginParseGoodsTransportWaybillCargoDeliveredTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndParseGoodsTransportWaybillCargoDeliveredTitleDelegate, this.onParseGoodsTransportWaybillCargoDeliveredTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateGoodsTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleGeneratingRequest request) {
            return base.Channel.GenerateGoodsTransportWaybillConsignorTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGoodsTransportWaybillConsignorTitle(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGoodsTransportWaybillConsignorTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateGoodsTransportWaybillConsignorTitle(System.IAsyncResult result) {
            return base.Channel.EndGenerateGoodsTransportWaybillConsignorTitle(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGoodsTransportWaybillConsignorTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.UserOperationCredentials credentials = ((Midway.ObjectModel.UserOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleGeneratingRequest request = ((Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleGeneratingRequest)(inValues[1]));
            return this.BeginGenerateGoodsTransportWaybillConsignorTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateGoodsTransportWaybillConsignorTitle(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateGoodsTransportWaybillConsignorTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGoodsTransportWaybillConsignorTitleCompleted(object state) {
            if ((this.GenerateGoodsTransportWaybillConsignorTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGoodsTransportWaybillConsignorTitleCompleted(this, new GenerateGoodsTransportWaybillConsignorTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGoodsTransportWaybillConsignorTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleGeneratingRequest request) {
            this.GenerateGoodsTransportWaybillConsignorTitleAsync(credentials, request, null);
        }
        
        public void GenerateGoodsTransportWaybillConsignorTitleAsync(Midway.ObjectModel.UserOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsignorTitleGeneratingRequest request, object userState) {
            if ((this.onBeginGenerateGoodsTransportWaybillConsignorTitleDelegate == null)) {
                this.onBeginGenerateGoodsTransportWaybillConsignorTitleDelegate = new BeginOperationDelegate(this.OnBeginGenerateGoodsTransportWaybillConsignorTitle);
            }
            if ((this.onEndGenerateGoodsTransportWaybillConsignorTitleDelegate == null)) {
                this.onEndGenerateGoodsTransportWaybillConsignorTitleDelegate = new EndOperationDelegate(this.OnEndGenerateGoodsTransportWaybillConsignorTitle);
            }
            if ((this.onGenerateGoodsTransportWaybillConsignorTitleCompletedDelegate == null)) {
                this.onGenerateGoodsTransportWaybillConsignorTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGoodsTransportWaybillConsignorTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateGoodsTransportWaybillConsignorTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateGoodsTransportWaybillConsignorTitleDelegate, this.onGenerateGoodsTransportWaybillConsignorTitleCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentGenerationResponse GenerateGoodsTransportWaybillConsigneeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleGeneratingRequest request) {
            return base.Channel.GenerateGoodsTransportWaybillConsigneeTitle(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateGoodsTransportWaybillConsigneeTitle(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleGeneratingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateGoodsTransportWaybillConsigneeTitle(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentGenerationResponse EndGenerateGoodsTransportWaybillConsigneeTitle(System.IAsyncResult result) {
            return base.Channel.EndGenerateGoodsTransportWaybillConsigneeTitle(result);
        }
        
        private System.IAsyncResult OnBeginGenerateGoodsTransportWaybillConsigneeTitle(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleGeneratingRequest request = ((Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleGeneratingRequest)(inValues[1]));
            return this.BeginGenerateGoodsTransportWaybillConsigneeTitle(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndGenerateGoodsTransportWaybillConsigneeTitle(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentGenerationResponse retVal = this.EndGenerateGoodsTransportWaybillConsigneeTitle(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateGoodsTransportWaybillConsigneeTitleCompleted(object state) {
            if ((this.GenerateGoodsTransportWaybillConsigneeTitleCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateGoodsTransportWaybillConsigneeTitleCompleted(this, new GenerateGoodsTransportWaybillConsigneeTitleCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateGoodsTransportWaybillConsigneeTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleGeneratingRequest request) {
            this.GenerateGoodsTransportWaybillConsigneeTitleAsync(credentials, request, null);
        }
        
        public void GenerateGoodsTransportWaybillConsigneeTitleAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.GoodsTransportWaybill.GoodsTransportWaybillConsigneeTitleGeneratingRequest request, object userState) {
            if ((this.onBeginGenerateGoodsTransportWaybillConsigneeTitleDelegate == null)) {
                this.onBeginGenerateGoodsTransportWaybillConsigneeTitleDelegate = new BeginOperationDelegate(this.OnBeginGenerateGoodsTransportWaybillConsigneeTitle);
            }
            if ((this.onEndGenerateGoodsTransportWaybillConsigneeTitleDelegate == null)) {
                this.onEndGenerateGoodsTransportWaybillConsigneeTitleDelegate = new EndOperationDelegate(this.OnEndGenerateGoodsTransportWaybillConsigneeTitle);
            }
            if ((this.onGenerateGoodsTransportWaybillConsigneeTitleCompletedDelegate == null)) {
                this.onGenerateGoodsTransportWaybillConsigneeTitleCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateGoodsTransportWaybillConsigneeTitleCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateGoodsTransportWaybillConsigneeTitleDelegate, new object[] {
                        credentials,
                        request}, this.onEndGenerateGoodsTransportWaybillConsigneeTitleDelegate, this.onGenerateGoodsTransportWaybillConsigneeTitleCompletedDelegate, userState);
        }
        
        public string Authenticate(string login, string password, string applicationId) {
            return base.Channel.Authenticate(login, password, applicationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuthenticate(string login, string password, string applicationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticate(login, password, applicationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndAuthenticate(System.IAsyncResult result) {
            return base.Channel.EndAuthenticate(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string login = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string applicationId = ((string)(inValues[2]));
            return this.BeginAuthenticate(login, password, applicationId, callback, asyncState);
        }
        
        private object[] OnEndAuthenticate(System.IAsyncResult result) {
            string retVal = this.EndAuthenticate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateCompleted(object state) {
            if ((this.AuthenticateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateCompleted(this, new AuthenticateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateAsync(string login, string password, string applicationId) {
            this.AuthenticateAsync(login, password, applicationId, null);
        }
        
        public void AuthenticateAsync(string login, string password, string applicationId, object userState) {
            if ((this.onBeginAuthenticateDelegate == null)) {
                this.onBeginAuthenticateDelegate = new BeginOperationDelegate(this.OnBeginAuthenticate);
            }
            if ((this.onEndAuthenticateDelegate == null)) {
                this.onEndAuthenticateDelegate = new EndOperationDelegate(this.OnEndAuthenticate);
            }
            if ((this.onAuthenticateCompletedDelegate == null)) {
                this.onAuthenticateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateDelegate, new object[] {
                        login,
                        password,
                        applicationId}, this.onEndAuthenticateDelegate, this.onAuthenticateCompletedDelegate, userState);
        }
        
        public string AuthenticateWithCertificate(string certHash, string applicationId) {
            return base.Channel.AuthenticateWithCertificate(certHash, applicationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuthenticateWithCertificate(string certHash, string applicationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticateWithCertificate(certHash, applicationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndAuthenticateWithCertificate(System.IAsyncResult result) {
            return base.Channel.EndAuthenticateWithCertificate(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticateWithCertificate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string certHash = ((string)(inValues[0]));
            string applicationId = ((string)(inValues[1]));
            return this.BeginAuthenticateWithCertificate(certHash, applicationId, callback, asyncState);
        }
        
        private object[] OnEndAuthenticateWithCertificate(System.IAsyncResult result) {
            string retVal = this.EndAuthenticateWithCertificate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateWithCertificateCompleted(object state) {
            if ((this.AuthenticateWithCertificateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateWithCertificateCompleted(this, new AuthenticateWithCertificateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateWithCertificateAsync(string certHash, string applicationId) {
            this.AuthenticateWithCertificateAsync(certHash, applicationId, null);
        }
        
        public void AuthenticateWithCertificateAsync(string certHash, string applicationId, object userState) {
            if ((this.onBeginAuthenticateWithCertificateDelegate == null)) {
                this.onBeginAuthenticateWithCertificateDelegate = new BeginOperationDelegate(this.OnBeginAuthenticateWithCertificate);
            }
            if ((this.onEndAuthenticateWithCertificateDelegate == null)) {
                this.onEndAuthenticateWithCertificateDelegate = new EndOperationDelegate(this.OnEndAuthenticateWithCertificate);
            }
            if ((this.onAuthenticateWithCertificateCompletedDelegate == null)) {
                this.onAuthenticateWithCertificateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateWithCertificateCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateWithCertificateDelegate, new object[] {
                        certHash,
                        applicationId}, this.onEndAuthenticateWithCertificateDelegate, this.onAuthenticateWithCertificateCompletedDelegate, userState);
        }
        
        public string AuthenticateWithCertificateAndPassword(string thumbprint, string password, string applicationId) {
            return base.Channel.AuthenticateWithCertificateAndPassword(thumbprint, password, applicationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuthenticateWithCertificateAndPassword(string thumbprint, string password, string applicationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticateWithCertificateAndPassword(thumbprint, password, applicationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndAuthenticateWithCertificateAndPassword(System.IAsyncResult result) {
            return base.Channel.EndAuthenticateWithCertificateAndPassword(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticateWithCertificateAndPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string thumbprint = ((string)(inValues[0]));
            string password = ((string)(inValues[1]));
            string applicationId = ((string)(inValues[2]));
            return this.BeginAuthenticateWithCertificateAndPassword(thumbprint, password, applicationId, callback, asyncState);
        }
        
        private object[] OnEndAuthenticateWithCertificateAndPassword(System.IAsyncResult result) {
            string retVal = this.EndAuthenticateWithCertificateAndPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateWithCertificateAndPasswordCompleted(object state) {
            if ((this.AuthenticateWithCertificateAndPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateWithCertificateAndPasswordCompleted(this, new AuthenticateWithCertificateAndPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateWithCertificateAndPasswordAsync(string thumbprint, string password, string applicationId) {
            this.AuthenticateWithCertificateAndPasswordAsync(thumbprint, password, applicationId, null);
        }
        
        public void AuthenticateWithCertificateAndPasswordAsync(string thumbprint, string password, string applicationId, object userState) {
            if ((this.onBeginAuthenticateWithCertificateAndPasswordDelegate == null)) {
                this.onBeginAuthenticateWithCertificateAndPasswordDelegate = new BeginOperationDelegate(this.OnBeginAuthenticateWithCertificateAndPassword);
            }
            if ((this.onEndAuthenticateWithCertificateAndPasswordDelegate == null)) {
                this.onEndAuthenticateWithCertificateAndPasswordDelegate = new EndOperationDelegate(this.OnEndAuthenticateWithCertificateAndPassword);
            }
            if ((this.onAuthenticateWithCertificateAndPasswordCompletedDelegate == null)) {
                this.onAuthenticateWithCertificateAndPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateWithCertificateAndPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateWithCertificateAndPasswordDelegate, new object[] {
                        thumbprint,
                        password,
                        applicationId}, this.onEndAuthenticateWithCertificateAndPasswordDelegate, this.onAuthenticateWithCertificateAndPasswordCompletedDelegate, userState);
        }
        
        public byte[] AuthenticateWithCertificate2(string certHash, string applicationId) {
            return base.Channel.AuthenticateWithCertificate2(certHash, applicationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuthenticateWithCertificate2(string certHash, string applicationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticateWithCertificate2(certHash, applicationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndAuthenticateWithCertificate2(System.IAsyncResult result) {
            return base.Channel.EndAuthenticateWithCertificate2(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticateWithCertificate2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string certHash = ((string)(inValues[0]));
            string applicationId = ((string)(inValues[1]));
            return this.BeginAuthenticateWithCertificate2(certHash, applicationId, callback, asyncState);
        }
        
        private object[] OnEndAuthenticateWithCertificate2(System.IAsyncResult result) {
            byte[] retVal = this.EndAuthenticateWithCertificate2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateWithCertificate2Completed(object state) {
            if ((this.AuthenticateWithCertificate2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateWithCertificate2Completed(this, new AuthenticateWithCertificate2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateWithCertificate2Async(string certHash, string applicationId) {
            this.AuthenticateWithCertificate2Async(certHash, applicationId, null);
        }
        
        public void AuthenticateWithCertificate2Async(string certHash, string applicationId, object userState) {
            if ((this.onBeginAuthenticateWithCertificate2Delegate == null)) {
                this.onBeginAuthenticateWithCertificate2Delegate = new BeginOperationDelegate(this.OnBeginAuthenticateWithCertificate2);
            }
            if ((this.onEndAuthenticateWithCertificate2Delegate == null)) {
                this.onEndAuthenticateWithCertificate2Delegate = new EndOperationDelegate(this.OnEndAuthenticateWithCertificate2);
            }
            if ((this.onAuthenticateWithCertificate2CompletedDelegate == null)) {
                this.onAuthenticateWithCertificate2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateWithCertificate2Completed);
            }
            base.InvokeAsync(this.onBeginAuthenticateWithCertificate2Delegate, new object[] {
                        certHash,
                        applicationId}, this.onEndAuthenticateWithCertificate2Delegate, this.onAuthenticateWithCertificate2CompletedDelegate, userState);
        }
        
        public string AuthenticateWithIdentityToken(string identityToken, string applicationId) {
            return base.Channel.AuthenticateWithIdentityToken(identityToken, applicationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuthenticateWithIdentityToken(string identityToken, string applicationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticateWithIdentityToken(identityToken, applicationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndAuthenticateWithIdentityToken(System.IAsyncResult result) {
            return base.Channel.EndAuthenticateWithIdentityToken(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticateWithIdentityToken(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string identityToken = ((string)(inValues[0]));
            string applicationId = ((string)(inValues[1]));
            return this.BeginAuthenticateWithIdentityToken(identityToken, applicationId, callback, asyncState);
        }
        
        private object[] OnEndAuthenticateWithIdentityToken(System.IAsyncResult result) {
            string retVal = this.EndAuthenticateWithIdentityToken(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateWithIdentityTokenCompleted(object state) {
            if ((this.AuthenticateWithIdentityTokenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateWithIdentityTokenCompleted(this, new AuthenticateWithIdentityTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateWithIdentityTokenAsync(string identityToken, string applicationId) {
            this.AuthenticateWithIdentityTokenAsync(identityToken, applicationId, null);
        }
        
        public void AuthenticateWithIdentityTokenAsync(string identityToken, string applicationId, object userState) {
            if ((this.onBeginAuthenticateWithIdentityTokenDelegate == null)) {
                this.onBeginAuthenticateWithIdentityTokenDelegate = new BeginOperationDelegate(this.OnBeginAuthenticateWithIdentityToken);
            }
            if ((this.onEndAuthenticateWithIdentityTokenDelegate == null)) {
                this.onEndAuthenticateWithIdentityTokenDelegate = new EndOperationDelegate(this.OnEndAuthenticateWithIdentityToken);
            }
            if ((this.onAuthenticateWithIdentityTokenCompletedDelegate == null)) {
                this.onAuthenticateWithIdentityTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateWithIdentityTokenCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateWithIdentityTokenDelegate, new object[] {
                        identityToken,
                        applicationId}, this.onEndAuthenticateWithIdentityTokenDelegate, this.onAuthenticateWithIdentityTokenCompletedDelegate, userState);
        }
        
        public string AuthenticateWithAccessToken(string accessToken, string applicationId) {
            return base.Channel.AuthenticateWithAccessToken(accessToken, applicationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuthenticateWithAccessToken(string accessToken, string applicationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticateWithAccessToken(accessToken, applicationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndAuthenticateWithAccessToken(System.IAsyncResult result) {
            return base.Channel.EndAuthenticateWithAccessToken(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticateWithAccessToken(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string accessToken = ((string)(inValues[0]));
            string applicationId = ((string)(inValues[1]));
            return this.BeginAuthenticateWithAccessToken(accessToken, applicationId, callback, asyncState);
        }
        
        private object[] OnEndAuthenticateWithAccessToken(System.IAsyncResult result) {
            string retVal = this.EndAuthenticateWithAccessToken(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateWithAccessTokenCompleted(object state) {
            if ((this.AuthenticateWithAccessTokenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateWithAccessTokenCompleted(this, new AuthenticateWithAccessTokenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateWithAccessTokenAsync(string accessToken, string applicationId) {
            this.AuthenticateWithAccessTokenAsync(accessToken, applicationId, null);
        }
        
        public void AuthenticateWithAccessTokenAsync(string accessToken, string applicationId, object userState) {
            if ((this.onBeginAuthenticateWithAccessTokenDelegate == null)) {
                this.onBeginAuthenticateWithAccessTokenDelegate = new BeginOperationDelegate(this.OnBeginAuthenticateWithAccessToken);
            }
            if ((this.onEndAuthenticateWithAccessTokenDelegate == null)) {
                this.onEndAuthenticateWithAccessTokenDelegate = new EndOperationDelegate(this.OnEndAuthenticateWithAccessToken);
            }
            if ((this.onAuthenticateWithAccessTokenCompletedDelegate == null)) {
                this.onAuthenticateWithAccessTokenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateWithAccessTokenCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateWithAccessTokenDelegate, new object[] {
                        accessToken,
                        applicationId}, this.onEndAuthenticateWithAccessTokenDelegate, this.onAuthenticateWithAccessTokenCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.MessageInfo[] GetMessages(string authToken, string afterMessageId, string fromBox, string toBox) {
            return base.Channel.GetMessages(authToken, afterMessageId, fromBox, toBox);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMessages(string authToken, string afterMessageId, string fromBox, string toBox, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMessages(authToken, afterMessageId, fromBox, toBox, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.MessageInfo[] EndGetMessages(System.IAsyncResult result) {
            return base.Channel.EndGetMessages(result);
        }
        
        private System.IAsyncResult OnBeginGetMessages(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string afterMessageId = ((string)(inValues[1]));
            string fromBox = ((string)(inValues[2]));
            string toBox = ((string)(inValues[3]));
            return this.BeginGetMessages(authToken, afterMessageId, fromBox, toBox, callback, asyncState);
        }
        
        private object[] OnEndGetMessages(System.IAsyncResult result) {
            Midway.ObjectModel.MessageInfo[] retVal = this.EndGetMessages(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMessagesCompleted(object state) {
            if ((this.GetMessagesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMessagesCompleted(this, new GetMessagesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMessagesAsync(string authToken, string afterMessageId, string fromBox, string toBox) {
            this.GetMessagesAsync(authToken, afterMessageId, fromBox, toBox, null);
        }
        
        public void GetMessagesAsync(string authToken, string afterMessageId, string fromBox, string toBox, object userState) {
            if ((this.onBeginGetMessagesDelegate == null)) {
                this.onBeginGetMessagesDelegate = new BeginOperationDelegate(this.OnBeginGetMessages);
            }
            if ((this.onEndGetMessagesDelegate == null)) {
                this.onEndGetMessagesDelegate = new EndOperationDelegate(this.OnEndGetMessages);
            }
            if ((this.onGetMessagesCompletedDelegate == null)) {
                this.onGetMessagesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMessagesCompleted);
            }
            base.InvokeAsync(this.onBeginGetMessagesDelegate, new object[] {
                        authToken,
                        afterMessageId,
                        fromBox,
                        toBox}, this.onEndGetMessagesDelegate, this.onGetMessagesCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.Message GetMessage(string authToken, string boxId, string messageId) {
            return base.Channel.GetMessage(authToken, boxId, messageId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMessage(string authToken, string boxId, string messageId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMessage(authToken, boxId, messageId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.Message EndGetMessage(System.IAsyncResult result) {
            return base.Channel.EndGetMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string messageId = ((string)(inValues[2]));
            return this.BeginGetMessage(authToken, boxId, messageId, callback, asyncState);
        }
        
        private object[] OnEndGetMessage(System.IAsyncResult result) {
            Midway.ObjectModel.Message retVal = this.EndGetMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMessageCompleted(object state) {
            if ((this.GetMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMessageCompleted(this, new GetMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMessageAsync(string authToken, string boxId, string messageId) {
            this.GetMessageAsync(authToken, boxId, messageId, null);
        }
        
        public void GetMessageAsync(string authToken, string boxId, string messageId, object userState) {
            if ((this.onBeginGetMessageDelegate == null)) {
                this.onBeginGetMessageDelegate = new BeginOperationDelegate(this.OnBeginGetMessage);
            }
            if ((this.onEndGetMessageDelegate == null)) {
                this.onEndGetMessageDelegate = new EndOperationDelegate(this.OnEndGetMessage);
            }
            if ((this.onGetMessageCompletedDelegate == null)) {
                this.onGetMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetMessageDelegate, new object[] {
                        authToken,
                        boxId,
                        messageId}, this.onEndGetMessageDelegate, this.onGetMessageCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.Message GetMessageWithLoadOptions(string authToken, string boxId, string messageId, Midway.ObjectModel.MessageRequestParams requestParams) {
            return base.Channel.GetMessageWithLoadOptions(authToken, boxId, messageId, requestParams);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMessageWithLoadOptions(string authToken, string boxId, string messageId, Midway.ObjectModel.MessageRequestParams requestParams, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMessageWithLoadOptions(authToken, boxId, messageId, requestParams, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.Message EndGetMessageWithLoadOptions(System.IAsyncResult result) {
            return base.Channel.EndGetMessageWithLoadOptions(result);
        }
        
        private System.IAsyncResult OnBeginGetMessageWithLoadOptions(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string messageId = ((string)(inValues[2]));
            Midway.ObjectModel.MessageRequestParams requestParams = ((Midway.ObjectModel.MessageRequestParams)(inValues[3]));
            return this.BeginGetMessageWithLoadOptions(authToken, boxId, messageId, requestParams, callback, asyncState);
        }
        
        private object[] OnEndGetMessageWithLoadOptions(System.IAsyncResult result) {
            Midway.ObjectModel.Message retVal = this.EndGetMessageWithLoadOptions(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMessageWithLoadOptionsCompleted(object state) {
            if ((this.GetMessageWithLoadOptionsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMessageWithLoadOptionsCompleted(this, new GetMessageWithLoadOptionsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMessageWithLoadOptionsAsync(string authToken, string boxId, string messageId, Midway.ObjectModel.MessageRequestParams requestParams) {
            this.GetMessageWithLoadOptionsAsync(authToken, boxId, messageId, requestParams, null);
        }
        
        public void GetMessageWithLoadOptionsAsync(string authToken, string boxId, string messageId, Midway.ObjectModel.MessageRequestParams requestParams, object userState) {
            if ((this.onBeginGetMessageWithLoadOptionsDelegate == null)) {
                this.onBeginGetMessageWithLoadOptionsDelegate = new BeginOperationDelegate(this.OnBeginGetMessageWithLoadOptions);
            }
            if ((this.onEndGetMessageWithLoadOptionsDelegate == null)) {
                this.onEndGetMessageWithLoadOptionsDelegate = new EndOperationDelegate(this.OnEndGetMessageWithLoadOptions);
            }
            if ((this.onGetMessageWithLoadOptionsCompletedDelegate == null)) {
                this.onGetMessageWithLoadOptionsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMessageWithLoadOptionsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMessageWithLoadOptionsDelegate, new object[] {
                        authToken,
                        boxId,
                        messageId,
                        requestParams}, this.onEndGetMessageWithLoadOptionsDelegate, this.onGetMessageWithLoadOptionsCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SentMessage SendMessage(string authToken, Midway.ObjectModel.Message message) {
            return base.Channel.SendMessage(authToken, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendMessage(string authToken, Midway.ObjectModel.Message message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendMessage(authToken, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SentMessage EndSendMessage(System.IAsyncResult result) {
            return base.Channel.EndSendMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.Message message = ((Midway.ObjectModel.Message)(inValues[1]));
            return this.BeginSendMessage(authToken, message, callback, asyncState);
        }
        
        private object[] OnEndSendMessage(System.IAsyncResult result) {
            Midway.ObjectModel.SentMessage retVal = this.EndSendMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendMessageCompleted(object state) {
            if ((this.SendMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendMessageCompleted(this, new SendMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendMessageAsync(string authToken, Midway.ObjectModel.Message message) {
            this.SendMessageAsync(authToken, message, null);
        }
        
        public void SendMessageAsync(string authToken, Midway.ObjectModel.Message message, object userState) {
            if ((this.onBeginSendMessageDelegate == null)) {
                this.onBeginSendMessageDelegate = new BeginOperationDelegate(this.OnBeginSendMessage);
            }
            if ((this.onEndSendMessageDelegate == null)) {
                this.onEndSendMessageDelegate = new EndOperationDelegate(this.OnEndSendMessage);
            }
            if ((this.onSendMessageCompletedDelegate == null)) {
                this.onSendMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendMessageDelegate, new object[] {
                        authToken,
                        message}, this.onEndSendMessageDelegate, this.onSendMessageCompletedDelegate, userState);
        }
        
        public string CreateDraftMessage(string authToken, Midway.ObjectModel.DraftMessage draftMessage) {
            return base.Channel.CreateDraftMessage(authToken, draftMessage);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateDraftMessage(string authToken, Midway.ObjectModel.DraftMessage draftMessage, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateDraftMessage(authToken, draftMessage, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCreateDraftMessage(System.IAsyncResult result) {
            return base.Channel.EndCreateDraftMessage(result);
        }
        
        private System.IAsyncResult OnBeginCreateDraftMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.DraftMessage draftMessage = ((Midway.ObjectModel.DraftMessage)(inValues[1]));
            return this.BeginCreateDraftMessage(authToken, draftMessage, callback, asyncState);
        }
        
        private object[] OnEndCreateDraftMessage(System.IAsyncResult result) {
            string retVal = this.EndCreateDraftMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateDraftMessageCompleted(object state) {
            if ((this.CreateDraftMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateDraftMessageCompleted(this, new CreateDraftMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateDraftMessageAsync(string authToken, Midway.ObjectModel.DraftMessage draftMessage) {
            this.CreateDraftMessageAsync(authToken, draftMessage, null);
        }
        
        public void CreateDraftMessageAsync(string authToken, Midway.ObjectModel.DraftMessage draftMessage, object userState) {
            if ((this.onBeginCreateDraftMessageDelegate == null)) {
                this.onBeginCreateDraftMessageDelegate = new BeginOperationDelegate(this.OnBeginCreateDraftMessage);
            }
            if ((this.onEndCreateDraftMessageDelegate == null)) {
                this.onEndCreateDraftMessageDelegate = new EndOperationDelegate(this.OnEndCreateDraftMessage);
            }
            if ((this.onCreateDraftMessageCompletedDelegate == null)) {
                this.onCreateDraftMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateDraftMessageCompleted);
            }
            base.InvokeAsync(this.onBeginCreateDraftMessageDelegate, new object[] {
                        authToken,
                        draftMessage}, this.onEndCreateDraftMessageDelegate, this.onCreateDraftMessageCompletedDelegate, userState);
        }
        
        public void UpdateDraftMessage(string authToken, Midway.ObjectModel.DraftMessage draftMessage) {
            base.Channel.UpdateDraftMessage(authToken, draftMessage);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateDraftMessage(string authToken, Midway.ObjectModel.DraftMessage draftMessage, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateDraftMessage(authToken, draftMessage, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndUpdateDraftMessage(System.IAsyncResult result) {
            base.Channel.EndUpdateDraftMessage(result);
        }
        
        private System.IAsyncResult OnBeginUpdateDraftMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.DraftMessage draftMessage = ((Midway.ObjectModel.DraftMessage)(inValues[1]));
            return this.BeginUpdateDraftMessage(authToken, draftMessage, callback, asyncState);
        }
        
        private object[] OnEndUpdateDraftMessage(System.IAsyncResult result) {
            this.EndUpdateDraftMessage(result);
            return null;
        }
        
        private void OnUpdateDraftMessageCompleted(object state) {
            if ((this.UpdateDraftMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateDraftMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateDraftMessageAsync(string authToken, Midway.ObjectModel.DraftMessage draftMessage) {
            this.UpdateDraftMessageAsync(authToken, draftMessage, null);
        }
        
        public void UpdateDraftMessageAsync(string authToken, Midway.ObjectModel.DraftMessage draftMessage, object userState) {
            if ((this.onBeginUpdateDraftMessageDelegate == null)) {
                this.onBeginUpdateDraftMessageDelegate = new BeginOperationDelegate(this.OnBeginUpdateDraftMessage);
            }
            if ((this.onEndUpdateDraftMessageDelegate == null)) {
                this.onEndUpdateDraftMessageDelegate = new EndOperationDelegate(this.OnEndUpdateDraftMessage);
            }
            if ((this.onUpdateDraftMessageCompletedDelegate == null)) {
                this.onUpdateDraftMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateDraftMessageCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDraftMessageDelegate, new object[] {
                        authToken,
                        draftMessage}, this.onEndUpdateDraftMessageDelegate, this.onUpdateDraftMessageCompletedDelegate, userState);
        }
        
        public void DeleteDraftMessage(string authToken, string messageId) {
            base.Channel.DeleteDraftMessage(authToken, messageId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDraftMessage(string authToken, string messageId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDraftMessage(authToken, messageId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDraftMessage(System.IAsyncResult result) {
            base.Channel.EndDeleteDraftMessage(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDraftMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string messageId = ((string)(inValues[1]));
            return this.BeginDeleteDraftMessage(authToken, messageId, callback, asyncState);
        }
        
        private object[] OnEndDeleteDraftMessage(System.IAsyncResult result) {
            this.EndDeleteDraftMessage(result);
            return null;
        }
        
        private void OnDeleteDraftMessageCompleted(object state) {
            if ((this.DeleteDraftMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDraftMessageCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDraftMessageAsync(string authToken, string messageId) {
            this.DeleteDraftMessageAsync(authToken, messageId, null);
        }
        
        public void DeleteDraftMessageAsync(string authToken, string messageId, object userState) {
            if ((this.onBeginDeleteDraftMessageDelegate == null)) {
                this.onBeginDeleteDraftMessageDelegate = new BeginOperationDelegate(this.OnBeginDeleteDraftMessage);
            }
            if ((this.onEndDeleteDraftMessageDelegate == null)) {
                this.onEndDeleteDraftMessageDelegate = new EndOperationDelegate(this.OnEndDeleteDraftMessage);
            }
            if ((this.onDeleteDraftMessageCompletedDelegate == null)) {
                this.onDeleteDraftMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDraftMessageCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDraftMessageDelegate, new object[] {
                        authToken,
                        messageId}, this.onEndDeleteDraftMessageDelegate, this.onDeleteDraftMessageCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DraftMessage GetDraftMessage(string authToken, string messageId, bool getContent, bool getCard) {
            return base.Channel.GetDraftMessage(authToken, messageId, getContent, getCard);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDraftMessage(string authToken, string messageId, bool getContent, bool getCard, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDraftMessage(authToken, messageId, getContent, getCard, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DraftMessage EndGetDraftMessage(System.IAsyncResult result) {
            return base.Channel.EndGetDraftMessage(result);
        }
        
        private System.IAsyncResult OnBeginGetDraftMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string messageId = ((string)(inValues[1]));
            bool getContent = ((bool)(inValues[2]));
            bool getCard = ((bool)(inValues[3]));
            return this.BeginGetDraftMessage(authToken, messageId, getContent, getCard, callback, asyncState);
        }
        
        private object[] OnEndGetDraftMessage(System.IAsyncResult result) {
            Midway.ObjectModel.DraftMessage retVal = this.EndGetDraftMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDraftMessageCompleted(object state) {
            if ((this.GetDraftMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDraftMessageCompleted(this, new GetDraftMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDraftMessageAsync(string authToken, string messageId, bool getContent, bool getCard) {
            this.GetDraftMessageAsync(authToken, messageId, getContent, getCard, null);
        }
        
        public void GetDraftMessageAsync(string authToken, string messageId, bool getContent, bool getCard, object userState) {
            if ((this.onBeginGetDraftMessageDelegate == null)) {
                this.onBeginGetDraftMessageDelegate = new BeginOperationDelegate(this.OnBeginGetDraftMessage);
            }
            if ((this.onEndGetDraftMessageDelegate == null)) {
                this.onEndGetDraftMessageDelegate = new EndOperationDelegate(this.OnEndGetDraftMessage);
            }
            if ((this.onGetDraftMessageCompletedDelegate == null)) {
                this.onGetDraftMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDraftMessageCompleted);
            }
            base.InvokeAsync(this.onBeginGetDraftMessageDelegate, new object[] {
                        authToken,
                        messageId,
                        getContent,
                        getCard}, this.onEndGetDraftMessageDelegate, this.onGetDraftMessageCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DraftMessageSearchResult GetDraftMessageList(string authToken, string boxId, Midway.ObjectModel.Common.FetchingSettings settings) {
            return base.Channel.GetDraftMessageList(authToken, boxId, settings);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDraftMessageList(string authToken, string boxId, Midway.ObjectModel.Common.FetchingSettings settings, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDraftMessageList(authToken, boxId, settings, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DraftMessageSearchResult EndGetDraftMessageList(System.IAsyncResult result) {
            return base.Channel.EndGetDraftMessageList(result);
        }
        
        private System.IAsyncResult OnBeginGetDraftMessageList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            Midway.ObjectModel.Common.FetchingSettings settings = ((Midway.ObjectModel.Common.FetchingSettings)(inValues[2]));
            return this.BeginGetDraftMessageList(authToken, boxId, settings, callback, asyncState);
        }
        
        private object[] OnEndGetDraftMessageList(System.IAsyncResult result) {
            Midway.ObjectModel.DraftMessageSearchResult retVal = this.EndGetDraftMessageList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDraftMessageListCompleted(object state) {
            if ((this.GetDraftMessageListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDraftMessageListCompleted(this, new GetDraftMessageListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDraftMessageListAsync(string authToken, string boxId, Midway.ObjectModel.Common.FetchingSettings settings) {
            this.GetDraftMessageListAsync(authToken, boxId, settings, null);
        }
        
        public void GetDraftMessageListAsync(string authToken, string boxId, Midway.ObjectModel.Common.FetchingSettings settings, object userState) {
            if ((this.onBeginGetDraftMessageListDelegate == null)) {
                this.onBeginGetDraftMessageListDelegate = new BeginOperationDelegate(this.OnBeginGetDraftMessageList);
            }
            if ((this.onEndGetDraftMessageListDelegate == null)) {
                this.onEndGetDraftMessageListDelegate = new EndOperationDelegate(this.OnEndGetDraftMessageList);
            }
            if ((this.onGetDraftMessageListCompletedDelegate == null)) {
                this.onGetDraftMessageListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDraftMessageListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDraftMessageListDelegate, new object[] {
                        authToken,
                        boxId,
                        settings}, this.onEndGetDraftMessageListDelegate, this.onGetDraftMessageListCompletedDelegate, userState);
        }
        
        public int GetDraftMessageCount(string authToken, string boxId) {
            return base.Channel.GetDraftMessageCount(authToken, boxId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDraftMessageCount(string authToken, string boxId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDraftMessageCount(authToken, boxId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndGetDraftMessageCount(System.IAsyncResult result) {
            return base.Channel.EndGetDraftMessageCount(result);
        }
        
        private System.IAsyncResult OnBeginGetDraftMessageCount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            return this.BeginGetDraftMessageCount(authToken, boxId, callback, asyncState);
        }
        
        private object[] OnEndGetDraftMessageCount(System.IAsyncResult result) {
            int retVal = this.EndGetDraftMessageCount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDraftMessageCountCompleted(object state) {
            if ((this.GetDraftMessageCountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDraftMessageCountCompleted(this, new GetDraftMessageCountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDraftMessageCountAsync(string authToken, string boxId) {
            this.GetDraftMessageCountAsync(authToken, boxId, null);
        }
        
        public void GetDraftMessageCountAsync(string authToken, string boxId, object userState) {
            if ((this.onBeginGetDraftMessageCountDelegate == null)) {
                this.onBeginGetDraftMessageCountDelegate = new BeginOperationDelegate(this.OnBeginGetDraftMessageCount);
            }
            if ((this.onEndGetDraftMessageCountDelegate == null)) {
                this.onEndGetDraftMessageCountDelegate = new EndOperationDelegate(this.OnEndGetDraftMessageCount);
            }
            if ((this.onGetDraftMessageCountCompletedDelegate == null)) {
                this.onGetDraftMessageCountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDraftMessageCountCompleted);
            }
            base.InvokeAsync(this.onBeginGetDraftMessageCountDelegate, new object[] {
                        authToken,
                        boxId}, this.onEndGetDraftMessageCountDelegate, this.onGetDraftMessageCountCompletedDelegate, userState);
        }
        
        public byte[] GetDraftDocumentContent(string authToken, string documentId) {
            return base.Channel.GetDraftDocumentContent(authToken, documentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDraftDocumentContent(string authToken, string documentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDraftDocumentContent(authToken, documentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetDraftDocumentContent(System.IAsyncResult result) {
            return base.Channel.EndGetDraftDocumentContent(result);
        }
        
        private System.IAsyncResult OnBeginGetDraftDocumentContent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string documentId = ((string)(inValues[1]));
            return this.BeginGetDraftDocumentContent(authToken, documentId, callback, asyncState);
        }
        
        private object[] OnEndGetDraftDocumentContent(System.IAsyncResult result) {
            byte[] retVal = this.EndGetDraftDocumentContent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDraftDocumentContentCompleted(object state) {
            if ((this.GetDraftDocumentContentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDraftDocumentContentCompleted(this, new GetDraftDocumentContentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDraftDocumentContentAsync(string authToken, string documentId) {
            this.GetDraftDocumentContentAsync(authToken, documentId, null);
        }
        
        public void GetDraftDocumentContentAsync(string authToken, string documentId, object userState) {
            if ((this.onBeginGetDraftDocumentContentDelegate == null)) {
                this.onBeginGetDraftDocumentContentDelegate = new BeginOperationDelegate(this.OnBeginGetDraftDocumentContent);
            }
            if ((this.onEndGetDraftDocumentContentDelegate == null)) {
                this.onEndGetDraftDocumentContentDelegate = new EndOperationDelegate(this.OnEndGetDraftDocumentContent);
            }
            if ((this.onGetDraftDocumentContentCompletedDelegate == null)) {
                this.onGetDraftDocumentContentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDraftDocumentContentCompleted);
            }
            base.InvokeAsync(this.onBeginGetDraftDocumentContentDelegate, new object[] {
                        authToken,
                        documentId}, this.onEndGetDraftDocumentContentDelegate, this.onGetDraftDocumentContentCompletedDelegate, userState);
        }
        
        public byte[] GetDraftDocumentCard(string authToken, string documentId) {
            return base.Channel.GetDraftDocumentCard(authToken, documentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDraftDocumentCard(string authToken, string documentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDraftDocumentCard(authToken, documentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetDraftDocumentCard(System.IAsyncResult result) {
            return base.Channel.EndGetDraftDocumentCard(result);
        }
        
        private System.IAsyncResult OnBeginGetDraftDocumentCard(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string documentId = ((string)(inValues[1]));
            return this.BeginGetDraftDocumentCard(authToken, documentId, callback, asyncState);
        }
        
        private object[] OnEndGetDraftDocumentCard(System.IAsyncResult result) {
            byte[] retVal = this.EndGetDraftDocumentCard(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDraftDocumentCardCompleted(object state) {
            if ((this.GetDraftDocumentCardCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDraftDocumentCardCompleted(this, new GetDraftDocumentCardCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDraftDocumentCardAsync(string authToken, string documentId) {
            this.GetDraftDocumentCardAsync(authToken, documentId, null);
        }
        
        public void GetDraftDocumentCardAsync(string authToken, string documentId, object userState) {
            if ((this.onBeginGetDraftDocumentCardDelegate == null)) {
                this.onBeginGetDraftDocumentCardDelegate = new BeginOperationDelegate(this.OnBeginGetDraftDocumentCard);
            }
            if ((this.onEndGetDraftDocumentCardDelegate == null)) {
                this.onEndGetDraftDocumentCardDelegate = new EndOperationDelegate(this.OnEndGetDraftDocumentCard);
            }
            if ((this.onGetDraftDocumentCardCompletedDelegate == null)) {
                this.onGetDraftDocumentCardCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDraftDocumentCardCompleted);
            }
            base.InvokeAsync(this.onBeginGetDraftDocumentCardDelegate, new object[] {
                        authToken,
                        documentId}, this.onEndGetDraftDocumentCardDelegate, this.onGetDraftDocumentCardCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent GenerateInvoiceReceipt(string authToken, string boxId, string documentId) {
            return base.Channel.GenerateInvoiceReceipt(authToken, boxId, documentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateInvoiceReceipt(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateInvoiceReceipt(authToken, boxId, documentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndGenerateInvoiceReceipt(System.IAsyncResult result) {
            return base.Channel.EndGenerateInvoiceReceipt(result);
        }
        
        private System.IAsyncResult OnBeginGenerateInvoiceReceipt(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            return this.BeginGenerateInvoiceReceipt(authToken, boxId, documentId, callback, asyncState);
        }
        
        private object[] OnEndGenerateInvoiceReceipt(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndGenerateInvoiceReceipt(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateInvoiceReceiptCompleted(object state) {
            if ((this.GenerateInvoiceReceiptCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateInvoiceReceiptCompleted(this, new GenerateInvoiceReceiptCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateInvoiceReceiptAsync(string authToken, string boxId, string documentId) {
            this.GenerateInvoiceReceiptAsync(authToken, boxId, documentId, null);
        }
        
        public void GenerateInvoiceReceiptAsync(string authToken, string boxId, string documentId, object userState) {
            if ((this.onBeginGenerateInvoiceReceiptDelegate == null)) {
                this.onBeginGenerateInvoiceReceiptDelegate = new BeginOperationDelegate(this.OnBeginGenerateInvoiceReceipt);
            }
            if ((this.onEndGenerateInvoiceReceiptDelegate == null)) {
                this.onEndGenerateInvoiceReceiptDelegate = new EndOperationDelegate(this.OnEndGenerateInvoiceReceipt);
            }
            if ((this.onGenerateInvoiceReceiptCompletedDelegate == null)) {
                this.onGenerateInvoiceReceiptCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateInvoiceReceiptCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateInvoiceReceiptDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId}, this.onEndGenerateInvoiceReceiptDelegate, this.onGenerateInvoiceReceiptCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent GenerateInvoiceReceiptV2(string authToken, string boxId, string documentId, string certThumbprint) {
            return base.Channel.GenerateInvoiceReceiptV2(authToken, boxId, documentId, certThumbprint);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateInvoiceReceiptV2(string authToken, string boxId, string documentId, string certThumbprint, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateInvoiceReceiptV2(authToken, boxId, documentId, certThumbprint, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndGenerateInvoiceReceiptV2(System.IAsyncResult result) {
            return base.Channel.EndGenerateInvoiceReceiptV2(result);
        }
        
        private System.IAsyncResult OnBeginGenerateInvoiceReceiptV2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            string certThumbprint = ((string)(inValues[3]));
            return this.BeginGenerateInvoiceReceiptV2(authToken, boxId, documentId, certThumbprint, callback, asyncState);
        }
        
        private object[] OnEndGenerateInvoiceReceiptV2(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndGenerateInvoiceReceiptV2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateInvoiceReceiptV2Completed(object state) {
            if ((this.GenerateInvoiceReceiptV2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateInvoiceReceiptV2Completed(this, new GenerateInvoiceReceiptV2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateInvoiceReceiptV2Async(string authToken, string boxId, string documentId, string certThumbprint) {
            this.GenerateInvoiceReceiptV2Async(authToken, boxId, documentId, certThumbprint, null);
        }
        
        public void GenerateInvoiceReceiptV2Async(string authToken, string boxId, string documentId, string certThumbprint, object userState) {
            if ((this.onBeginGenerateInvoiceReceiptV2Delegate == null)) {
                this.onBeginGenerateInvoiceReceiptV2Delegate = new BeginOperationDelegate(this.OnBeginGenerateInvoiceReceiptV2);
            }
            if ((this.onEndGenerateInvoiceReceiptV2Delegate == null)) {
                this.onEndGenerateInvoiceReceiptV2Delegate = new EndOperationDelegate(this.OnEndGenerateInvoiceReceiptV2);
            }
            if ((this.onGenerateInvoiceReceiptV2CompletedDelegate == null)) {
                this.onGenerateInvoiceReceiptV2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateInvoiceReceiptV2Completed);
            }
            base.InvokeAsync(this.onBeginGenerateInvoiceReceiptV2Delegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        certThumbprint}, this.onEndGenerateInvoiceReceiptV2Delegate, this.onGenerateInvoiceReceiptV2CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent GenerateInvoiceAmendmentRequest(string authToken, string boxId, string documentId, string text) {
            return base.Channel.GenerateInvoiceAmendmentRequest(authToken, boxId, documentId, text);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateInvoiceAmendmentRequest(string authToken, string boxId, string documentId, string text, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateInvoiceAmendmentRequest(authToken, boxId, documentId, text, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndGenerateInvoiceAmendmentRequest(System.IAsyncResult result) {
            return base.Channel.EndGenerateInvoiceAmendmentRequest(result);
        }
        
        private System.IAsyncResult OnBeginGenerateInvoiceAmendmentRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            string text = ((string)(inValues[3]));
            return this.BeginGenerateInvoiceAmendmentRequest(authToken, boxId, documentId, text, callback, asyncState);
        }
        
        private object[] OnEndGenerateInvoiceAmendmentRequest(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndGenerateInvoiceAmendmentRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateInvoiceAmendmentRequestCompleted(object state) {
            if ((this.GenerateInvoiceAmendmentRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateInvoiceAmendmentRequestCompleted(this, new GenerateInvoiceAmendmentRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateInvoiceAmendmentRequestAsync(string authToken, string boxId, string documentId, string text) {
            this.GenerateInvoiceAmendmentRequestAsync(authToken, boxId, documentId, text, null);
        }
        
        public void GenerateInvoiceAmendmentRequestAsync(string authToken, string boxId, string documentId, string text, object userState) {
            if ((this.onBeginGenerateInvoiceAmendmentRequestDelegate == null)) {
                this.onBeginGenerateInvoiceAmendmentRequestDelegate = new BeginOperationDelegate(this.OnBeginGenerateInvoiceAmendmentRequest);
            }
            if ((this.onEndGenerateInvoiceAmendmentRequestDelegate == null)) {
                this.onEndGenerateInvoiceAmendmentRequestDelegate = new EndOperationDelegate(this.OnEndGenerateInvoiceAmendmentRequest);
            }
            if ((this.onGenerateInvoiceAmendmentRequestCompletedDelegate == null)) {
                this.onGenerateInvoiceAmendmentRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateInvoiceAmendmentRequestCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateInvoiceAmendmentRequestDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        text}, this.onEndGenerateInvoiceAmendmentRequestDelegate, this.onGenerateInvoiceAmendmentRequestCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent GenerateInvoiceAmendmentRequestV2(string authToken, string boxId, string documentId, string certThumbprint, string text) {
            return base.Channel.GenerateInvoiceAmendmentRequestV2(authToken, boxId, documentId, certThumbprint, text);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateInvoiceAmendmentRequestV2(string authToken, string boxId, string documentId, string certThumbprint, string text, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateInvoiceAmendmentRequestV2(authToken, boxId, documentId, certThumbprint, text, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndGenerateInvoiceAmendmentRequestV2(System.IAsyncResult result) {
            return base.Channel.EndGenerateInvoiceAmendmentRequestV2(result);
        }
        
        private System.IAsyncResult OnBeginGenerateInvoiceAmendmentRequestV2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            string certThumbprint = ((string)(inValues[3]));
            string text = ((string)(inValues[4]));
            return this.BeginGenerateInvoiceAmendmentRequestV2(authToken, boxId, documentId, certThumbprint, text, callback, asyncState);
        }
        
        private object[] OnEndGenerateInvoiceAmendmentRequestV2(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndGenerateInvoiceAmendmentRequestV2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateInvoiceAmendmentRequestV2Completed(object state) {
            if ((this.GenerateInvoiceAmendmentRequestV2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateInvoiceAmendmentRequestV2Completed(this, new GenerateInvoiceAmendmentRequestV2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateInvoiceAmendmentRequestV2Async(string authToken, string boxId, string documentId, string certThumbprint, string text) {
            this.GenerateInvoiceAmendmentRequestV2Async(authToken, boxId, documentId, certThumbprint, text, null);
        }
        
        public void GenerateInvoiceAmendmentRequestV2Async(string authToken, string boxId, string documentId, string certThumbprint, string text, object userState) {
            if ((this.onBeginGenerateInvoiceAmendmentRequestV2Delegate == null)) {
                this.onBeginGenerateInvoiceAmendmentRequestV2Delegate = new BeginOperationDelegate(this.OnBeginGenerateInvoiceAmendmentRequestV2);
            }
            if ((this.onEndGenerateInvoiceAmendmentRequestV2Delegate == null)) {
                this.onEndGenerateInvoiceAmendmentRequestV2Delegate = new EndOperationDelegate(this.OnEndGenerateInvoiceAmendmentRequestV2);
            }
            if ((this.onGenerateInvoiceAmendmentRequestV2CompletedDelegate == null)) {
                this.onGenerateInvoiceAmendmentRequestV2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateInvoiceAmendmentRequestV2Completed);
            }
            base.InvokeAsync(this.onBeginGenerateInvoiceAmendmentRequestV2Delegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        certThumbprint,
                        text}, this.onEndGenerateInvoiceAmendmentRequestV2Delegate, this.onGenerateInvoiceAmendmentRequestV2CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent GenerateDeliveryConfirmation(string authToken, string boxId, string documentId) {
            return base.Channel.GenerateDeliveryConfirmation(authToken, boxId, documentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateDeliveryConfirmation(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateDeliveryConfirmation(authToken, boxId, documentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndGenerateDeliveryConfirmation(System.IAsyncResult result) {
            return base.Channel.EndGenerateDeliveryConfirmation(result);
        }
        
        private System.IAsyncResult OnBeginGenerateDeliveryConfirmation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            return this.BeginGenerateDeliveryConfirmation(authToken, boxId, documentId, callback, asyncState);
        }
        
        private object[] OnEndGenerateDeliveryConfirmation(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndGenerateDeliveryConfirmation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateDeliveryConfirmationCompleted(object state) {
            if ((this.GenerateDeliveryConfirmationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateDeliveryConfirmationCompleted(this, new GenerateDeliveryConfirmationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateDeliveryConfirmationAsync(string authToken, string boxId, string documentId) {
            this.GenerateDeliveryConfirmationAsync(authToken, boxId, documentId, null);
        }
        
        public void GenerateDeliveryConfirmationAsync(string authToken, string boxId, string documentId, object userState) {
            if ((this.onBeginGenerateDeliveryConfirmationDelegate == null)) {
                this.onBeginGenerateDeliveryConfirmationDelegate = new BeginOperationDelegate(this.OnBeginGenerateDeliveryConfirmation);
            }
            if ((this.onEndGenerateDeliveryConfirmationDelegate == null)) {
                this.onEndGenerateDeliveryConfirmationDelegate = new EndOperationDelegate(this.OnEndGenerateDeliveryConfirmation);
            }
            if ((this.onGenerateDeliveryConfirmationCompletedDelegate == null)) {
                this.onGenerateDeliveryConfirmationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateDeliveryConfirmationCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateDeliveryConfirmationDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId}, this.onEndGenerateDeliveryConfirmationDelegate, this.onGenerateDeliveryConfirmationCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent GenerateDeliveryConfirmationV2(string authToken, string boxId, string documentId, string certThumbprint) {
            return base.Channel.GenerateDeliveryConfirmationV2(authToken, boxId, documentId, certThumbprint);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateDeliveryConfirmationV2(string authToken, string boxId, string documentId, string certThumbprint, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateDeliveryConfirmationV2(authToken, boxId, documentId, certThumbprint, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndGenerateDeliveryConfirmationV2(System.IAsyncResult result) {
            return base.Channel.EndGenerateDeliveryConfirmationV2(result);
        }
        
        private System.IAsyncResult OnBeginGenerateDeliveryConfirmationV2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            string certThumbprint = ((string)(inValues[3]));
            return this.BeginGenerateDeliveryConfirmationV2(authToken, boxId, documentId, certThumbprint, callback, asyncState);
        }
        
        private object[] OnEndGenerateDeliveryConfirmationV2(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndGenerateDeliveryConfirmationV2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateDeliveryConfirmationV2Completed(object state) {
            if ((this.GenerateDeliveryConfirmationV2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateDeliveryConfirmationV2Completed(this, new GenerateDeliveryConfirmationV2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateDeliveryConfirmationV2Async(string authToken, string boxId, string documentId, string certThumbprint) {
            this.GenerateDeliveryConfirmationV2Async(authToken, boxId, documentId, certThumbprint, null);
        }
        
        public void GenerateDeliveryConfirmationV2Async(string authToken, string boxId, string documentId, string certThumbprint, object userState) {
            if ((this.onBeginGenerateDeliveryConfirmationV2Delegate == null)) {
                this.onBeginGenerateDeliveryConfirmationV2Delegate = new BeginOperationDelegate(this.OnBeginGenerateDeliveryConfirmationV2);
            }
            if ((this.onEndGenerateDeliveryConfirmationV2Delegate == null)) {
                this.onEndGenerateDeliveryConfirmationV2Delegate = new EndOperationDelegate(this.OnEndGenerateDeliveryConfirmationV2);
            }
            if ((this.onGenerateDeliveryConfirmationV2CompletedDelegate == null)) {
                this.onGenerateDeliveryConfirmationV2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateDeliveryConfirmationV2Completed);
            }
            base.InvokeAsync(this.onBeginGenerateDeliveryConfirmationV2Delegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        certThumbprint}, this.onEndGenerateDeliveryConfirmationV2Delegate, this.onGenerateDeliveryConfirmationV2CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent GenerateAmendmentRequest(string authToken, string boxId, string documentId, string text) {
            return base.Channel.GenerateAmendmentRequest(authToken, boxId, documentId, text);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateAmendmentRequest(string authToken, string boxId, string documentId, string text, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateAmendmentRequest(authToken, boxId, documentId, text, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndGenerateAmendmentRequest(System.IAsyncResult result) {
            return base.Channel.EndGenerateAmendmentRequest(result);
        }
        
        private System.IAsyncResult OnBeginGenerateAmendmentRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            string text = ((string)(inValues[3]));
            return this.BeginGenerateAmendmentRequest(authToken, boxId, documentId, text, callback, asyncState);
        }
        
        private object[] OnEndGenerateAmendmentRequest(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndGenerateAmendmentRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateAmendmentRequestCompleted(object state) {
            if ((this.GenerateAmendmentRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateAmendmentRequestCompleted(this, new GenerateAmendmentRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateAmendmentRequestAsync(string authToken, string boxId, string documentId, string text) {
            this.GenerateAmendmentRequestAsync(authToken, boxId, documentId, text, null);
        }
        
        public void GenerateAmendmentRequestAsync(string authToken, string boxId, string documentId, string text, object userState) {
            if ((this.onBeginGenerateAmendmentRequestDelegate == null)) {
                this.onBeginGenerateAmendmentRequestDelegate = new BeginOperationDelegate(this.OnBeginGenerateAmendmentRequest);
            }
            if ((this.onEndGenerateAmendmentRequestDelegate == null)) {
                this.onEndGenerateAmendmentRequestDelegate = new EndOperationDelegate(this.OnEndGenerateAmendmentRequest);
            }
            if ((this.onGenerateAmendmentRequestCompletedDelegate == null)) {
                this.onGenerateAmendmentRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateAmendmentRequestCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateAmendmentRequestDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        text}, this.onEndGenerateAmendmentRequestDelegate, this.onGenerateAmendmentRequestCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent GenerateAmendmentRequestV2(string authToken, string boxId, string documentId, string certThumbprint, string text) {
            return base.Channel.GenerateAmendmentRequestV2(authToken, boxId, documentId, certThumbprint, text);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateAmendmentRequestV2(string authToken, string boxId, string documentId, string certThumbprint, string text, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateAmendmentRequestV2(authToken, boxId, documentId, certThumbprint, text, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndGenerateAmendmentRequestV2(System.IAsyncResult result) {
            return base.Channel.EndGenerateAmendmentRequestV2(result);
        }
        
        private System.IAsyncResult OnBeginGenerateAmendmentRequestV2(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            string certThumbprint = ((string)(inValues[3]));
            string text = ((string)(inValues[4]));
            return this.BeginGenerateAmendmentRequestV2(authToken, boxId, documentId, certThumbprint, text, callback, asyncState);
        }
        
        private object[] OnEndGenerateAmendmentRequestV2(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndGenerateAmendmentRequestV2(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateAmendmentRequestV2Completed(object state) {
            if ((this.GenerateAmendmentRequestV2Completed != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateAmendmentRequestV2Completed(this, new GenerateAmendmentRequestV2CompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateAmendmentRequestV2Async(string authToken, string boxId, string documentId, string certThumbprint, string text) {
            this.GenerateAmendmentRequestV2Async(authToken, boxId, documentId, certThumbprint, text, null);
        }
        
        public void GenerateAmendmentRequestV2Async(string authToken, string boxId, string documentId, string certThumbprint, string text, object userState) {
            if ((this.onBeginGenerateAmendmentRequestV2Delegate == null)) {
                this.onBeginGenerateAmendmentRequestV2Delegate = new BeginOperationDelegate(this.OnBeginGenerateAmendmentRequestV2);
            }
            if ((this.onEndGenerateAmendmentRequestV2Delegate == null)) {
                this.onEndGenerateAmendmentRequestV2Delegate = new EndOperationDelegate(this.OnEndGenerateAmendmentRequestV2);
            }
            if ((this.onGenerateAmendmentRequestV2CompletedDelegate == null)) {
                this.onGenerateAmendmentRequestV2CompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateAmendmentRequestV2Completed);
            }
            base.InvokeAsync(this.onBeginGenerateAmendmentRequestV2Delegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        certThumbprint,
                        text}, this.onEndGenerateAmendmentRequestV2Delegate, this.onGenerateAmendmentRequestV2CompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent GenerateTitleBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.TitleBuyer text, Midway.ObjectModel.SignerInfo signerInfo) {
            return base.Channel.GenerateTitleBuyer(authToken, boxId, documentId, text, signerInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateTitleBuyer(string authToken, string boxId, string documentId, Midway.ObjectModel.TitleBuyer text, Midway.ObjectModel.SignerInfo signerInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateTitleBuyer(authToken, boxId, documentId, text, signerInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndGenerateTitleBuyer(System.IAsyncResult result) {
            return base.Channel.EndGenerateTitleBuyer(result);
        }
        
        private System.IAsyncResult OnBeginGenerateTitleBuyer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            Midway.ObjectModel.TitleBuyer text = ((Midway.ObjectModel.TitleBuyer)(inValues[3]));
            Midway.ObjectModel.SignerInfo signerInfo = ((Midway.ObjectModel.SignerInfo)(inValues[4]));
            return this.BeginGenerateTitleBuyer(authToken, boxId, documentId, text, signerInfo, callback, asyncState);
        }
        
        private object[] OnEndGenerateTitleBuyer(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndGenerateTitleBuyer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateTitleBuyerCompleted(object state) {
            if ((this.GenerateTitleBuyerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateTitleBuyerCompleted(this, new GenerateTitleBuyerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateTitleBuyerAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.TitleBuyer text, Midway.ObjectModel.SignerInfo signerInfo) {
            this.GenerateTitleBuyerAsync(authToken, boxId, documentId, text, signerInfo, null);
        }
        
        public void GenerateTitleBuyerAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.TitleBuyer text, Midway.ObjectModel.SignerInfo signerInfo, object userState) {
            if ((this.onBeginGenerateTitleBuyerDelegate == null)) {
                this.onBeginGenerateTitleBuyerDelegate = new BeginOperationDelegate(this.OnBeginGenerateTitleBuyer);
            }
            if ((this.onEndGenerateTitleBuyerDelegate == null)) {
                this.onEndGenerateTitleBuyerDelegate = new EndOperationDelegate(this.OnEndGenerateTitleBuyer);
            }
            if ((this.onGenerateTitleBuyerCompletedDelegate == null)) {
                this.onGenerateTitleBuyerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateTitleBuyerCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateTitleBuyerDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        text,
                        signerInfo}, this.onEndGenerateTitleBuyerDelegate, this.onGenerateTitleBuyerCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent GenerateRevocationOffer(string authToken, string boxId, string documentId, string comment, Midway.ObjectModel.SignerInfo signerInfo) {
            return base.Channel.GenerateRevocationOffer(authToken, boxId, documentId, comment, signerInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGenerateRevocationOffer(string authToken, string boxId, string documentId, string comment, Midway.ObjectModel.SignerInfo signerInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGenerateRevocationOffer(authToken, boxId, documentId, comment, signerInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndGenerateRevocationOffer(System.IAsyncResult result) {
            return base.Channel.EndGenerateRevocationOffer(result);
        }
        
        private System.IAsyncResult OnBeginGenerateRevocationOffer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            string comment = ((string)(inValues[3]));
            Midway.ObjectModel.SignerInfo signerInfo = ((Midway.ObjectModel.SignerInfo)(inValues[4]));
            return this.BeginGenerateRevocationOffer(authToken, boxId, documentId, comment, signerInfo, callback, asyncState);
        }
        
        private object[] OnEndGenerateRevocationOffer(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndGenerateRevocationOffer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGenerateRevocationOfferCompleted(object state) {
            if ((this.GenerateRevocationOfferCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GenerateRevocationOfferCompleted(this, new GenerateRevocationOfferCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GenerateRevocationOfferAsync(string authToken, string boxId, string documentId, string comment, Midway.ObjectModel.SignerInfo signerInfo) {
            this.GenerateRevocationOfferAsync(authToken, boxId, documentId, comment, signerInfo, null);
        }
        
        public void GenerateRevocationOfferAsync(string authToken, string boxId, string documentId, string comment, Midway.ObjectModel.SignerInfo signerInfo, object userState) {
            if ((this.onBeginGenerateRevocationOfferDelegate == null)) {
                this.onBeginGenerateRevocationOfferDelegate = new BeginOperationDelegate(this.OnBeginGenerateRevocationOffer);
            }
            if ((this.onEndGenerateRevocationOfferDelegate == null)) {
                this.onEndGenerateRevocationOfferDelegate = new EndOperationDelegate(this.OnEndGenerateRevocationOffer);
            }
            if ((this.onGenerateRevocationOfferCompletedDelegate == null)) {
                this.onGenerateRevocationOfferCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGenerateRevocationOfferCompleted);
            }
            base.InvokeAsync(this.onBeginGenerateRevocationOfferDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        comment,
                        signerInfo}, this.onEndGenerateRevocationOfferDelegate, this.onGenerateRevocationOfferCompletedDelegate, userState);
        }
        
        public byte[] GetDocumentContent(string authToken, string boxId, string documentId) {
            return base.Channel.GetDocumentContent(authToken, boxId, documentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDocumentContent(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDocumentContent(authToken, boxId, documentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public byte[] EndGetDocumentContent(System.IAsyncResult result) {
            return base.Channel.EndGetDocumentContent(result);
        }
        
        private System.IAsyncResult OnBeginGetDocumentContent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            return this.BeginGetDocumentContent(authToken, boxId, documentId, callback, asyncState);
        }
        
        private object[] OnEndGetDocumentContent(System.IAsyncResult result) {
            byte[] retVal = this.EndGetDocumentContent(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDocumentContentCompleted(object state) {
            if ((this.GetDocumentContentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDocumentContentCompleted(this, new GetDocumentContentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDocumentContentAsync(string authToken, string boxId, string documentId) {
            this.GetDocumentContentAsync(authToken, boxId, documentId, null);
        }
        
        public void GetDocumentContentAsync(string authToken, string boxId, string documentId, object userState) {
            if ((this.onBeginGetDocumentContentDelegate == null)) {
                this.onBeginGetDocumentContentDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentContent);
            }
            if ((this.onEndGetDocumentContentDelegate == null)) {
                this.onEndGetDocumentContentDelegate = new EndOperationDelegate(this.OnEndGetDocumentContent);
            }
            if ((this.onGetDocumentContentCompletedDelegate == null)) {
                this.onGetDocumentContentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentContentCompleted);
            }
            base.InvokeAsync(this.onBeginGetDocumentContentDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId}, this.onEndGetDocumentContentDelegate, this.onGetDocumentContentCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.FullDocumentInfo GetFullDocumentInfo(string authToken, string boxId, string documentId, Midway.ObjectModel.FullDocumentInfoRequestParams requestParams) {
            return base.Channel.GetFullDocumentInfo(authToken, boxId, documentId, requestParams);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFullDocumentInfo(string authToken, string boxId, string documentId, Midway.ObjectModel.FullDocumentInfoRequestParams requestParams, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFullDocumentInfo(authToken, boxId, documentId, requestParams, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.FullDocumentInfo EndGetFullDocumentInfo(System.IAsyncResult result) {
            return base.Channel.EndGetFullDocumentInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetFullDocumentInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            Midway.ObjectModel.FullDocumentInfoRequestParams requestParams = ((Midway.ObjectModel.FullDocumentInfoRequestParams)(inValues[3]));
            return this.BeginGetFullDocumentInfo(authToken, boxId, documentId, requestParams, callback, asyncState);
        }
        
        private object[] OnEndGetFullDocumentInfo(System.IAsyncResult result) {
            Midway.ObjectModel.FullDocumentInfo retVal = this.EndGetFullDocumentInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFullDocumentInfoCompleted(object state) {
            if ((this.GetFullDocumentInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFullDocumentInfoCompleted(this, new GetFullDocumentInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFullDocumentInfoAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.FullDocumentInfoRequestParams requestParams) {
            this.GetFullDocumentInfoAsync(authToken, boxId, documentId, requestParams, null);
        }
        
        public void GetFullDocumentInfoAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.FullDocumentInfoRequestParams requestParams, object userState) {
            if ((this.onBeginGetFullDocumentInfoDelegate == null)) {
                this.onBeginGetFullDocumentInfoDelegate = new BeginOperationDelegate(this.OnBeginGetFullDocumentInfo);
            }
            if ((this.onEndGetFullDocumentInfoDelegate == null)) {
                this.onEndGetFullDocumentInfoDelegate = new EndOperationDelegate(this.OnEndGetFullDocumentInfo);
            }
            if ((this.onGetFullDocumentInfoCompletedDelegate == null)) {
                this.onGetFullDocumentInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFullDocumentInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetFullDocumentInfoDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        requestParams}, this.onEndGetFullDocumentInfoDelegate, this.onGetFullDocumentInfoCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentList GetDocumentList(string authToken, Midway.ObjectModel.DocumentListOptions options) {
            return base.Channel.GetDocumentList(authToken, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDocumentList(string authToken, Midway.ObjectModel.DocumentListOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDocumentList(authToken, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentList EndGetDocumentList(System.IAsyncResult result) {
            return base.Channel.EndGetDocumentList(result);
        }
        
        private System.IAsyncResult OnBeginGetDocumentList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.DocumentListOptions options = ((Midway.ObjectModel.DocumentListOptions)(inValues[1]));
            return this.BeginGetDocumentList(authToken, options, callback, asyncState);
        }
        
        private object[] OnEndGetDocumentList(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentList retVal = this.EndGetDocumentList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDocumentListCompleted(object state) {
            if ((this.GetDocumentListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDocumentListCompleted(this, new GetDocumentListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDocumentListAsync(string authToken, Midway.ObjectModel.DocumentListOptions options) {
            this.GetDocumentListAsync(authToken, options, null);
        }
        
        public void GetDocumentListAsync(string authToken, Midway.ObjectModel.DocumentListOptions options, object userState) {
            if ((this.onBeginGetDocumentListDelegate == null)) {
                this.onBeginGetDocumentListDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentList);
            }
            if ((this.onEndGetDocumentListDelegate == null)) {
                this.onEndGetDocumentListDelegate = new EndOperationDelegate(this.OnEndGetDocumentList);
            }
            if ((this.onGetDocumentListCompletedDelegate == null)) {
                this.onGetDocumentListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDocumentListDelegate, new object[] {
                        authToken,
                        options}, this.onEndGetDocumentListDelegate, this.onGetDocumentListCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.InnKppName GetInnKppNameByBoxId(string token, string boxId) {
            return base.Channel.GetInnKppNameByBoxId(token, boxId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetInnKppNameByBoxId(string token, string boxId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInnKppNameByBoxId(token, boxId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.InnKppName EndGetInnKppNameByBoxId(System.IAsyncResult result) {
            return base.Channel.EndGetInnKppNameByBoxId(result);
        }
        
        private System.IAsyncResult OnBeginGetInnKppNameByBoxId(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string token = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            return this.BeginGetInnKppNameByBoxId(token, boxId, callback, asyncState);
        }
        
        private object[] OnEndGetInnKppNameByBoxId(System.IAsyncResult result) {
            Midway.ObjectModel.InnKppName retVal = this.EndGetInnKppNameByBoxId(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInnKppNameByBoxIdCompleted(object state) {
            if ((this.GetInnKppNameByBoxIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInnKppNameByBoxIdCompleted(this, new GetInnKppNameByBoxIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInnKppNameByBoxIdAsync(string token, string boxId) {
            this.GetInnKppNameByBoxIdAsync(token, boxId, null);
        }
        
        public void GetInnKppNameByBoxIdAsync(string token, string boxId, object userState) {
            if ((this.onBeginGetInnKppNameByBoxIdDelegate == null)) {
                this.onBeginGetInnKppNameByBoxIdDelegate = new BeginOperationDelegate(this.OnBeginGetInnKppNameByBoxId);
            }
            if ((this.onEndGetInnKppNameByBoxIdDelegate == null)) {
                this.onEndGetInnKppNameByBoxIdDelegate = new EndOperationDelegate(this.OnEndGetInnKppNameByBoxId);
            }
            if ((this.onGetInnKppNameByBoxIdCompletedDelegate == null)) {
                this.onGetInnKppNameByBoxIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInnKppNameByBoxIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetInnKppNameByBoxIdDelegate, new object[] {
                        token,
                        boxId}, this.onEndGetInnKppNameByBoxIdDelegate, this.onGetInnKppNameByBoxIdCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.ContactSearchResult SearchContacts(string authToken, Midway.ObjectModel.ContactSearchOptions contactSearchOptions) {
            return base.Channel.SearchContacts(authToken, contactSearchOptions);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchContacts(string authToken, Midway.ObjectModel.ContactSearchOptions contactSearchOptions, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchContacts(authToken, contactSearchOptions, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.ContactSearchResult EndSearchContacts(System.IAsyncResult result) {
            return base.Channel.EndSearchContacts(result);
        }
        
        private System.IAsyncResult OnBeginSearchContacts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.ContactSearchOptions contactSearchOptions = ((Midway.ObjectModel.ContactSearchOptions)(inValues[1]));
            return this.BeginSearchContacts(authToken, contactSearchOptions, callback, asyncState);
        }
        
        private object[] OnEndSearchContacts(System.IAsyncResult result) {
            Midway.ObjectModel.ContactSearchResult retVal = this.EndSearchContacts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchContactsCompleted(object state) {
            if ((this.SearchContactsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchContactsCompleted(this, new SearchContactsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchContactsAsync(string authToken, Midway.ObjectModel.ContactSearchOptions contactSearchOptions) {
            this.SearchContactsAsync(authToken, contactSearchOptions, null);
        }
        
        public void SearchContactsAsync(string authToken, Midway.ObjectModel.ContactSearchOptions contactSearchOptions, object userState) {
            if ((this.onBeginSearchContactsDelegate == null)) {
                this.onBeginSearchContactsDelegate = new BeginOperationDelegate(this.OnBeginSearchContacts);
            }
            if ((this.onEndSearchContactsDelegate == null)) {
                this.onEndSearchContactsDelegate = new EndOperationDelegate(this.OnEndSearchContacts);
            }
            if ((this.onSearchContactsCompletedDelegate == null)) {
                this.onSearchContactsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchContactsCompleted);
            }
            base.InvokeAsync(this.onBeginSearchContactsDelegate, new object[] {
                        authToken,
                        contactSearchOptions}, this.onEndSearchContactsDelegate, this.onSearchContactsCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.Contact GetContact(string authToken, int organizationId, int contragentId) {
            return base.Channel.GetContact(authToken, organizationId, contragentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetContact(string authToken, int organizationId, int contragentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetContact(authToken, organizationId, contragentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.Contact EndGetContact(System.IAsyncResult result) {
            return base.Channel.EndGetContact(result);
        }
        
        private System.IAsyncResult OnBeginGetContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            int organizationId = ((int)(inValues[1]));
            int contragentId = ((int)(inValues[2]));
            return this.BeginGetContact(authToken, organizationId, contragentId, callback, asyncState);
        }
        
        private object[] OnEndGetContact(System.IAsyncResult result) {
            Midway.ObjectModel.Contact retVal = this.EndGetContact(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetContactCompleted(object state) {
            if ((this.GetContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetContactCompleted(this, new GetContactCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetContactAsync(string authToken, int organizationId, int contragentId) {
            this.GetContactAsync(authToken, organizationId, contragentId, null);
        }
        
        public void GetContactAsync(string authToken, int organizationId, int contragentId, object userState) {
            if ((this.onBeginGetContactDelegate == null)) {
                this.onBeginGetContactDelegate = new BeginOperationDelegate(this.OnBeginGetContact);
            }
            if ((this.onEndGetContactDelegate == null)) {
                this.onEndGetContactDelegate = new EndOperationDelegate(this.OnEndGetContact);
            }
            if ((this.onGetContactCompletedDelegate == null)) {
                this.onGetContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetContactCompleted);
            }
            base.InvokeAsync(this.onBeginGetContactDelegate, new object[] {
                        authToken,
                        organizationId,
                        contragentId}, this.onEndGetContactDelegate, this.onGetContactCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.ContactStatus AcceptAuthorization(string authToken, int organizationId, int contragentId, string comment) {
            return base.Channel.AcceptAuthorization(authToken, organizationId, contragentId, comment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAcceptAuthorization(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAcceptAuthorization(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.ContactStatus EndAcceptAuthorization(System.IAsyncResult result) {
            return base.Channel.EndAcceptAuthorization(result);
        }
        
        private System.IAsyncResult OnBeginAcceptAuthorization(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            int organizationId = ((int)(inValues[1]));
            int contragentId = ((int)(inValues[2]));
            string comment = ((string)(inValues[3]));
            return this.BeginAcceptAuthorization(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        private object[] OnEndAcceptAuthorization(System.IAsyncResult result) {
            Midway.ObjectModel.ContactStatus retVal = this.EndAcceptAuthorization(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAcceptAuthorizationCompleted(object state) {
            if ((this.AcceptAuthorizationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AcceptAuthorizationCompleted(this, new AcceptAuthorizationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AcceptAuthorizationAsync(string authToken, int organizationId, int contragentId, string comment) {
            this.AcceptAuthorizationAsync(authToken, organizationId, contragentId, comment, null);
        }
        
        public void AcceptAuthorizationAsync(string authToken, int organizationId, int contragentId, string comment, object userState) {
            if ((this.onBeginAcceptAuthorizationDelegate == null)) {
                this.onBeginAcceptAuthorizationDelegate = new BeginOperationDelegate(this.OnBeginAcceptAuthorization);
            }
            if ((this.onEndAcceptAuthorizationDelegate == null)) {
                this.onEndAcceptAuthorizationDelegate = new EndOperationDelegate(this.OnEndAcceptAuthorization);
            }
            if ((this.onAcceptAuthorizationCompletedDelegate == null)) {
                this.onAcceptAuthorizationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAcceptAuthorizationCompleted);
            }
            base.InvokeAsync(this.onBeginAcceptAuthorizationDelegate, new object[] {
                        authToken,
                        organizationId,
                        contragentId,
                        comment}, this.onEndAcceptAuthorizationDelegate, this.onAcceptAuthorizationCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.ContactStatus RejectAuthorization(string authToken, int organizationId, int contragentId, string comment) {
            return base.Channel.RejectAuthorization(authToken, organizationId, contragentId, comment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRejectAuthorization(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRejectAuthorization(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.ContactStatus EndRejectAuthorization(System.IAsyncResult result) {
            return base.Channel.EndRejectAuthorization(result);
        }
        
        private System.IAsyncResult OnBeginRejectAuthorization(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            int organizationId = ((int)(inValues[1]));
            int contragentId = ((int)(inValues[2]));
            string comment = ((string)(inValues[3]));
            return this.BeginRejectAuthorization(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        private object[] OnEndRejectAuthorization(System.IAsyncResult result) {
            Midway.ObjectModel.ContactStatus retVal = this.EndRejectAuthorization(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRejectAuthorizationCompleted(object state) {
            if ((this.RejectAuthorizationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RejectAuthorizationCompleted(this, new RejectAuthorizationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RejectAuthorizationAsync(string authToken, int organizationId, int contragentId, string comment) {
            this.RejectAuthorizationAsync(authToken, organizationId, contragentId, comment, null);
        }
        
        public void RejectAuthorizationAsync(string authToken, int organizationId, int contragentId, string comment, object userState) {
            if ((this.onBeginRejectAuthorizationDelegate == null)) {
                this.onBeginRejectAuthorizationDelegate = new BeginOperationDelegate(this.OnBeginRejectAuthorization);
            }
            if ((this.onEndRejectAuthorizationDelegate == null)) {
                this.onEndRejectAuthorizationDelegate = new EndOperationDelegate(this.OnEndRejectAuthorization);
            }
            if ((this.onRejectAuthorizationCompletedDelegate == null)) {
                this.onRejectAuthorizationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRejectAuthorizationCompleted);
            }
            base.InvokeAsync(this.onBeginRejectAuthorizationDelegate, new object[] {
                        authToken,
                        organizationId,
                        contragentId,
                        comment}, this.onEndRejectAuthorizationDelegate, this.onRejectAuthorizationCompletedDelegate, userState);
        }
        
        public void SendAuthRequest(string authToken, int organizationId, int contragentId, string comment) {
            base.Channel.SendAuthRequest(authToken, organizationId, contragentId, comment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendAuthRequest(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendAuthRequest(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSendAuthRequest(System.IAsyncResult result) {
            base.Channel.EndSendAuthRequest(result);
        }
        
        private System.IAsyncResult OnBeginSendAuthRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            int organizationId = ((int)(inValues[1]));
            int contragentId = ((int)(inValues[2]));
            string comment = ((string)(inValues[3]));
            return this.BeginSendAuthRequest(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        private object[] OnEndSendAuthRequest(System.IAsyncResult result) {
            this.EndSendAuthRequest(result);
            return null;
        }
        
        private void OnSendAuthRequestCompleted(object state) {
            if ((this.SendAuthRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendAuthRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendAuthRequestAsync(string authToken, int organizationId, int contragentId, string comment) {
            this.SendAuthRequestAsync(authToken, organizationId, contragentId, comment, null);
        }
        
        public void SendAuthRequestAsync(string authToken, int organizationId, int contragentId, string comment, object userState) {
            if ((this.onBeginSendAuthRequestDelegate == null)) {
                this.onBeginSendAuthRequestDelegate = new BeginOperationDelegate(this.OnBeginSendAuthRequest);
            }
            if ((this.onEndSendAuthRequestDelegate == null)) {
                this.onEndSendAuthRequestDelegate = new EndOperationDelegate(this.OnEndSendAuthRequest);
            }
            if ((this.onSendAuthRequestCompletedDelegate == null)) {
                this.onSendAuthRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendAuthRequestCompleted);
            }
            base.InvokeAsync(this.onBeginSendAuthRequestDelegate, new object[] {
                        authToken,
                        organizationId,
                        contragentId,
                        comment}, this.onEndSendAuthRequestDelegate, this.onSendAuthRequestCompletedDelegate, userState);
        }
        
        public void CancelAuthRequest(string authToken, int organizationId, int contragentId, string comment) {
            base.Channel.CancelAuthRequest(authToken, organizationId, contragentId, comment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCancelAuthRequest(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCancelAuthRequest(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndCancelAuthRequest(System.IAsyncResult result) {
            base.Channel.EndCancelAuthRequest(result);
        }
        
        private System.IAsyncResult OnBeginCancelAuthRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            int organizationId = ((int)(inValues[1]));
            int contragentId = ((int)(inValues[2]));
            string comment = ((string)(inValues[3]));
            return this.BeginCancelAuthRequest(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        private object[] OnEndCancelAuthRequest(System.IAsyncResult result) {
            this.EndCancelAuthRequest(result);
            return null;
        }
        
        private void OnCancelAuthRequestCompleted(object state) {
            if ((this.CancelAuthRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CancelAuthRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CancelAuthRequestAsync(string authToken, int organizationId, int contragentId, string comment) {
            this.CancelAuthRequestAsync(authToken, organizationId, contragentId, comment, null);
        }
        
        public void CancelAuthRequestAsync(string authToken, int organizationId, int contragentId, string comment, object userState) {
            if ((this.onBeginCancelAuthRequestDelegate == null)) {
                this.onBeginCancelAuthRequestDelegate = new BeginOperationDelegate(this.OnBeginCancelAuthRequest);
            }
            if ((this.onEndCancelAuthRequestDelegate == null)) {
                this.onEndCancelAuthRequestDelegate = new EndOperationDelegate(this.OnEndCancelAuthRequest);
            }
            if ((this.onCancelAuthRequestCompletedDelegate == null)) {
                this.onCancelAuthRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCancelAuthRequestCompleted);
            }
            base.InvokeAsync(this.onBeginCancelAuthRequestDelegate, new object[] {
                        authToken,
                        organizationId,
                        contragentId,
                        comment}, this.onEndCancelAuthRequestDelegate, this.onCancelAuthRequestCompletedDelegate, userState);
        }
        
        public void AcceptAuthRequest(string authToken, int organizationId, int contragentId, string comment) {
            base.Channel.AcceptAuthRequest(authToken, organizationId, contragentId, comment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAcceptAuthRequest(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAcceptAuthRequest(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAcceptAuthRequest(System.IAsyncResult result) {
            base.Channel.EndAcceptAuthRequest(result);
        }
        
        private System.IAsyncResult OnBeginAcceptAuthRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            int organizationId = ((int)(inValues[1]));
            int contragentId = ((int)(inValues[2]));
            string comment = ((string)(inValues[3]));
            return this.BeginAcceptAuthRequest(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        private object[] OnEndAcceptAuthRequest(System.IAsyncResult result) {
            this.EndAcceptAuthRequest(result);
            return null;
        }
        
        private void OnAcceptAuthRequestCompleted(object state) {
            if ((this.AcceptAuthRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AcceptAuthRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AcceptAuthRequestAsync(string authToken, int organizationId, int contragentId, string comment) {
            this.AcceptAuthRequestAsync(authToken, organizationId, contragentId, comment, null);
        }
        
        public void AcceptAuthRequestAsync(string authToken, int organizationId, int contragentId, string comment, object userState) {
            if ((this.onBeginAcceptAuthRequestDelegate == null)) {
                this.onBeginAcceptAuthRequestDelegate = new BeginOperationDelegate(this.OnBeginAcceptAuthRequest);
            }
            if ((this.onEndAcceptAuthRequestDelegate == null)) {
                this.onEndAcceptAuthRequestDelegate = new EndOperationDelegate(this.OnEndAcceptAuthRequest);
            }
            if ((this.onAcceptAuthRequestCompletedDelegate == null)) {
                this.onAcceptAuthRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAcceptAuthRequestCompleted);
            }
            base.InvokeAsync(this.onBeginAcceptAuthRequestDelegate, new object[] {
                        authToken,
                        organizationId,
                        contragentId,
                        comment}, this.onEndAcceptAuthRequestDelegate, this.onAcceptAuthRequestCompletedDelegate, userState);
        }
        
        public void RejectAuthRequest(string authToken, int organizationId, int contragentId, string comment) {
            base.Channel.RejectAuthRequest(authToken, organizationId, contragentId, comment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRejectAuthRequest(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRejectAuthRequest(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRejectAuthRequest(System.IAsyncResult result) {
            base.Channel.EndRejectAuthRequest(result);
        }
        
        private System.IAsyncResult OnBeginRejectAuthRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            int organizationId = ((int)(inValues[1]));
            int contragentId = ((int)(inValues[2]));
            string comment = ((string)(inValues[3]));
            return this.BeginRejectAuthRequest(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        private object[] OnEndRejectAuthRequest(System.IAsyncResult result) {
            this.EndRejectAuthRequest(result);
            return null;
        }
        
        private void OnRejectAuthRequestCompleted(object state) {
            if ((this.RejectAuthRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RejectAuthRequestCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RejectAuthRequestAsync(string authToken, int organizationId, int contragentId, string comment) {
            this.RejectAuthRequestAsync(authToken, organizationId, contragentId, comment, null);
        }
        
        public void RejectAuthRequestAsync(string authToken, int organizationId, int contragentId, string comment, object userState) {
            if ((this.onBeginRejectAuthRequestDelegate == null)) {
                this.onBeginRejectAuthRequestDelegate = new BeginOperationDelegate(this.OnBeginRejectAuthRequest);
            }
            if ((this.onEndRejectAuthRequestDelegate == null)) {
                this.onEndRejectAuthRequestDelegate = new EndOperationDelegate(this.OnEndRejectAuthRequest);
            }
            if ((this.onRejectAuthRequestCompletedDelegate == null)) {
                this.onRejectAuthRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRejectAuthRequestCompleted);
            }
            base.InvokeAsync(this.onBeginRejectAuthRequestDelegate, new object[] {
                        authToken,
                        organizationId,
                        contragentId,
                        comment}, this.onEndRejectAuthRequestDelegate, this.onRejectAuthRequestCompletedDelegate, userState);
        }
        
        public void DeleteContact(string authToken, int organizationId, int contragentId, string comment) {
            base.Channel.DeleteContact(authToken, organizationId, contragentId, comment);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteContact(string authToken, int organizationId, int contragentId, string comment, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteContact(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteContact(System.IAsyncResult result) {
            base.Channel.EndDeleteContact(result);
        }
        
        private System.IAsyncResult OnBeginDeleteContact(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            int organizationId = ((int)(inValues[1]));
            int contragentId = ((int)(inValues[2]));
            string comment = ((string)(inValues[3]));
            return this.BeginDeleteContact(authToken, organizationId, contragentId, comment, callback, asyncState);
        }
        
        private object[] OnEndDeleteContact(System.IAsyncResult result) {
            this.EndDeleteContact(result);
            return null;
        }
        
        private void OnDeleteContactCompleted(object state) {
            if ((this.DeleteContactCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteContactCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteContactAsync(string authToken, int organizationId, int contragentId, string comment) {
            this.DeleteContactAsync(authToken, organizationId, contragentId, comment, null);
        }
        
        public void DeleteContactAsync(string authToken, int organizationId, int contragentId, string comment, object userState) {
            if ((this.onBeginDeleteContactDelegate == null)) {
                this.onBeginDeleteContactDelegate = new BeginOperationDelegate(this.OnBeginDeleteContact);
            }
            if ((this.onEndDeleteContactDelegate == null)) {
                this.onEndDeleteContactDelegate = new EndOperationDelegate(this.OnEndDeleteContact);
            }
            if ((this.onDeleteContactCompletedDelegate == null)) {
                this.onDeleteContactCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteContactCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteContactDelegate, new object[] {
                        authToken,
                        organizationId,
                        contragentId,
                        comment}, this.onEndDeleteContactDelegate, this.onDeleteContactCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.Organization GetOrganizationByInnKpp(string authToken, string inn, string kpp) {
            return base.Channel.GetOrganizationByInnKpp(authToken, inn, kpp);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrganizationByInnKpp(string authToken, string inn, string kpp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrganizationByInnKpp(authToken, inn, kpp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.Organization EndGetOrganizationByInnKpp(System.IAsyncResult result) {
            return base.Channel.EndGetOrganizationByInnKpp(result);
        }
        
        private System.IAsyncResult OnBeginGetOrganizationByInnKpp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string inn = ((string)(inValues[1]));
            string kpp = ((string)(inValues[2]));
            return this.BeginGetOrganizationByInnKpp(authToken, inn, kpp, callback, asyncState);
        }
        
        private object[] OnEndGetOrganizationByInnKpp(System.IAsyncResult result) {
            Midway.ObjectModel.Organization retVal = this.EndGetOrganizationByInnKpp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrganizationByInnKppCompleted(object state) {
            if ((this.GetOrganizationByInnKppCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrganizationByInnKppCompleted(this, new GetOrganizationByInnKppCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrganizationByInnKppAsync(string authToken, string inn, string kpp) {
            this.GetOrganizationByInnKppAsync(authToken, inn, kpp, null);
        }
        
        public void GetOrganizationByInnKppAsync(string authToken, string inn, string kpp, object userState) {
            if ((this.onBeginGetOrganizationByInnKppDelegate == null)) {
                this.onBeginGetOrganizationByInnKppDelegate = new BeginOperationDelegate(this.OnBeginGetOrganizationByInnKpp);
            }
            if ((this.onEndGetOrganizationByInnKppDelegate == null)) {
                this.onEndGetOrganizationByInnKppDelegate = new EndOperationDelegate(this.OnEndGetOrganizationByInnKpp);
            }
            if ((this.onGetOrganizationByInnKppCompletedDelegate == null)) {
                this.onGetOrganizationByInnKppCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrganizationByInnKppCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrganizationByInnKppDelegate, new object[] {
                        authToken,
                        inn,
                        kpp}, this.onEndGetOrganizationByInnKppDelegate, this.onGetOrganizationByInnKppCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.Organization GetOrganizationBy(string authToken, string boxId, Midway.ObjectModel.OrganizationByCriteria criteria, Midway.ObjectModel.OrganizationByCriteriaValues values) {
            return base.Channel.GetOrganizationBy(authToken, boxId, criteria, values);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrganizationBy(string authToken, string boxId, Midway.ObjectModel.OrganizationByCriteria criteria, Midway.ObjectModel.OrganizationByCriteriaValues values, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrganizationBy(authToken, boxId, criteria, values, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.Organization EndGetOrganizationBy(System.IAsyncResult result) {
            return base.Channel.EndGetOrganizationBy(result);
        }
        
        private System.IAsyncResult OnBeginGetOrganizationBy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            Midway.ObjectModel.OrganizationByCriteria criteria = ((Midway.ObjectModel.OrganizationByCriteria)(inValues[2]));
            Midway.ObjectModel.OrganizationByCriteriaValues values = ((Midway.ObjectModel.OrganizationByCriteriaValues)(inValues[3]));
            return this.BeginGetOrganizationBy(authToken, boxId, criteria, values, callback, asyncState);
        }
        
        private object[] OnEndGetOrganizationBy(System.IAsyncResult result) {
            Midway.ObjectModel.Organization retVal = this.EndGetOrganizationBy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrganizationByCompleted(object state) {
            if ((this.GetOrganizationByCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrganizationByCompleted(this, new GetOrganizationByCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrganizationByAsync(string authToken, string boxId, Midway.ObjectModel.OrganizationByCriteria criteria, Midway.ObjectModel.OrganizationByCriteriaValues values) {
            this.GetOrganizationByAsync(authToken, boxId, criteria, values, null);
        }
        
        public void GetOrganizationByAsync(string authToken, string boxId, Midway.ObjectModel.OrganizationByCriteria criteria, Midway.ObjectModel.OrganizationByCriteriaValues values, object userState) {
            if ((this.onBeginGetOrganizationByDelegate == null)) {
                this.onBeginGetOrganizationByDelegate = new BeginOperationDelegate(this.OnBeginGetOrganizationBy);
            }
            if ((this.onEndGetOrganizationByDelegate == null)) {
                this.onEndGetOrganizationByDelegate = new EndOperationDelegate(this.OnEndGetOrganizationBy);
            }
            if ((this.onGetOrganizationByCompletedDelegate == null)) {
                this.onGetOrganizationByCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrganizationByCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrganizationByDelegate, new object[] {
                        authToken,
                        boxId,
                        criteria,
                        values}, this.onEndGetOrganizationByDelegate, this.onGetOrganizationByCompletedDelegate, userState);
        }
        
        public string GetErrorText(Midway.ObjectModel.Exceptions.ServiceErrorCode code) {
            return base.Channel.GetErrorText(code);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetErrorText(Midway.ObjectModel.Exceptions.ServiceErrorCode code, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetErrorText(code, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetErrorText(System.IAsyncResult result) {
            return base.Channel.EndGetErrorText(result);
        }
        
        private System.IAsyncResult OnBeginGetErrorText(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.Exceptions.ServiceErrorCode code = ((Midway.ObjectModel.Exceptions.ServiceErrorCode)(inValues[0]));
            return this.BeginGetErrorText(code, callback, asyncState);
        }
        
        private object[] OnEndGetErrorText(System.IAsyncResult result) {
            string retVal = this.EndGetErrorText(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetErrorTextCompleted(object state) {
            if ((this.GetErrorTextCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetErrorTextCompleted(this, new GetErrorTextCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetErrorTextAsync(Midway.ObjectModel.Exceptions.ServiceErrorCode code) {
            this.GetErrorTextAsync(code, null);
        }
        
        public void GetErrorTextAsync(Midway.ObjectModel.Exceptions.ServiceErrorCode code, object userState) {
            if ((this.onBeginGetErrorTextDelegate == null)) {
                this.onBeginGetErrorTextDelegate = new BeginOperationDelegate(this.OnBeginGetErrorText);
            }
            if ((this.onEndGetErrorTextDelegate == null)) {
                this.onEndGetErrorTextDelegate = new EndOperationDelegate(this.OnEndGetErrorText);
            }
            if ((this.onGetErrorTextCompletedDelegate == null)) {
                this.onGetErrorTextCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetErrorTextCompleted);
            }
            base.InvokeAsync(this.onBeginGetErrorTextDelegate, new object[] {
                        code}, this.onEndGetErrorTextDelegate, this.onGetErrorTextCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.BoxInfo[] GetBoxes(string authToken) {
            return base.Channel.GetBoxes(authToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBoxes(string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBoxes(authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.BoxInfo[] EndGetBoxes(System.IAsyncResult result) {
            return base.Channel.EndGetBoxes(result);
        }
        
        private System.IAsyncResult OnBeginGetBoxes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            return this.BeginGetBoxes(authToken, callback, asyncState);
        }
        
        private object[] OnEndGetBoxes(System.IAsyncResult result) {
            Midway.ObjectModel.BoxInfo[] retVal = this.EndGetBoxes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBoxesCompleted(object state) {
            if ((this.GetBoxesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBoxesCompleted(this, new GetBoxesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBoxesAsync(string authToken) {
            this.GetBoxesAsync(authToken, null);
        }
        
        public void GetBoxesAsync(string authToken, object userState) {
            if ((this.onBeginGetBoxesDelegate == null)) {
                this.onBeginGetBoxesDelegate = new BeginOperationDelegate(this.OnBeginGetBoxes);
            }
            if ((this.onEndGetBoxesDelegate == null)) {
                this.onEndGetBoxesDelegate = new EndOperationDelegate(this.OnEndGetBoxes);
            }
            if ((this.onGetBoxesCompletedDelegate == null)) {
                this.onGetBoxesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBoxesCompleted);
            }
            base.InvokeAsync(this.onBeginGetBoxesDelegate, new object[] {
                        authToken}, this.onEndGetBoxesDelegate, this.onGetBoxesCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SubjectInfo GetSubjectInfo(string authToken, string subjectBoxId) {
            return base.Channel.GetSubjectInfo(authToken, subjectBoxId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSubjectInfo(string authToken, string subjectBoxId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSubjectInfo(authToken, subjectBoxId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SubjectInfo EndGetSubjectInfo(System.IAsyncResult result) {
            return base.Channel.EndGetSubjectInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetSubjectInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string subjectBoxId = ((string)(inValues[1]));
            return this.BeginGetSubjectInfo(authToken, subjectBoxId, callback, asyncState);
        }
        
        private object[] OnEndGetSubjectInfo(System.IAsyncResult result) {
            Midway.ObjectModel.SubjectInfo retVal = this.EndGetSubjectInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSubjectInfoCompleted(object state) {
            if ((this.GetSubjectInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSubjectInfoCompleted(this, new GetSubjectInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSubjectInfoAsync(string authToken, string subjectBoxId) {
            this.GetSubjectInfoAsync(authToken, subjectBoxId, null);
        }
        
        public void GetSubjectInfoAsync(string authToken, string subjectBoxId, object userState) {
            if ((this.onBeginGetSubjectInfoDelegate == null)) {
                this.onBeginGetSubjectInfoDelegate = new BeginOperationDelegate(this.OnBeginGetSubjectInfo);
            }
            if ((this.onEndGetSubjectInfoDelegate == null)) {
                this.onEndGetSubjectInfoDelegate = new EndOperationDelegate(this.OnEndGetSubjectInfo);
            }
            if ((this.onGetSubjectInfoCompletedDelegate == null)) {
                this.onGetSubjectInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSubjectInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetSubjectInfoDelegate, new object[] {
                        authToken,
                        subjectBoxId}, this.onEndGetSubjectInfoDelegate, this.onGetSubjectInfoCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SubjectInfo GetSpecialOperatorInfo(string authToken) {
            return base.Channel.GetSpecialOperatorInfo(authToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSpecialOperatorInfo(string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSpecialOperatorInfo(authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SubjectInfo EndGetSpecialOperatorInfo(System.IAsyncResult result) {
            return base.Channel.EndGetSpecialOperatorInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetSpecialOperatorInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            return this.BeginGetSpecialOperatorInfo(authToken, callback, asyncState);
        }
        
        private object[] OnEndGetSpecialOperatorInfo(System.IAsyncResult result) {
            Midway.ObjectModel.SubjectInfo retVal = this.EndGetSpecialOperatorInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSpecialOperatorInfoCompleted(object state) {
            if ((this.GetSpecialOperatorInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSpecialOperatorInfoCompleted(this, new GetSpecialOperatorInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSpecialOperatorInfoAsync(string authToken) {
            this.GetSpecialOperatorInfoAsync(authToken, null);
        }
        
        public void GetSpecialOperatorInfoAsync(string authToken, object userState) {
            if ((this.onBeginGetSpecialOperatorInfoDelegate == null)) {
                this.onBeginGetSpecialOperatorInfoDelegate = new BeginOperationDelegate(this.OnBeginGetSpecialOperatorInfo);
            }
            if ((this.onEndGetSpecialOperatorInfoDelegate == null)) {
                this.onEndGetSpecialOperatorInfoDelegate = new EndOperationDelegate(this.OnEndGetSpecialOperatorInfo);
            }
            if ((this.onGetSpecialOperatorInfoCompletedDelegate == null)) {
                this.onGetSpecialOperatorInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSpecialOperatorInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetSpecialOperatorInfoDelegate, new object[] {
                        authToken}, this.onEndGetSpecialOperatorInfoDelegate, this.onGetSpecialOperatorInfoCompletedDelegate, userState);
        }
        
        public string AddOrganizationStructureElement(string authToken, Midway.ObjectModel.OrganizationStructureElement element) {
            return base.Channel.AddOrganizationStructureElement(authToken, element);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddOrganizationStructureElement(string authToken, Midway.ObjectModel.OrganizationStructureElement element, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOrganizationStructureElement(authToken, element, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndAddOrganizationStructureElement(System.IAsyncResult result) {
            return base.Channel.EndAddOrganizationStructureElement(result);
        }
        
        private System.IAsyncResult OnBeginAddOrganizationStructureElement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.OrganizationStructureElement element = ((Midway.ObjectModel.OrganizationStructureElement)(inValues[1]));
            return this.BeginAddOrganizationStructureElement(authToken, element, callback, asyncState);
        }
        
        private object[] OnEndAddOrganizationStructureElement(System.IAsyncResult result) {
            string retVal = this.EndAddOrganizationStructureElement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAddOrganizationStructureElementCompleted(object state) {
            if ((this.AddOrganizationStructureElementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOrganizationStructureElementCompleted(this, new AddOrganizationStructureElementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOrganizationStructureElementAsync(string authToken, Midway.ObjectModel.OrganizationStructureElement element) {
            this.AddOrganizationStructureElementAsync(authToken, element, null);
        }
        
        public void AddOrganizationStructureElementAsync(string authToken, Midway.ObjectModel.OrganizationStructureElement element, object userState) {
            if ((this.onBeginAddOrganizationStructureElementDelegate == null)) {
                this.onBeginAddOrganizationStructureElementDelegate = new BeginOperationDelegate(this.OnBeginAddOrganizationStructureElement);
            }
            if ((this.onEndAddOrganizationStructureElementDelegate == null)) {
                this.onEndAddOrganizationStructureElementDelegate = new EndOperationDelegate(this.OnEndAddOrganizationStructureElement);
            }
            if ((this.onAddOrganizationStructureElementCompletedDelegate == null)) {
                this.onAddOrganizationStructureElementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOrganizationStructureElementCompleted);
            }
            base.InvokeAsync(this.onBeginAddOrganizationStructureElementDelegate, new object[] {
                        authToken,
                        element}, this.onEndAddOrganizationStructureElementDelegate, this.onAddOrganizationStructureElementCompletedDelegate, userState);
        }
        
        public void DeleteOrganizationStructureElement(string authToken, string organizationId, string elementId) {
            base.Channel.DeleteOrganizationStructureElement(authToken, organizationId, elementId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteOrganizationStructureElement(string authToken, string organizationId, string elementId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteOrganizationStructureElement(authToken, organizationId, elementId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteOrganizationStructureElement(System.IAsyncResult result) {
            base.Channel.EndDeleteOrganizationStructureElement(result);
        }
        
        private System.IAsyncResult OnBeginDeleteOrganizationStructureElement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string organizationId = ((string)(inValues[1]));
            string elementId = ((string)(inValues[2]));
            return this.BeginDeleteOrganizationStructureElement(authToken, organizationId, elementId, callback, asyncState);
        }
        
        private object[] OnEndDeleteOrganizationStructureElement(System.IAsyncResult result) {
            this.EndDeleteOrganizationStructureElement(result);
            return null;
        }
        
        private void OnDeleteOrganizationStructureElementCompleted(object state) {
            if ((this.DeleteOrganizationStructureElementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteOrganizationStructureElementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteOrganizationStructureElementAsync(string authToken, string organizationId, string elementId) {
            this.DeleteOrganizationStructureElementAsync(authToken, organizationId, elementId, null);
        }
        
        public void DeleteOrganizationStructureElementAsync(string authToken, string organizationId, string elementId, object userState) {
            if ((this.onBeginDeleteOrganizationStructureElementDelegate == null)) {
                this.onBeginDeleteOrganizationStructureElementDelegate = new BeginOperationDelegate(this.OnBeginDeleteOrganizationStructureElement);
            }
            if ((this.onEndDeleteOrganizationStructureElementDelegate == null)) {
                this.onEndDeleteOrganizationStructureElementDelegate = new EndOperationDelegate(this.OnEndDeleteOrganizationStructureElement);
            }
            if ((this.onDeleteOrganizationStructureElementCompletedDelegate == null)) {
                this.onDeleteOrganizationStructureElementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationStructureElementCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteOrganizationStructureElementDelegate, new object[] {
                        authToken,
                        organizationId,
                        elementId}, this.onEndDeleteOrganizationStructureElementDelegate, this.onDeleteOrganizationStructureElementCompletedDelegate, userState);
        }
        
        public void ModifyOrganizationStructureElement(string authToken, Midway.ObjectModel.OrganizationStructureElement element) {
            base.Channel.ModifyOrganizationStructureElement(authToken, element);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginModifyOrganizationStructureElement(string authToken, Midway.ObjectModel.OrganizationStructureElement element, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModifyOrganizationStructureElement(authToken, element, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndModifyOrganizationStructureElement(System.IAsyncResult result) {
            base.Channel.EndModifyOrganizationStructureElement(result);
        }
        
        private System.IAsyncResult OnBeginModifyOrganizationStructureElement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.OrganizationStructureElement element = ((Midway.ObjectModel.OrganizationStructureElement)(inValues[1]));
            return this.BeginModifyOrganizationStructureElement(authToken, element, callback, asyncState);
        }
        
        private object[] OnEndModifyOrganizationStructureElement(System.IAsyncResult result) {
            this.EndModifyOrganizationStructureElement(result);
            return null;
        }
        
        private void OnModifyOrganizationStructureElementCompleted(object state) {
            if ((this.ModifyOrganizationStructureElementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModifyOrganizationStructureElementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModifyOrganizationStructureElementAsync(string authToken, Midway.ObjectModel.OrganizationStructureElement element) {
            this.ModifyOrganizationStructureElementAsync(authToken, element, null);
        }
        
        public void ModifyOrganizationStructureElementAsync(string authToken, Midway.ObjectModel.OrganizationStructureElement element, object userState) {
            if ((this.onBeginModifyOrganizationStructureElementDelegate == null)) {
                this.onBeginModifyOrganizationStructureElementDelegate = new BeginOperationDelegate(this.OnBeginModifyOrganizationStructureElement);
            }
            if ((this.onEndModifyOrganizationStructureElementDelegate == null)) {
                this.onEndModifyOrganizationStructureElementDelegate = new EndOperationDelegate(this.OnEndModifyOrganizationStructureElement);
            }
            if ((this.onModifyOrganizationStructureElementCompletedDelegate == null)) {
                this.onModifyOrganizationStructureElementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModifyOrganizationStructureElementCompleted);
            }
            base.InvokeAsync(this.onBeginModifyOrganizationStructureElementDelegate, new object[] {
                        authToken,
                        element}, this.onEndModifyOrganizationStructureElementDelegate, this.onModifyOrganizationStructureElementCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.OrganizationStructureElement[] GetOrganizationStructure(string authToken, string boxId, string organizationId) {
            return base.Channel.GetOrganizationStructure(authToken, boxId, organizationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrganizationStructure(string authToken, string boxId, string organizationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrganizationStructure(authToken, boxId, organizationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.OrganizationStructureElement[] EndGetOrganizationStructure(System.IAsyncResult result) {
            return base.Channel.EndGetOrganizationStructure(result);
        }
        
        private System.IAsyncResult OnBeginGetOrganizationStructure(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string organizationId = ((string)(inValues[2]));
            return this.BeginGetOrganizationStructure(authToken, boxId, organizationId, callback, asyncState);
        }
        
        private object[] OnEndGetOrganizationStructure(System.IAsyncResult result) {
            Midway.ObjectModel.OrganizationStructureElement[] retVal = this.EndGetOrganizationStructure(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrganizationStructureCompleted(object state) {
            if ((this.GetOrganizationStructureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrganizationStructureCompleted(this, new GetOrganizationStructureCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrganizationStructureAsync(string authToken, string boxId, string organizationId) {
            this.GetOrganizationStructureAsync(authToken, boxId, organizationId, null);
        }
        
        public void GetOrganizationStructureAsync(string authToken, string boxId, string organizationId, object userState) {
            if ((this.onBeginGetOrganizationStructureDelegate == null)) {
                this.onBeginGetOrganizationStructureDelegate = new BeginOperationDelegate(this.OnBeginGetOrganizationStructure);
            }
            if ((this.onEndGetOrganizationStructureDelegate == null)) {
                this.onEndGetOrganizationStructureDelegate = new EndOperationDelegate(this.OnEndGetOrganizationStructure);
            }
            if ((this.onGetOrganizationStructureCompletedDelegate == null)) {
                this.onGetOrganizationStructureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrganizationStructureCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrganizationStructureDelegate, new object[] {
                        authToken,
                        boxId,
                        organizationId}, this.onEndGetOrganizationStructureDelegate, this.onGetOrganizationStructureCompletedDelegate, userState);
        }
        
        public bool OrganizationStructureHasSingleElement(string authToken, string organizationId) {
            return base.Channel.OrganizationStructureHasSingleElement(authToken, organizationId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginOrganizationStructureHasSingleElement(string authToken, string organizationId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginOrganizationStructureHasSingleElement(authToken, organizationId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndOrganizationStructureHasSingleElement(System.IAsyncResult result) {
            return base.Channel.EndOrganizationStructureHasSingleElement(result);
        }
        
        private System.IAsyncResult OnBeginOrganizationStructureHasSingleElement(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string organizationId = ((string)(inValues[1]));
            return this.BeginOrganizationStructureHasSingleElement(authToken, organizationId, callback, asyncState);
        }
        
        private object[] OnEndOrganizationStructureHasSingleElement(System.IAsyncResult result) {
            bool retVal = this.EndOrganizationStructureHasSingleElement(result);
            return new object[] {
                    retVal};
        }
        
        private void OnOrganizationStructureHasSingleElementCompleted(object state) {
            if ((this.OrganizationStructureHasSingleElementCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OrganizationStructureHasSingleElementCompleted(this, new OrganizationStructureHasSingleElementCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OrganizationStructureHasSingleElementAsync(string authToken, string organizationId) {
            this.OrganizationStructureHasSingleElementAsync(authToken, organizationId, null);
        }
        
        public void OrganizationStructureHasSingleElementAsync(string authToken, string organizationId, object userState) {
            if ((this.onBeginOrganizationStructureHasSingleElementDelegate == null)) {
                this.onBeginOrganizationStructureHasSingleElementDelegate = new BeginOperationDelegate(this.OnBeginOrganizationStructureHasSingleElement);
            }
            if ((this.onEndOrganizationStructureHasSingleElementDelegate == null)) {
                this.onEndOrganizationStructureHasSingleElementDelegate = new EndOperationDelegate(this.OnEndOrganizationStructureHasSingleElement);
            }
            if ((this.onOrganizationStructureHasSingleElementCompletedDelegate == null)) {
                this.onOrganizationStructureHasSingleElementCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOrganizationStructureHasSingleElementCompleted);
            }
            base.InvokeAsync(this.onBeginOrganizationStructureHasSingleElementDelegate, new object[] {
                        authToken,
                        organizationId}, this.onEndOrganizationStructureHasSingleElementDelegate, this.onOrganizationStructureHasSingleElementCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.OrganizationStructureElement[] GetOrganizationStructureElementChildren(string authToken, string organizationId, string orgStructureElementId) {
            return base.Channel.GetOrganizationStructureElementChildren(authToken, organizationId, orgStructureElementId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrganizationStructureElementChildren(string authToken, string organizationId, string orgStructureElementId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrganizationStructureElementChildren(authToken, organizationId, orgStructureElementId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.OrganizationStructureElement[] EndGetOrganizationStructureElementChildren(System.IAsyncResult result) {
            return base.Channel.EndGetOrganizationStructureElementChildren(result);
        }
        
        private System.IAsyncResult OnBeginGetOrganizationStructureElementChildren(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string organizationId = ((string)(inValues[1]));
            string orgStructureElementId = ((string)(inValues[2]));
            return this.BeginGetOrganizationStructureElementChildren(authToken, organizationId, orgStructureElementId, callback, asyncState);
        }
        
        private object[] OnEndGetOrganizationStructureElementChildren(System.IAsyncResult result) {
            Midway.ObjectModel.OrganizationStructureElement[] retVal = this.EndGetOrganizationStructureElementChildren(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrganizationStructureElementChildrenCompleted(object state) {
            if ((this.GetOrganizationStructureElementChildrenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrganizationStructureElementChildrenCompleted(this, new GetOrganizationStructureElementChildrenCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrganizationStructureElementChildrenAsync(string authToken, string organizationId, string orgStructureElementId) {
            this.GetOrganizationStructureElementChildrenAsync(authToken, organizationId, orgStructureElementId, null);
        }
        
        public void GetOrganizationStructureElementChildrenAsync(string authToken, string organizationId, string orgStructureElementId, object userState) {
            if ((this.onBeginGetOrganizationStructureElementChildrenDelegate == null)) {
                this.onBeginGetOrganizationStructureElementChildrenDelegate = new BeginOperationDelegate(this.OnBeginGetOrganizationStructureElementChildren);
            }
            if ((this.onEndGetOrganizationStructureElementChildrenDelegate == null)) {
                this.onEndGetOrganizationStructureElementChildrenDelegate = new EndOperationDelegate(this.OnEndGetOrganizationStructureElementChildren);
            }
            if ((this.onGetOrganizationStructureElementChildrenCompletedDelegate == null)) {
                this.onGetOrganizationStructureElementChildrenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrganizationStructureElementChildrenCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrganizationStructureElementChildrenDelegate, new object[] {
                        authToken,
                        organizationId,
                        orgStructureElementId}, this.onEndGetOrganizationStructureElementChildrenDelegate, this.onGetOrganizationStructureElementChildrenCompletedDelegate, userState);
        }
        
        public string GetVersion() {
            return base.Channel.GetVersion();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVersion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetVersion(System.IAsyncResult result) {
            return base.Channel.EndGetVersion(result);
        }
        
        private System.IAsyncResult OnBeginGetVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetVersion(callback, asyncState);
        }
        
        private object[] OnEndGetVersion(System.IAsyncResult result) {
            string retVal = this.EndGetVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVersionCompleted(object state) {
            if ((this.GetVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        public void GetVersionAsync(object userState) {
            if ((this.onBeginGetVersionDelegate == null)) {
                this.onBeginGetVersionDelegate = new BeginOperationDelegate(this.OnBeginGetVersion);
            }
            if ((this.onEndGetVersionDelegate == null)) {
                this.onEndGetVersionDelegate = new EndOperationDelegate(this.OnEndGetVersion);
            }
            if ((this.onGetVersionCompletedDelegate == null)) {
                this.onGetVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetVersionDelegate, null, this.onEndGetVersionDelegate, this.onGetVersionCompletedDelegate, userState);
        }
        
        public bool CanSendInvoice(string authToken, string certHash) {
            return base.Channel.CanSendInvoice(authToken, certHash);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCanSendInvoice(string authToken, string certHash, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCanSendInvoice(authToken, certHash, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndCanSendInvoice(System.IAsyncResult result) {
            return base.Channel.EndCanSendInvoice(result);
        }
        
        private System.IAsyncResult OnBeginCanSendInvoice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string certHash = ((string)(inValues[1]));
            return this.BeginCanSendInvoice(authToken, certHash, callback, asyncState);
        }
        
        private object[] OnEndCanSendInvoice(System.IAsyncResult result) {
            bool retVal = this.EndCanSendInvoice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCanSendInvoiceCompleted(object state) {
            if ((this.CanSendInvoiceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CanSendInvoiceCompleted(this, new CanSendInvoiceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CanSendInvoiceAsync(string authToken, string certHash) {
            this.CanSendInvoiceAsync(authToken, certHash, null);
        }
        
        public void CanSendInvoiceAsync(string authToken, string certHash, object userState) {
            if ((this.onBeginCanSendInvoiceDelegate == null)) {
                this.onBeginCanSendInvoiceDelegate = new BeginOperationDelegate(this.OnBeginCanSendInvoice);
            }
            if ((this.onEndCanSendInvoiceDelegate == null)) {
                this.onEndCanSendInvoiceDelegate = new EndOperationDelegate(this.OnEndCanSendInvoice);
            }
            if ((this.onCanSendInvoiceCompletedDelegate == null)) {
                this.onCanSendInvoiceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCanSendInvoiceCompleted);
            }
            base.InvokeAsync(this.onBeginCanSendInvoiceDelegate, new object[] {
                        authToken,
                        certHash}, this.onEndCanSendInvoiceDelegate, this.onCanSendInvoiceCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.CertificateValidationResult CheckQualifiedCertificate(byte[] certificate) {
            return base.Channel.CheckQualifiedCertificate(certificate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckQualifiedCertificate(byte[] certificate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckQualifiedCertificate(certificate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.CertificateValidationResult EndCheckQualifiedCertificate(System.IAsyncResult result) {
            return base.Channel.EndCheckQualifiedCertificate(result);
        }
        
        private System.IAsyncResult OnBeginCheckQualifiedCertificate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] certificate = ((byte[])(inValues[0]));
            return this.BeginCheckQualifiedCertificate(certificate, callback, asyncState);
        }
        
        private object[] OnEndCheckQualifiedCertificate(System.IAsyncResult result) {
            Midway.ObjectModel.CertificateValidationResult retVal = this.EndCheckQualifiedCertificate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckQualifiedCertificateCompleted(object state) {
            if ((this.CheckQualifiedCertificateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckQualifiedCertificateCompleted(this, new CheckQualifiedCertificateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckQualifiedCertificateAsync(byte[] certificate) {
            this.CheckQualifiedCertificateAsync(certificate, null);
        }
        
        public void CheckQualifiedCertificateAsync(byte[] certificate, object userState) {
            if ((this.onBeginCheckQualifiedCertificateDelegate == null)) {
                this.onBeginCheckQualifiedCertificateDelegate = new BeginOperationDelegate(this.OnBeginCheckQualifiedCertificate);
            }
            if ((this.onEndCheckQualifiedCertificateDelegate == null)) {
                this.onEndCheckQualifiedCertificateDelegate = new EndOperationDelegate(this.OnEndCheckQualifiedCertificate);
            }
            if ((this.onCheckQualifiedCertificateCompletedDelegate == null)) {
                this.onCheckQualifiedCertificateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckQualifiedCertificateCompleted);
            }
            base.InvokeAsync(this.onBeginCheckQualifiedCertificateDelegate, new object[] {
                        certificate}, this.onEndCheckQualifiedCertificateDelegate, this.onCheckQualifiedCertificateCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.BoxCertificate[] GetBoxCertificates(string authToken) {
            return base.Channel.GetBoxCertificates(authToken);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBoxCertificates(string authToken, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBoxCertificates(authToken, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.BoxCertificate[] EndGetBoxCertificates(System.IAsyncResult result) {
            return base.Channel.EndGetBoxCertificates(result);
        }
        
        private System.IAsyncResult OnBeginGetBoxCertificates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            return this.BeginGetBoxCertificates(authToken, callback, asyncState);
        }
        
        private object[] OnEndGetBoxCertificates(System.IAsyncResult result) {
            Midway.ObjectModel.BoxCertificate[] retVal = this.EndGetBoxCertificates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBoxCertificatesCompleted(object state) {
            if ((this.GetBoxCertificatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBoxCertificatesCompleted(this, new GetBoxCertificatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBoxCertificatesAsync(string authToken) {
            this.GetBoxCertificatesAsync(authToken, null);
        }
        
        public void GetBoxCertificatesAsync(string authToken, object userState) {
            if ((this.onBeginGetBoxCertificatesDelegate == null)) {
                this.onBeginGetBoxCertificatesDelegate = new BeginOperationDelegate(this.OnBeginGetBoxCertificates);
            }
            if ((this.onEndGetBoxCertificatesDelegate == null)) {
                this.onEndGetBoxCertificatesDelegate = new EndOperationDelegate(this.OnEndGetBoxCertificates);
            }
            if ((this.onGetBoxCertificatesCompletedDelegate == null)) {
                this.onGetBoxCertificatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBoxCertificatesCompleted);
            }
            base.InvokeAsync(this.onBeginGetBoxCertificatesDelegate, new object[] {
                        authToken}, this.onEndGetBoxCertificatesDelegate, this.onGetBoxCertificatesCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.ServiceNotice[] GetRequiredNotices(string authToken, string boxId, string certThumbprint) {
            return base.Channel.GetRequiredNotices(authToken, boxId, certThumbprint);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRequiredNotices(string authToken, string boxId, string certThumbprint, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRequiredNotices(authToken, boxId, certThumbprint, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.ServiceNotice[] EndGetRequiredNotices(System.IAsyncResult result) {
            return base.Channel.EndGetRequiredNotices(result);
        }
        
        private System.IAsyncResult OnBeginGetRequiredNotices(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string certThumbprint = ((string)(inValues[2]));
            return this.BeginGetRequiredNotices(authToken, boxId, certThumbprint, callback, asyncState);
        }
        
        private object[] OnEndGetRequiredNotices(System.IAsyncResult result) {
            Midway.ObjectModel.ServiceNotice[] retVal = this.EndGetRequiredNotices(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRequiredNoticesCompleted(object state) {
            if ((this.GetRequiredNoticesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRequiredNoticesCompleted(this, new GetRequiredNoticesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRequiredNoticesAsync(string authToken, string boxId, string certThumbprint) {
            this.GetRequiredNoticesAsync(authToken, boxId, certThumbprint, null);
        }
        
        public void GetRequiredNoticesAsync(string authToken, string boxId, string certThumbprint, object userState) {
            if ((this.onBeginGetRequiredNoticesDelegate == null)) {
                this.onBeginGetRequiredNoticesDelegate = new BeginOperationDelegate(this.OnBeginGetRequiredNotices);
            }
            if ((this.onEndGetRequiredNoticesDelegate == null)) {
                this.onEndGetRequiredNoticesDelegate = new EndOperationDelegate(this.OnEndGetRequiredNotices);
            }
            if ((this.onGetRequiredNoticesCompletedDelegate == null)) {
                this.onGetRequiredNoticesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRequiredNoticesCompleted);
            }
            base.InvokeAsync(this.onBeginGetRequiredNoticesDelegate, new object[] {
                        authToken,
                        boxId,
                        certThumbprint}, this.onEndGetRequiredNoticesDelegate, this.onGetRequiredNoticesCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.EnhancedSign GetEnhancedSign(string authToken, string boxId, byte[] sign) {
            return base.Channel.GetEnhancedSign(authToken, boxId, sign);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEnhancedSign(string authToken, string boxId, byte[] sign, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEnhancedSign(authToken, boxId, sign, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.EnhancedSign EndGetEnhancedSign(System.IAsyncResult result) {
            return base.Channel.EndGetEnhancedSign(result);
        }
        
        private System.IAsyncResult OnBeginGetEnhancedSign(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            byte[] sign = ((byte[])(inValues[2]));
            return this.BeginGetEnhancedSign(authToken, boxId, sign, callback, asyncState);
        }
        
        private object[] OnEndGetEnhancedSign(System.IAsyncResult result) {
            Midway.ObjectModel.EnhancedSign retVal = this.EndGetEnhancedSign(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEnhancedSignCompleted(object state) {
            if ((this.GetEnhancedSignCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEnhancedSignCompleted(this, new GetEnhancedSignCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEnhancedSignAsync(string authToken, string boxId, byte[] sign) {
            this.GetEnhancedSignAsync(authToken, boxId, sign, null);
        }
        
        public void GetEnhancedSignAsync(string authToken, string boxId, byte[] sign, object userState) {
            if ((this.onBeginGetEnhancedSignDelegate == null)) {
                this.onBeginGetEnhancedSignDelegate = new BeginOperationDelegate(this.OnBeginGetEnhancedSign);
            }
            if ((this.onEndGetEnhancedSignDelegate == null)) {
                this.onEndGetEnhancedSignDelegate = new EndOperationDelegate(this.OnEndGetEnhancedSign);
            }
            if ((this.onGetEnhancedSignCompletedDelegate == null)) {
                this.onGetEnhancedSignCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEnhancedSignCompleted);
            }
            base.InvokeAsync(this.onBeginGetEnhancedSignDelegate, new object[] {
                        authToken,
                        boxId,
                        sign}, this.onEndGetEnhancedSignDelegate, this.onGetEnhancedSignCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.EnhancedSign GetEnhancedSignById(string authToken, string boxId, string signId) {
            return base.Channel.GetEnhancedSignById(authToken, boxId, signId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetEnhancedSignById(string authToken, string boxId, string signId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEnhancedSignById(authToken, boxId, signId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.EnhancedSign EndGetEnhancedSignById(System.IAsyncResult result) {
            return base.Channel.EndGetEnhancedSignById(result);
        }
        
        private System.IAsyncResult OnBeginGetEnhancedSignById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string signId = ((string)(inValues[2]));
            return this.BeginGetEnhancedSignById(authToken, boxId, signId, callback, asyncState);
        }
        
        private object[] OnEndGetEnhancedSignById(System.IAsyncResult result) {
            Midway.ObjectModel.EnhancedSign retVal = this.EndGetEnhancedSignById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEnhancedSignByIdCompleted(object state) {
            if ((this.GetEnhancedSignByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEnhancedSignByIdCompleted(this, new GetEnhancedSignByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEnhancedSignByIdAsync(string authToken, string boxId, string signId) {
            this.GetEnhancedSignByIdAsync(authToken, boxId, signId, null);
        }
        
        public void GetEnhancedSignByIdAsync(string authToken, string boxId, string signId, object userState) {
            if ((this.onBeginGetEnhancedSignByIdDelegate == null)) {
                this.onBeginGetEnhancedSignByIdDelegate = new BeginOperationDelegate(this.OnBeginGetEnhancedSignById);
            }
            if ((this.onEndGetEnhancedSignByIdDelegate == null)) {
                this.onEndGetEnhancedSignByIdDelegate = new EndOperationDelegate(this.OnEndGetEnhancedSignById);
            }
            if ((this.onGetEnhancedSignByIdCompletedDelegate == null)) {
                this.onGetEnhancedSignByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEnhancedSignByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetEnhancedSignByIdDelegate, new object[] {
                        authToken,
                        boxId,
                        signId}, this.onEndGetEnhancedSignByIdDelegate, this.onGetEnhancedSignByIdCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.NamedContent DownloadDocumentFlowArchive(string authToken, string boxId, string documentId) {
            return base.Channel.DownloadDocumentFlowArchive(authToken, boxId, documentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDownloadDocumentFlowArchive(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadDocumentFlowArchive(authToken, boxId, documentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.NamedContent EndDownloadDocumentFlowArchive(System.IAsyncResult result) {
            return base.Channel.EndDownloadDocumentFlowArchive(result);
        }
        
        private System.IAsyncResult OnBeginDownloadDocumentFlowArchive(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            return this.BeginDownloadDocumentFlowArchive(authToken, boxId, documentId, callback, asyncState);
        }
        
        private object[] OnEndDownloadDocumentFlowArchive(System.IAsyncResult result) {
            Midway.ObjectModel.NamedContent retVal = this.EndDownloadDocumentFlowArchive(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadDocumentFlowArchiveCompleted(object state) {
            if ((this.DownloadDocumentFlowArchiveCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadDocumentFlowArchiveCompleted(this, new DownloadDocumentFlowArchiveCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadDocumentFlowArchiveAsync(string authToken, string boxId, string documentId) {
            this.DownloadDocumentFlowArchiveAsync(authToken, boxId, documentId, null);
        }
        
        public void DownloadDocumentFlowArchiveAsync(string authToken, string boxId, string documentId, object userState) {
            if ((this.onBeginDownloadDocumentFlowArchiveDelegate == null)) {
                this.onBeginDownloadDocumentFlowArchiveDelegate = new BeginOperationDelegate(this.OnBeginDownloadDocumentFlowArchive);
            }
            if ((this.onEndDownloadDocumentFlowArchiveDelegate == null)) {
                this.onEndDownloadDocumentFlowArchiveDelegate = new EndOperationDelegate(this.OnEndDownloadDocumentFlowArchive);
            }
            if ((this.onDownloadDocumentFlowArchiveCompletedDelegate == null)) {
                this.onDownloadDocumentFlowArchiveCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadDocumentFlowArchiveCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadDocumentFlowArchiveDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId}, this.onEndDownloadDocumentFlowArchiveDelegate, this.onDownloadDocumentFlowArchiveCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.Organization[] GetOrganizationListByInnKpp(string authToken, string inn, string kpp) {
            return base.Channel.GetOrganizationListByInnKpp(authToken, inn, kpp);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetOrganizationListByInnKpp(string authToken, string inn, string kpp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOrganizationListByInnKpp(authToken, inn, kpp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.Organization[] EndGetOrganizationListByInnKpp(System.IAsyncResult result) {
            return base.Channel.EndGetOrganizationListByInnKpp(result);
        }
        
        private System.IAsyncResult OnBeginGetOrganizationListByInnKpp(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string inn = ((string)(inValues[1]));
            string kpp = ((string)(inValues[2]));
            return this.BeginGetOrganizationListByInnKpp(authToken, inn, kpp, callback, asyncState);
        }
        
        private object[] OnEndGetOrganizationListByInnKpp(System.IAsyncResult result) {
            Midway.ObjectModel.Organization[] retVal = this.EndGetOrganizationListByInnKpp(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOrganizationListByInnKppCompleted(object state) {
            if ((this.GetOrganizationListByInnKppCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOrganizationListByInnKppCompleted(this, new GetOrganizationListByInnKppCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOrganizationListByInnKppAsync(string authToken, string inn, string kpp) {
            this.GetOrganizationListByInnKppAsync(authToken, inn, kpp, null);
        }
        
        public void GetOrganizationListByInnKppAsync(string authToken, string inn, string kpp, object userState) {
            if ((this.onBeginGetOrganizationListByInnKppDelegate == null)) {
                this.onBeginGetOrganizationListByInnKppDelegate = new BeginOperationDelegate(this.OnBeginGetOrganizationListByInnKpp);
            }
            if ((this.onEndGetOrganizationListByInnKppDelegate == null)) {
                this.onEndGetOrganizationListByInnKppDelegate = new EndOperationDelegate(this.OnEndGetOrganizationListByInnKpp);
            }
            if ((this.onGetOrganizationListByInnKppCompletedDelegate == null)) {
                this.onGetOrganizationListByInnKppCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOrganizationListByInnKppCompleted);
            }
            base.InvokeAsync(this.onBeginGetOrganizationListByInnKppDelegate, new object[] {
                        authToken,
                        inn,
                        kpp}, this.onEndGetOrganizationListByInnKppDelegate, this.onGetOrganizationListByInnKppCompletedDelegate, userState);
        }
        
        public string[] CheckCertificates(string[] thumbprints) {
            return base.Channel.CheckCertificates(thumbprints);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCheckCertificates(string[] thumbprints, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCheckCertificates(thumbprints, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string[] EndCheckCertificates(System.IAsyncResult result) {
            return base.Channel.EndCheckCertificates(result);
        }
        
        private System.IAsyncResult OnBeginCheckCertificates(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] thumbprints = ((string[])(inValues[0]));
            return this.BeginCheckCertificates(thumbprints, callback, asyncState);
        }
        
        private object[] OnEndCheckCertificates(System.IAsyncResult result) {
            string[] retVal = this.EndCheckCertificates(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCheckCertificatesCompleted(object state) {
            if ((this.CheckCertificatesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CheckCertificatesCompleted(this, new CheckCertificatesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CheckCertificatesAsync(string[] thumbprints) {
            this.CheckCertificatesAsync(thumbprints, null);
        }
        
        public void CheckCertificatesAsync(string[] thumbprints, object userState) {
            if ((this.onBeginCheckCertificatesDelegate == null)) {
                this.onBeginCheckCertificatesDelegate = new BeginOperationDelegate(this.OnBeginCheckCertificates);
            }
            if ((this.onEndCheckCertificatesDelegate == null)) {
                this.onEndCheckCertificatesDelegate = new EndOperationDelegate(this.OnEndCheckCertificates);
            }
            if ((this.onCheckCertificatesCompletedDelegate == null)) {
                this.onCheckCertificatesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCheckCertificatesCompleted);
            }
            base.InvokeAsync(this.onBeginCheckCertificatesDelegate, new object[] {
                        thumbprints}, this.onEndCheckCertificatesDelegate, this.onCheckCertificatesCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.User GetUserInfo(string authToken, string boxId) {
            return base.Channel.GetUserInfo(authToken, boxId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserInfo(string authToken, string boxId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserInfo(authToken, boxId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.User EndGetUserInfo(System.IAsyncResult result) {
            return base.Channel.EndGetUserInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetUserInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            return this.BeginGetUserInfo(authToken, boxId, callback, asyncState);
        }
        
        private object[] OnEndGetUserInfo(System.IAsyncResult result) {
            Midway.ObjectModel.User retVal = this.EndGetUserInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserInfoCompleted(object state) {
            if ((this.GetUserInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserInfoAsync(string authToken, string boxId) {
            this.GetUserInfoAsync(authToken, boxId, null);
        }
        
        public void GetUserInfoAsync(string authToken, string boxId, object userState) {
            if ((this.onBeginGetUserInfoDelegate == null)) {
                this.onBeginGetUserInfoDelegate = new BeginOperationDelegate(this.OnBeginGetUserInfo);
            }
            if ((this.onEndGetUserInfoDelegate == null)) {
                this.onEndGetUserInfoDelegate = new EndOperationDelegate(this.OnEndGetUserInfo);
            }
            if ((this.onGetUserInfoCompletedDelegate == null)) {
                this.onGetUserInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserInfoDelegate, new object[] {
                        authToken,
                        boxId}, this.onEndGetUserInfoDelegate, this.onGetUserInfoCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.RegisterResult Register(Midway.ObjectModel.RegisterModel registerModel, byte[] certificate) {
            return base.Channel.Register(registerModel, certificate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegister(Midway.ObjectModel.RegisterModel registerModel, byte[] certificate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegister(registerModel, certificate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.RegisterResult EndRegister(System.IAsyncResult result) {
            return base.Channel.EndRegister(result);
        }
        
        private System.IAsyncResult OnBeginRegister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.RegisterModel registerModel = ((Midway.ObjectModel.RegisterModel)(inValues[0]));
            byte[] certificate = ((byte[])(inValues[1]));
            return this.BeginRegister(registerModel, certificate, callback, asyncState);
        }
        
        private object[] OnEndRegister(System.IAsyncResult result) {
            Midway.ObjectModel.RegisterResult retVal = this.EndRegister(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterCompleted(object state) {
            if ((this.RegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterAsync(Midway.ObjectModel.RegisterModel registerModel, byte[] certificate) {
            this.RegisterAsync(registerModel, certificate, null);
        }
        
        public void RegisterAsync(Midway.ObjectModel.RegisterModel registerModel, byte[] certificate, object userState) {
            if ((this.onBeginRegisterDelegate == null)) {
                this.onBeginRegisterDelegate = new BeginOperationDelegate(this.OnBeginRegister);
            }
            if ((this.onEndRegisterDelegate == null)) {
                this.onEndRegisterDelegate = new EndOperationDelegate(this.OnEndRegister);
            }
            if ((this.onRegisterCompletedDelegate == null)) {
                this.onRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterDelegate, new object[] {
                        registerModel,
                        certificate}, this.onEndRegisterDelegate, this.onRegisterCompletedDelegate, userState);
        }
        
        public bool AcceptRegulation(string authToken, string boxId, bool acceptRegulation1) {
            return base.Channel.AcceptRegulation(authToken, boxId, acceptRegulation1);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAcceptRegulation(string authToken, string boxId, bool acceptRegulation, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAcceptRegulation(authToken, boxId, acceptRegulation, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAcceptRegulation(System.IAsyncResult result) {
            return base.Channel.EndAcceptRegulation(result);
        }
        
        private System.IAsyncResult OnBeginAcceptRegulation(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            bool acceptRegulation = ((bool)(inValues[2]));
            return this.BeginAcceptRegulation(authToken, boxId, acceptRegulation, callback, asyncState);
        }
        
        private object[] OnEndAcceptRegulation(System.IAsyncResult result) {
            bool retVal = this.EndAcceptRegulation(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAcceptRegulationCompleted(object state) {
            if ((this.AcceptRegulationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AcceptRegulationCompleted(this, new AcceptRegulationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AcceptRegulationAsync(string authToken, string boxId, bool acceptRegulation) {
            this.AcceptRegulationAsync(authToken, boxId, acceptRegulation, null);
        }
        
        public void AcceptRegulationAsync(string authToken, string boxId, bool acceptRegulation, object userState) {
            if ((this.onBeginAcceptRegulationDelegate == null)) {
                this.onBeginAcceptRegulationDelegate = new BeginOperationDelegate(this.OnBeginAcceptRegulation);
            }
            if ((this.onEndAcceptRegulationDelegate == null)) {
                this.onEndAcceptRegulationDelegate = new EndOperationDelegate(this.OnEndAcceptRegulation);
            }
            if ((this.onAcceptRegulationCompletedDelegate == null)) {
                this.onAcceptRegulationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAcceptRegulationCompleted);
            }
            base.InvokeAsync(this.onBeginAcceptRegulationDelegate, new object[] {
                        authToken,
                        boxId,
                        acceptRegulation}, this.onEndAcceptRegulationDelegate, this.onAcceptRegulationCompletedDelegate, userState);
        }
        
        public bool HasQualifiedCertificate(string authToken, string contragentBoxId) {
            return base.Channel.HasQualifiedCertificate(authToken, contragentBoxId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHasQualifiedCertificate(string authToken, string contragentBoxId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHasQualifiedCertificate(authToken, contragentBoxId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndHasQualifiedCertificate(System.IAsyncResult result) {
            return base.Channel.EndHasQualifiedCertificate(result);
        }
        
        private System.IAsyncResult OnBeginHasQualifiedCertificate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string contragentBoxId = ((string)(inValues[1]));
            return this.BeginHasQualifiedCertificate(authToken, contragentBoxId, callback, asyncState);
        }
        
        private object[] OnEndHasQualifiedCertificate(System.IAsyncResult result) {
            bool retVal = this.EndHasQualifiedCertificate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHasQualifiedCertificateCompleted(object state) {
            if ((this.HasQualifiedCertificateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HasQualifiedCertificateCompleted(this, new HasQualifiedCertificateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HasQualifiedCertificateAsync(string authToken, string contragentBoxId) {
            this.HasQualifiedCertificateAsync(authToken, contragentBoxId, null);
        }
        
        public void HasQualifiedCertificateAsync(string authToken, string contragentBoxId, object userState) {
            if ((this.onBeginHasQualifiedCertificateDelegate == null)) {
                this.onBeginHasQualifiedCertificateDelegate = new BeginOperationDelegate(this.OnBeginHasQualifiedCertificate);
            }
            if ((this.onEndHasQualifiedCertificateDelegate == null)) {
                this.onEndHasQualifiedCertificateDelegate = new EndOperationDelegate(this.OnEndHasQualifiedCertificate);
            }
            if ((this.onHasQualifiedCertificateCompletedDelegate == null)) {
                this.onHasQualifiedCertificateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHasQualifiedCertificateCompleted);
            }
            base.InvokeAsync(this.onBeginHasQualifiedCertificateDelegate, new object[] {
                        authToken,
                        contragentBoxId}, this.onEndHasQualifiedCertificateDelegate, this.onHasQualifiedCertificateCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SentMessage SendUnsignedMessage(string authToken, Midway.ObjectModel.UnsignedMessage message) {
            return base.Channel.SendUnsignedMessage(authToken, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendUnsignedMessage(string authToken, Midway.ObjectModel.UnsignedMessage message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendUnsignedMessage(authToken, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SentMessage EndSendUnsignedMessage(System.IAsyncResult result) {
            return base.Channel.EndSendUnsignedMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendUnsignedMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.UnsignedMessage message = ((Midway.ObjectModel.UnsignedMessage)(inValues[1]));
            return this.BeginSendUnsignedMessage(authToken, message, callback, asyncState);
        }
        
        private object[] OnEndSendUnsignedMessage(System.IAsyncResult result) {
            Midway.ObjectModel.SentMessage retVal = this.EndSendUnsignedMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendUnsignedMessageCompleted(object state) {
            if ((this.SendUnsignedMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendUnsignedMessageCompleted(this, new SendUnsignedMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendUnsignedMessageAsync(string authToken, Midway.ObjectModel.UnsignedMessage message) {
            this.SendUnsignedMessageAsync(authToken, message, null);
        }
        
        public void SendUnsignedMessageAsync(string authToken, Midway.ObjectModel.UnsignedMessage message, object userState) {
            if ((this.onBeginSendUnsignedMessageDelegate == null)) {
                this.onBeginSendUnsignedMessageDelegate = new BeginOperationDelegate(this.OnBeginSendUnsignedMessage);
            }
            if ((this.onEndSendUnsignedMessageDelegate == null)) {
                this.onEndSendUnsignedMessageDelegate = new EndOperationDelegate(this.OnEndSendUnsignedMessage);
            }
            if ((this.onSendUnsignedMessageCompletedDelegate == null)) {
                this.onSendUnsignedMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendUnsignedMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendUnsignedMessageDelegate, new object[] {
                        authToken,
                        message}, this.onEndSendUnsignedMessageDelegate, this.onSendUnsignedMessageCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SentMessage SendForwardMessage(string authToken, Midway.ObjectModel.ForwardMessage message) {
            return base.Channel.SendForwardMessage(authToken, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendForwardMessage(string authToken, Midway.ObjectModel.ForwardMessage message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendForwardMessage(authToken, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SentMessage EndSendForwardMessage(System.IAsyncResult result) {
            return base.Channel.EndSendForwardMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendForwardMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.ForwardMessage message = ((Midway.ObjectModel.ForwardMessage)(inValues[1]));
            return this.BeginSendForwardMessage(authToken, message, callback, asyncState);
        }
        
        private object[] OnEndSendForwardMessage(System.IAsyncResult result) {
            Midway.ObjectModel.SentMessage retVal = this.EndSendForwardMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendForwardMessageCompleted(object state) {
            if ((this.SendForwardMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendForwardMessageCompleted(this, new SendForwardMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendForwardMessageAsync(string authToken, Midway.ObjectModel.ForwardMessage message) {
            this.SendForwardMessageAsync(authToken, message, null);
        }
        
        public void SendForwardMessageAsync(string authToken, Midway.ObjectModel.ForwardMessage message, object userState) {
            if ((this.onBeginSendForwardMessageDelegate == null)) {
                this.onBeginSendForwardMessageDelegate = new BeginOperationDelegate(this.OnBeginSendForwardMessage);
            }
            if ((this.onEndSendForwardMessageDelegate == null)) {
                this.onEndSendForwardMessageDelegate = new EndOperationDelegate(this.OnEndSendForwardMessage);
            }
            if ((this.onSendForwardMessageCompletedDelegate == null)) {
                this.onSendForwardMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendForwardMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendForwardMessageDelegate, new object[] {
                        authToken,
                        message}, this.onEndSendForwardMessageDelegate, this.onSendForwardMessageCompletedDelegate, userState);
        }
        
        public void SignDocument(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.Sign sign) {
            base.Channel.SignDocument(authToken, flowType, sign);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSignDocument(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.Sign sign, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSignDocument(authToken, flowType, sign, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSignDocument(System.IAsyncResult result) {
            base.Channel.EndSignDocument(result);
        }
        
        private System.IAsyncResult OnBeginSignDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.FlowType flowType = ((Midway.ObjectModel.FlowType)(inValues[1]));
            Midway.ObjectModel.Sign sign = ((Midway.ObjectModel.Sign)(inValues[2]));
            return this.BeginSignDocument(authToken, flowType, sign, callback, asyncState);
        }
        
        private object[] OnEndSignDocument(System.IAsyncResult result) {
            this.EndSignDocument(result);
            return null;
        }
        
        private void OnSignDocumentCompleted(object state) {
            if ((this.SignDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SignDocumentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SignDocumentAsync(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.Sign sign) {
            this.SignDocumentAsync(authToken, flowType, sign, null);
        }
        
        public void SignDocumentAsync(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.Sign sign, object userState) {
            if ((this.onBeginSignDocumentDelegate == null)) {
                this.onBeginSignDocumentDelegate = new BeginOperationDelegate(this.OnBeginSignDocument);
            }
            if ((this.onEndSignDocumentDelegate == null)) {
                this.onEndSignDocumentDelegate = new EndOperationDelegate(this.OnEndSignDocument);
            }
            if ((this.onSignDocumentCompletedDelegate == null)) {
                this.onSignDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSignDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginSignDocumentDelegate, new object[] {
                        authToken,
                        flowType,
                        sign}, this.onEndSignDocumentDelegate, this.onSignDocumentCompletedDelegate, userState);
        }
        
        public void SignDocumentWithSimpleSignature(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.SimpleSignature signature) {
            base.Channel.SignDocumentWithSimpleSignature(authToken, flowType, signature);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSignDocumentWithSimpleSignature(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.SimpleSignature signature, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSignDocumentWithSimpleSignature(authToken, flowType, signature, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSignDocumentWithSimpleSignature(System.IAsyncResult result) {
            base.Channel.EndSignDocumentWithSimpleSignature(result);
        }
        
        private System.IAsyncResult OnBeginSignDocumentWithSimpleSignature(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.FlowType flowType = ((Midway.ObjectModel.FlowType)(inValues[1]));
            Midway.ObjectModel.SimpleSignature signature = ((Midway.ObjectModel.SimpleSignature)(inValues[2]));
            return this.BeginSignDocumentWithSimpleSignature(authToken, flowType, signature, callback, asyncState);
        }
        
        private object[] OnEndSignDocumentWithSimpleSignature(System.IAsyncResult result) {
            this.EndSignDocumentWithSimpleSignature(result);
            return null;
        }
        
        private void OnSignDocumentWithSimpleSignatureCompleted(object state) {
            if ((this.SignDocumentWithSimpleSignatureCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SignDocumentWithSimpleSignatureCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SignDocumentWithSimpleSignatureAsync(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.SimpleSignature signature) {
            this.SignDocumentWithSimpleSignatureAsync(authToken, flowType, signature, null);
        }
        
        public void SignDocumentWithSimpleSignatureAsync(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.SimpleSignature signature, object userState) {
            if ((this.onBeginSignDocumentWithSimpleSignatureDelegate == null)) {
                this.onBeginSignDocumentWithSimpleSignatureDelegate = new BeginOperationDelegate(this.OnBeginSignDocumentWithSimpleSignature);
            }
            if ((this.onEndSignDocumentWithSimpleSignatureDelegate == null)) {
                this.onEndSignDocumentWithSimpleSignatureDelegate = new EndOperationDelegate(this.OnEndSignDocumentWithSimpleSignature);
            }
            if ((this.onSignDocumentWithSimpleSignatureCompletedDelegate == null)) {
                this.onSignDocumentWithSimpleSignatureCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSignDocumentWithSimpleSignatureCompleted);
            }
            base.InvokeAsync(this.onBeginSignDocumentWithSimpleSignatureDelegate, new object[] {
                        authToken,
                        flowType,
                        signature}, this.onEndSignDocumentWithSimpleSignatureDelegate, this.onSignDocumentWithSimpleSignatureCompletedDelegate, userState);
        }
        
        public void RejectSign(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.RejectSign rejectSign1) {
            base.Channel.RejectSign(authToken, flowType, rejectSign1);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRejectSign(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.RejectSign rejectSign, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRejectSign(authToken, flowType, rejectSign, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndRejectSign(System.IAsyncResult result) {
            base.Channel.EndRejectSign(result);
        }
        
        private System.IAsyncResult OnBeginRejectSign(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.FlowType flowType = ((Midway.ObjectModel.FlowType)(inValues[1]));
            Midway.ObjectModel.RejectSign rejectSign = ((Midway.ObjectModel.RejectSign)(inValues[2]));
            return this.BeginRejectSign(authToken, flowType, rejectSign, callback, asyncState);
        }
        
        private object[] OnEndRejectSign(System.IAsyncResult result) {
            this.EndRejectSign(result);
            return null;
        }
        
        private void OnRejectSignCompleted(object state) {
            if ((this.RejectSignCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RejectSignCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RejectSignAsync(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.RejectSign rejectSign) {
            this.RejectSignAsync(authToken, flowType, rejectSign, null);
        }
        
        public void RejectSignAsync(string authToken, Midway.ObjectModel.FlowType flowType, Midway.ObjectModel.RejectSign rejectSign, object userState) {
            if ((this.onBeginRejectSignDelegate == null)) {
                this.onBeginRejectSignDelegate = new BeginOperationDelegate(this.OnBeginRejectSign);
            }
            if ((this.onEndRejectSignDelegate == null)) {
                this.onEndRejectSignDelegate = new EndOperationDelegate(this.OnEndRejectSign);
            }
            if ((this.onRejectSignCompletedDelegate == null)) {
                this.onRejectSignCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRejectSignCompleted);
            }
            base.InvokeAsync(this.onBeginRejectSignDelegate, new object[] {
                        authToken,
                        flowType,
                        rejectSign}, this.onEndRejectSignDelegate, this.onRejectSignCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentEntryList GetDocumentEntries(string authToken, Midway.ObjectModel.DocumentEntryOptions options) {
            return base.Channel.GetDocumentEntries(authToken, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDocumentEntries(string authToken, Midway.ObjectModel.DocumentEntryOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDocumentEntries(authToken, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentEntryList EndGetDocumentEntries(System.IAsyncResult result) {
            return base.Channel.EndGetDocumentEntries(result);
        }
        
        private System.IAsyncResult OnBeginGetDocumentEntries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.DocumentEntryOptions options = ((Midway.ObjectModel.DocumentEntryOptions)(inValues[1]));
            return this.BeginGetDocumentEntries(authToken, options, callback, asyncState);
        }
        
        private object[] OnEndGetDocumentEntries(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentEntryList retVal = this.EndGetDocumentEntries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDocumentEntriesCompleted(object state) {
            if ((this.GetDocumentEntriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDocumentEntriesCompleted(this, new GetDocumentEntriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDocumentEntriesAsync(string authToken, Midway.ObjectModel.DocumentEntryOptions options) {
            this.GetDocumentEntriesAsync(authToken, options, null);
        }
        
        public void GetDocumentEntriesAsync(string authToken, Midway.ObjectModel.DocumentEntryOptions options, object userState) {
            if ((this.onBeginGetDocumentEntriesDelegate == null)) {
                this.onBeginGetDocumentEntriesDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentEntries);
            }
            if ((this.onEndGetDocumentEntriesDelegate == null)) {
                this.onEndGetDocumentEntriesDelegate = new EndOperationDelegate(this.OnEndGetDocumentEntries);
            }
            if ((this.onGetDocumentEntriesCompletedDelegate == null)) {
                this.onGetDocumentEntriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentEntriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetDocumentEntriesDelegate, new object[] {
                        authToken,
                        options}, this.onEndGetDocumentEntriesDelegate, this.onGetDocumentEntriesCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.FlowDocumentInfo GetFlowDocumentInfo(string authToken, string boxId, string documentId, Midway.ObjectModel.FlowDocumentInfoRequestParams requestParams) {
            return base.Channel.GetFlowDocumentInfo(authToken, boxId, documentId, requestParams);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetFlowDocumentInfo(string authToken, string boxId, string documentId, Midway.ObjectModel.FlowDocumentInfoRequestParams requestParams, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetFlowDocumentInfo(authToken, boxId, documentId, requestParams, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.FlowDocumentInfo EndGetFlowDocumentInfo(System.IAsyncResult result) {
            return base.Channel.EndGetFlowDocumentInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetFlowDocumentInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            Midway.ObjectModel.FlowDocumentInfoRequestParams requestParams = ((Midway.ObjectModel.FlowDocumentInfoRequestParams)(inValues[3]));
            return this.BeginGetFlowDocumentInfo(authToken, boxId, documentId, requestParams, callback, asyncState);
        }
        
        private object[] OnEndGetFlowDocumentInfo(System.IAsyncResult result) {
            Midway.ObjectModel.FlowDocumentInfo retVal = this.EndGetFlowDocumentInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetFlowDocumentInfoCompleted(object state) {
            if ((this.GetFlowDocumentInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetFlowDocumentInfoCompleted(this, new GetFlowDocumentInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetFlowDocumentInfoAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.FlowDocumentInfoRequestParams requestParams) {
            this.GetFlowDocumentInfoAsync(authToken, boxId, documentId, requestParams, null);
        }
        
        public void GetFlowDocumentInfoAsync(string authToken, string boxId, string documentId, Midway.ObjectModel.FlowDocumentInfoRequestParams requestParams, object userState) {
            if ((this.onBeginGetFlowDocumentInfoDelegate == null)) {
                this.onBeginGetFlowDocumentInfoDelegate = new BeginOperationDelegate(this.OnBeginGetFlowDocumentInfo);
            }
            if ((this.onEndGetFlowDocumentInfoDelegate == null)) {
                this.onEndGetFlowDocumentInfoDelegate = new EndOperationDelegate(this.OnEndGetFlowDocumentInfo);
            }
            if ((this.onGetFlowDocumentInfoCompletedDelegate == null)) {
                this.onGetFlowDocumentInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetFlowDocumentInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetFlowDocumentInfoDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        requestParams}, this.onEndGetFlowDocumentInfoDelegate, this.onGetFlowDocumentInfoCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.SentMessage SendInternalMessage(string authToken, Midway.ObjectModel.InternalMessage message) {
            return base.Channel.SendInternalMessage(authToken, message);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendInternalMessage(string authToken, Midway.ObjectModel.InternalMessage message, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendInternalMessage(authToken, message, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.SentMessage EndSendInternalMessage(System.IAsyncResult result) {
            return base.Channel.EndSendInternalMessage(result);
        }
        
        private System.IAsyncResult OnBeginSendInternalMessage(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.InternalMessage message = ((Midway.ObjectModel.InternalMessage)(inValues[1]));
            return this.BeginSendInternalMessage(authToken, message, callback, asyncState);
        }
        
        private object[] OnEndSendInternalMessage(System.IAsyncResult result) {
            Midway.ObjectModel.SentMessage retVal = this.EndSendInternalMessage(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendInternalMessageCompleted(object state) {
            if ((this.SendInternalMessageCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendInternalMessageCompleted(this, new SendInternalMessageCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendInternalMessageAsync(string authToken, Midway.ObjectModel.InternalMessage message) {
            this.SendInternalMessageAsync(authToken, message, null);
        }
        
        public void SendInternalMessageAsync(string authToken, Midway.ObjectModel.InternalMessage message, object userState) {
            if ((this.onBeginSendInternalMessageDelegate == null)) {
                this.onBeginSendInternalMessageDelegate = new BeginOperationDelegate(this.OnBeginSendInternalMessage);
            }
            if ((this.onEndSendInternalMessageDelegate == null)) {
                this.onEndSendInternalMessageDelegate = new EndOperationDelegate(this.OnEndSendInternalMessage);
            }
            if ((this.onSendInternalMessageCompletedDelegate == null)) {
                this.onSendInternalMessageCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendInternalMessageCompleted);
            }
            base.InvokeAsync(this.onBeginSendInternalMessageDelegate, new object[] {
                        authToken,
                        message}, this.onEndSendInternalMessageDelegate, this.onSendInternalMessageCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentEntryList GetInternalDocuments(string authToken, Midway.ObjectModel.InternalListOptions options) {
            return base.Channel.GetInternalDocuments(authToken, options);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetInternalDocuments(string authToken, Midway.ObjectModel.InternalListOptions options, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetInternalDocuments(authToken, options, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentEntryList EndGetInternalDocuments(System.IAsyncResult result) {
            return base.Channel.EndGetInternalDocuments(result);
        }
        
        private System.IAsyncResult OnBeginGetInternalDocuments(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.InternalListOptions options = ((Midway.ObjectModel.InternalListOptions)(inValues[1]));
            return this.BeginGetInternalDocuments(authToken, options, callback, asyncState);
        }
        
        private object[] OnEndGetInternalDocuments(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentEntryList retVal = this.EndGetInternalDocuments(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetInternalDocumentsCompleted(object state) {
            if ((this.GetInternalDocumentsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetInternalDocumentsCompleted(this, new GetInternalDocumentsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetInternalDocumentsAsync(string authToken, Midway.ObjectModel.InternalListOptions options) {
            this.GetInternalDocumentsAsync(authToken, options, null);
        }
        
        public void GetInternalDocumentsAsync(string authToken, Midway.ObjectModel.InternalListOptions options, object userState) {
            if ((this.onBeginGetInternalDocumentsDelegate == null)) {
                this.onBeginGetInternalDocumentsDelegate = new BeginOperationDelegate(this.OnBeginGetInternalDocuments);
            }
            if ((this.onEndGetInternalDocumentsDelegate == null)) {
                this.onEndGetInternalDocumentsDelegate = new EndOperationDelegate(this.OnEndGetInternalDocuments);
            }
            if ((this.onGetInternalDocumentsCompletedDelegate == null)) {
                this.onGetInternalDocumentsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetInternalDocumentsCompleted);
            }
            base.InvokeAsync(this.onBeginGetInternalDocumentsDelegate, new object[] {
                        authToken,
                        options}, this.onEndGetInternalDocumentsDelegate, this.onGetInternalDocumentsCompletedDelegate, userState);
        }
        
        public bool MoveDocumentToDepartment(string authToken, string boxId, string documentId, string departmentId) {
            return base.Channel.MoveDocumentToDepartment(authToken, boxId, documentId, departmentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMoveDocumentToDepartment(string authToken, string boxId, string documentId, string departmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveDocumentToDepartment(authToken, boxId, documentId, departmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndMoveDocumentToDepartment(System.IAsyncResult result) {
            return base.Channel.EndMoveDocumentToDepartment(result);
        }
        
        private System.IAsyncResult OnBeginMoveDocumentToDepartment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            string departmentId = ((string)(inValues[3]));
            return this.BeginMoveDocumentToDepartment(authToken, boxId, documentId, departmentId, callback, asyncState);
        }
        
        private object[] OnEndMoveDocumentToDepartment(System.IAsyncResult result) {
            bool retVal = this.EndMoveDocumentToDepartment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoveDocumentToDepartmentCompleted(object state) {
            if ((this.MoveDocumentToDepartmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveDocumentToDepartmentCompleted(this, new MoveDocumentToDepartmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveDocumentToDepartmentAsync(string authToken, string boxId, string documentId, string departmentId) {
            this.MoveDocumentToDepartmentAsync(authToken, boxId, documentId, departmentId, null);
        }
        
        public void MoveDocumentToDepartmentAsync(string authToken, string boxId, string documentId, string departmentId, object userState) {
            if ((this.onBeginMoveDocumentToDepartmentDelegate == null)) {
                this.onBeginMoveDocumentToDepartmentDelegate = new BeginOperationDelegate(this.OnBeginMoveDocumentToDepartment);
            }
            if ((this.onEndMoveDocumentToDepartmentDelegate == null)) {
                this.onEndMoveDocumentToDepartmentDelegate = new EndOperationDelegate(this.OnEndMoveDocumentToDepartment);
            }
            if ((this.onMoveDocumentToDepartmentCompletedDelegate == null)) {
                this.onMoveDocumentToDepartmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveDocumentToDepartmentCompleted);
            }
            base.InvokeAsync(this.onBeginMoveDocumentToDepartmentDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId,
                        departmentId}, this.onEndMoveDocumentToDepartmentDelegate, this.onMoveDocumentToDepartmentCompletedDelegate, userState);
        }
        
        public string[] MoveDocumentsToDepartment(string authToken, string boxId, string[] documentIds, string departmentId) {
            return base.Channel.MoveDocumentsToDepartment(authToken, boxId, documentIds, departmentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMoveDocumentsToDepartment(string authToken, string boxId, string[] documentIds, string departmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveDocumentsToDepartment(authToken, boxId, documentIds, departmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string[] EndMoveDocumentsToDepartment(System.IAsyncResult result) {
            return base.Channel.EndMoveDocumentsToDepartment(result);
        }
        
        private System.IAsyncResult OnBeginMoveDocumentsToDepartment(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string[] documentIds = ((string[])(inValues[2]));
            string departmentId = ((string)(inValues[3]));
            return this.BeginMoveDocumentsToDepartment(authToken, boxId, documentIds, departmentId, callback, asyncState);
        }
        
        private object[] OnEndMoveDocumentsToDepartment(System.IAsyncResult result) {
            string[] retVal = this.EndMoveDocumentsToDepartment(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoveDocumentsToDepartmentCompleted(object state) {
            if ((this.MoveDocumentsToDepartmentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveDocumentsToDepartmentCompleted(this, new MoveDocumentsToDepartmentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveDocumentsToDepartmentAsync(string authToken, string boxId, string[] documentIds, string departmentId) {
            this.MoveDocumentsToDepartmentAsync(authToken, boxId, documentIds, departmentId, null);
        }
        
        public void MoveDocumentsToDepartmentAsync(string authToken, string boxId, string[] documentIds, string departmentId, object userState) {
            if ((this.onBeginMoveDocumentsToDepartmentDelegate == null)) {
                this.onBeginMoveDocumentsToDepartmentDelegate = new BeginOperationDelegate(this.OnBeginMoveDocumentsToDepartment);
            }
            if ((this.onEndMoveDocumentsToDepartmentDelegate == null)) {
                this.onEndMoveDocumentsToDepartmentDelegate = new EndOperationDelegate(this.OnEndMoveDocumentsToDepartment);
            }
            if ((this.onMoveDocumentsToDepartmentCompletedDelegate == null)) {
                this.onMoveDocumentsToDepartmentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveDocumentsToDepartmentCompleted);
            }
            base.InvokeAsync(this.onBeginMoveDocumentsToDepartmentDelegate, new object[] {
                        authToken,
                        boxId,
                        documentIds,
                        departmentId}, this.onEndMoveDocumentsToDepartmentDelegate, this.onMoveDocumentsToDepartmentCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentMovingResponse MoveDocument(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentMovingRequest request) {
            return base.Channel.MoveDocument(credentials, request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginMoveDocument(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentMovingRequest request, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMoveDocument(credentials, request, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentMovingResponse EndMoveDocument(System.IAsyncResult result) {
            return base.Channel.EndMoveDocument(result);
        }
        
        private System.IAsyncResult OnBeginMoveDocument(object[] inValues, System.AsyncCallback callback, object asyncState) {
            Midway.ObjectModel.EmployeeOperationCredentials credentials = ((Midway.ObjectModel.EmployeeOperationCredentials)(inValues[0]));
            Midway.ObjectModel.DocumentMovingRequest request = ((Midway.ObjectModel.DocumentMovingRequest)(inValues[1]));
            return this.BeginMoveDocument(credentials, request, callback, asyncState);
        }
        
        private object[] OnEndMoveDocument(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentMovingResponse retVal = this.EndMoveDocument(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMoveDocumentCompleted(object state) {
            if ((this.MoveDocumentCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MoveDocumentCompleted(this, new MoveDocumentCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MoveDocumentAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentMovingRequest request) {
            this.MoveDocumentAsync(credentials, request, null);
        }
        
        public void MoveDocumentAsync(Midway.ObjectModel.EmployeeOperationCredentials credentials, Midway.ObjectModel.DocumentMovingRequest request, object userState) {
            if ((this.onBeginMoveDocumentDelegate == null)) {
                this.onBeginMoveDocumentDelegate = new BeginOperationDelegate(this.OnBeginMoveDocument);
            }
            if ((this.onEndMoveDocumentDelegate == null)) {
                this.onEndMoveDocumentDelegate = new EndOperationDelegate(this.OnEndMoveDocument);
            }
            if ((this.onMoveDocumentCompletedDelegate == null)) {
                this.onMoveDocumentCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMoveDocumentCompleted);
            }
            base.InvokeAsync(this.onBeginMoveDocumentDelegate, new object[] {
                        credentials,
                        request}, this.onEndMoveDocumentDelegate, this.onMoveDocumentCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.User[] GetDepartmentEmployees(string authToken, string boxId, string departmentId) {
            return base.Channel.GetDepartmentEmployees(authToken, boxId, departmentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDepartmentEmployees(string authToken, string boxId, string departmentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDepartmentEmployees(authToken, boxId, departmentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.User[] EndGetDepartmentEmployees(System.IAsyncResult result) {
            return base.Channel.EndGetDepartmentEmployees(result);
        }
        
        private System.IAsyncResult OnBeginGetDepartmentEmployees(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string departmentId = ((string)(inValues[2]));
            return this.BeginGetDepartmentEmployees(authToken, boxId, departmentId, callback, asyncState);
        }
        
        private object[] OnEndGetDepartmentEmployees(System.IAsyncResult result) {
            Midway.ObjectModel.User[] retVal = this.EndGetDepartmentEmployees(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDepartmentEmployeesCompleted(object state) {
            if ((this.GetDepartmentEmployeesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDepartmentEmployeesCompleted(this, new GetDepartmentEmployeesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDepartmentEmployeesAsync(string authToken, string boxId, string departmentId) {
            this.GetDepartmentEmployeesAsync(authToken, boxId, departmentId, null);
        }
        
        public void GetDepartmentEmployeesAsync(string authToken, string boxId, string departmentId, object userState) {
            if ((this.onBeginGetDepartmentEmployeesDelegate == null)) {
                this.onBeginGetDepartmentEmployeesDelegate = new BeginOperationDelegate(this.OnBeginGetDepartmentEmployees);
            }
            if ((this.onEndGetDepartmentEmployeesDelegate == null)) {
                this.onEndGetDepartmentEmployeesDelegate = new EndOperationDelegate(this.OnEndGetDepartmentEmployees);
            }
            if ((this.onGetDepartmentEmployeesCompletedDelegate == null)) {
                this.onGetDepartmentEmployeesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDepartmentEmployeesCompleted);
            }
            base.InvokeAsync(this.onBeginGetDepartmentEmployeesDelegate, new object[] {
                        authToken,
                        boxId,
                        departmentId}, this.onEndGetDepartmentEmployeesDelegate, this.onGetDepartmentEmployeesCompletedDelegate, userState);
        }
        
        public string CreateDocumentTag(string authToken, Midway.ObjectModel.DocumentTag documentTag) {
            return base.Channel.CreateDocumentTag(authToken, documentTag);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateDocumentTag(string authToken, Midway.ObjectModel.DocumentTag documentTag, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateDocumentTag(authToken, documentTag, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndCreateDocumentTag(System.IAsyncResult result) {
            return base.Channel.EndCreateDocumentTag(result);
        }
        
        private System.IAsyncResult OnBeginCreateDocumentTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            Midway.ObjectModel.DocumentTag documentTag = ((Midway.ObjectModel.DocumentTag)(inValues[1]));
            return this.BeginCreateDocumentTag(authToken, documentTag, callback, asyncState);
        }
        
        private object[] OnEndCreateDocumentTag(System.IAsyncResult result) {
            string retVal = this.EndCreateDocumentTag(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateDocumentTagCompleted(object state) {
            if ((this.CreateDocumentTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateDocumentTagCompleted(this, new CreateDocumentTagCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateDocumentTagAsync(string authToken, Midway.ObjectModel.DocumentTag documentTag) {
            this.CreateDocumentTagAsync(authToken, documentTag, null);
        }
        
        public void CreateDocumentTagAsync(string authToken, Midway.ObjectModel.DocumentTag documentTag, object userState) {
            if ((this.onBeginCreateDocumentTagDelegate == null)) {
                this.onBeginCreateDocumentTagDelegate = new BeginOperationDelegate(this.OnBeginCreateDocumentTag);
            }
            if ((this.onEndCreateDocumentTagDelegate == null)) {
                this.onEndCreateDocumentTagDelegate = new EndOperationDelegate(this.OnEndCreateDocumentTag);
            }
            if ((this.onCreateDocumentTagCompletedDelegate == null)) {
                this.onCreateDocumentTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateDocumentTagCompleted);
            }
            base.InvokeAsync(this.onBeginCreateDocumentTagDelegate, new object[] {
                        authToken,
                        documentTag}, this.onEndCreateDocumentTagDelegate, this.onCreateDocumentTagCompletedDelegate, userState);
        }
        
        public void DeleteDocumentTag(string authToken, string documentTagId) {
            base.Channel.DeleteDocumentTag(authToken, documentTagId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDocumentTag(string authToken, string documentTagId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDocumentTag(authToken, documentTagId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDeleteDocumentTag(System.IAsyncResult result) {
            base.Channel.EndDeleteDocumentTag(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDocumentTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string documentTagId = ((string)(inValues[1]));
            return this.BeginDeleteDocumentTag(authToken, documentTagId, callback, asyncState);
        }
        
        private object[] OnEndDeleteDocumentTag(System.IAsyncResult result) {
            this.EndDeleteDocumentTag(result);
            return null;
        }
        
        private void OnDeleteDocumentTagCompleted(object state) {
            if ((this.DeleteDocumentTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDocumentTagCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDocumentTagAsync(string authToken, string documentTagId) {
            this.DeleteDocumentTagAsync(authToken, documentTagId, null);
        }
        
        public void DeleteDocumentTagAsync(string authToken, string documentTagId, object userState) {
            if ((this.onBeginDeleteDocumentTagDelegate == null)) {
                this.onBeginDeleteDocumentTagDelegate = new BeginOperationDelegate(this.OnBeginDeleteDocumentTag);
            }
            if ((this.onEndDeleteDocumentTagDelegate == null)) {
                this.onEndDeleteDocumentTagDelegate = new EndOperationDelegate(this.OnEndDeleteDocumentTag);
            }
            if ((this.onDeleteDocumentTagCompletedDelegate == null)) {
                this.onDeleteDocumentTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDocumentTagCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDocumentTagDelegate, new object[] {
                        authToken,
                        documentTagId}, this.onEndDeleteDocumentTagDelegate, this.onDeleteDocumentTagCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentTag GetDocumentTag(string authToken, string documentTagId) {
            return base.Channel.GetDocumentTag(authToken, documentTagId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDocumentTag(string authToken, string documentTagId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDocumentTag(authToken, documentTagId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentTag EndGetDocumentTag(System.IAsyncResult result) {
            return base.Channel.EndGetDocumentTag(result);
        }
        
        private System.IAsyncResult OnBeginGetDocumentTag(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string documentTagId = ((string)(inValues[1]));
            return this.BeginGetDocumentTag(authToken, documentTagId, callback, asyncState);
        }
        
        private object[] OnEndGetDocumentTag(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentTag retVal = this.EndGetDocumentTag(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDocumentTagCompleted(object state) {
            if ((this.GetDocumentTagCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDocumentTagCompleted(this, new GetDocumentTagCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDocumentTagAsync(string authToken, string documentTagId) {
            this.GetDocumentTagAsync(authToken, documentTagId, null);
        }
        
        public void GetDocumentTagAsync(string authToken, string documentTagId, object userState) {
            if ((this.onBeginGetDocumentTagDelegate == null)) {
                this.onBeginGetDocumentTagDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentTag);
            }
            if ((this.onEndGetDocumentTagDelegate == null)) {
                this.onEndGetDocumentTagDelegate = new EndOperationDelegate(this.OnEndGetDocumentTag);
            }
            if ((this.onGetDocumentTagCompletedDelegate == null)) {
                this.onGetDocumentTagCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentTagCompleted);
            }
            base.InvokeAsync(this.onBeginGetDocumentTagDelegate, new object[] {
                        authToken,
                        documentTagId}, this.onEndGetDocumentTagDelegate, this.onGetDocumentTagCompletedDelegate, userState);
        }
        
        public Midway.ObjectModel.DocumentTag[] GetDocumentTagList(string authToken, string boxId, string documentId) {
            return base.Channel.GetDocumentTagList(authToken, boxId, documentId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDocumentTagList(string authToken, string boxId, string documentId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDocumentTagList(authToken, boxId, documentId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public Midway.ObjectModel.DocumentTag[] EndGetDocumentTagList(System.IAsyncResult result) {
            return base.Channel.EndGetDocumentTagList(result);
        }
        
        private System.IAsyncResult OnBeginGetDocumentTagList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string documentId = ((string)(inValues[2]));
            return this.BeginGetDocumentTagList(authToken, boxId, documentId, callback, asyncState);
        }
        
        private object[] OnEndGetDocumentTagList(System.IAsyncResult result) {
            Midway.ObjectModel.DocumentTag[] retVal = this.EndGetDocumentTagList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDocumentTagListCompleted(object state) {
            if ((this.GetDocumentTagListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDocumentTagListCompleted(this, new GetDocumentTagListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDocumentTagListAsync(string authToken, string boxId, string documentId) {
            this.GetDocumentTagListAsync(authToken, boxId, documentId, null);
        }
        
        public void GetDocumentTagListAsync(string authToken, string boxId, string documentId, object userState) {
            if ((this.onBeginGetDocumentTagListDelegate == null)) {
                this.onBeginGetDocumentTagListDelegate = new BeginOperationDelegate(this.OnBeginGetDocumentTagList);
            }
            if ((this.onEndGetDocumentTagListDelegate == null)) {
                this.onEndGetDocumentTagListDelegate = new EndOperationDelegate(this.OnEndGetDocumentTagList);
            }
            if ((this.onGetDocumentTagListCompletedDelegate == null)) {
                this.onGetDocumentTagListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDocumentTagListCompleted);
            }
            base.InvokeAsync(this.onBeginGetDocumentTagListDelegate, new object[] {
                        authToken,
                        boxId,
                        documentId}, this.onEndGetDocumentTagListDelegate, this.onGetDocumentTagListCompletedDelegate, userState);
        }
        
        public void AddOrganizationPromoCode(string authToken, string boxId, string promoCodeName) {
            base.Channel.AddOrganizationPromoCode(authToken, boxId, promoCodeName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAddOrganizationPromoCode(string authToken, string boxId, string promoCodeName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddOrganizationPromoCode(authToken, boxId, promoCodeName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndAddOrganizationPromoCode(System.IAsyncResult result) {
            base.Channel.EndAddOrganizationPromoCode(result);
        }
        
        private System.IAsyncResult OnBeginAddOrganizationPromoCode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string authToken = ((string)(inValues[0]));
            string boxId = ((string)(inValues[1]));
            string promoCodeName = ((string)(inValues[2]));
            return this.BeginAddOrganizationPromoCode(authToken, boxId, promoCodeName, callback, asyncState);
        }
        
        private object[] OnEndAddOrganizationPromoCode(System.IAsyncResult result) {
            this.EndAddOrganizationPromoCode(result);
            return null;
        }
        
        private void OnAddOrganizationPromoCodeCompleted(object state) {
            if ((this.AddOrganizationPromoCodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddOrganizationPromoCodeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddOrganizationPromoCodeAsync(string authToken, string boxId, string promoCodeName) {
            this.AddOrganizationPromoCodeAsync(authToken, boxId, promoCodeName, null);
        }
        
        public void AddOrganizationPromoCodeAsync(string authToken, string boxId, string promoCodeName, object userState) {
            if ((this.onBeginAddOrganizationPromoCodeDelegate == null)) {
                this.onBeginAddOrganizationPromoCodeDelegate = new BeginOperationDelegate(this.OnBeginAddOrganizationPromoCode);
            }
            if ((this.onEndAddOrganizationPromoCodeDelegate == null)) {
                this.onEndAddOrganizationPromoCodeDelegate = new EndOperationDelegate(this.OnEndAddOrganizationPromoCode);
            }
            if ((this.onAddOrganizationPromoCodeCompletedDelegate == null)) {
                this.onAddOrganizationPromoCodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddOrganizationPromoCodeCompleted);
            }
            base.InvokeAsync(this.onBeginAddOrganizationPromoCodeDelegate, new object[] {
                        authToken,
                        boxId,
                        promoCodeName}, this.onEndAddOrganizationPromoCodeDelegate, this.onAddOrganizationPromoCodeCompletedDelegate, userState);
        }
    }
}
